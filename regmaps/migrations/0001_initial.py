# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-10-26 16:05
from __future__ import unicode_literals

import uuid

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="RegElement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, help_text="UUID of regulatory element", unique=True
                    ),
                ),
                ("release", models.CharField(max_length=32)),
                ("chromosome", models.CharField(max_length=32)),
                ("start", models.IntegerField()),
                ("end", models.IntegerField()),
                ("bin", models.IntegerField()),
                ("score", models.FloatField()),
                ("extra_data", models.JSONField(null=True)),
            ],
            options={
                "ordering": ["chromosome", "start", "end"],
            },
        ),
        migrations.CreateModel(
            name="RegElementType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="UUID of regulatory map collection",
                        unique=True,
                    ),
                ),
                ("title", models.TextField()),
                ("short_title", models.TextField()),
                ("slug", models.SlugField()),
                ("description", models.TextField(null=True)),
            ],
            options={
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="RegInteraction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, help_text="UUID of interaction", unique=True
                    ),
                ),
                ("release", models.CharField(max_length=32)),
                ("chromosome", models.CharField(max_length=32)),
                ("start", models.IntegerField()),
                ("end", models.IntegerField()),
                ("bin", models.IntegerField()),
                ("score", models.FloatField()),
                ("chromosome1", models.CharField(max_length=32)),
                ("start1", models.IntegerField()),
                ("end1", models.IntegerField()),
                ("chromosome2", models.CharField(max_length=32)),
                ("start2", models.IntegerField()),
                ("end2", models.IntegerField()),
                ("extra_data", models.JSONField(null=True)),
            ],
            options={
                "ordering": ["chromosome", "start", "end"],
            },
        ),
        migrations.CreateModel(
            name="RegMap",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, help_text="UUID of regulatory map", unique=True
                    ),
                ),
                ("title", models.TextField()),
                ("short_title", models.TextField()),
                ("slug", models.SlugField()),
                ("description", models.TextField(null=True)),
            ],
            options={
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="RegMapCollection",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="UUID of regulatory map collection",
                        unique=True,
                    ),
                ),
                ("release", models.CharField(max_length=32)),
                ("version", models.CharField(max_length=50)),
                ("title", models.TextField()),
                ("short_title", models.TextField()),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(null=True)),
            ],
            options={
                "ordering": ["title"],
            },
        ),
        migrations.AddIndex(
            model_name="regmapcollection",
            index=models.Index(fields=["sodar_uuid"], name="regmaps_reg_sodar_u_6a4e8c_idx"),
        ),
        migrations.AddField(
            model_name="regmap",
            name="collection",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="regmaps.RegMapCollection"
            ),
        ),
        migrations.AddField(
            model_name="reginteraction",
            name="reg_map",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="regmaps.RegMap"
            ),
        ),
        migrations.AddField(
            model_name="regelementtype",
            name="collection",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="regmaps.RegMapCollection"
            ),
        ),
        migrations.AddField(
            model_name="regelement",
            name="elem_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="regmaps.RegElementType"
            ),
        ),
        migrations.AddField(
            model_name="regelement",
            name="reg_map",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="regmaps.RegMap"
            ),
        ),
        migrations.AddIndex(
            model_name="regmap",
            index=models.Index(fields=["sodar_uuid"], name="regmaps_reg_sodar_u_9ed6fa_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="regmap",
            unique_together=set([("collection", "slug")]),
        ),
        migrations.AddIndex(
            model_name="reginteraction",
            index=models.Index(fields=["sodar_uuid"], name="regmaps_reg_sodar_u_d6c68d_idx"),
        ),
        migrations.AddIndex(
            model_name="reginteraction",
            index=models.Index(
                fields=["release", "chromosome", "bin"], name="regmaps_reg_release_29fa76_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="regelementtype",
            index=models.Index(fields=["sodar_uuid"], name="regmaps_reg_sodar_u_fb7c06_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="regelementtype",
            unique_together=set([("collection", "slug")]),
        ),
        migrations.AddIndex(
            model_name="regelement",
            index=models.Index(fields=["sodar_uuid"], name="regmaps_reg_sodar_u_ee42b7_idx"),
        ),
        migrations.AddIndex(
            model_name="regelement",
            index=models.Index(
                fields=["release", "chromosome", "bin"], name="regmaps_reg_release_2c4de2_idx"
            ),
        ),
    ]
