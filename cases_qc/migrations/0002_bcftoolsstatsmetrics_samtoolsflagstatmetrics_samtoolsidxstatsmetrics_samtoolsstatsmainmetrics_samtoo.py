# Generated by Django 3.2.21 on 2023-09-20 14:12

import uuid

from django.db import migrations, models
import django.db.models.deletion
import django_pydantic_field._migration_serializers
import django_pydantic_field.fields

import cases_qc.models


class Migration(migrations.Migration):
    dependencies = [
        ("cases_qc", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SamtoolsStatsSupplementaryMetrics",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("sample", models.CharField(max_length=200)),
                (
                    "gcf",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsGcRecord,)
                        ),
                    ),
                ),
                (
                    "gcl",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsGcRecord,)
                        ),
                    ),
                ),
                (
                    "gcc",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsBasePercentagesRecord,)
                        ),
                    ),
                ),
                (
                    "gct",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsBasePercentagesRecord,)
                        ),
                    ),
                ),
                (
                    "rl",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsHistoRecord,)
                        ),
                    ),
                ),
                (
                    "mapq",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsHistoRecord,)
                        ),
                    ),
                ),
                (
                    "ic",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsIdRecord,)
                        ),
                    ),
                ),
                (
                    "caseqc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cases_qc.caseqc"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SamtoolsStatsMainMetrics",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("sample", models.CharField(max_length=200)),
                (
                    "sn",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsSnRecord,)
                        ),
                    ),
                ),
                (
                    "chk",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsChkRecord,)
                        ),
                    ),
                ),
                (
                    "isize",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsIsRecord,)
                        ),
                    ),
                ),
                (
                    "cov",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsHistoRecord,)
                        ),
                    ),
                ),
                (
                    "gcd",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsGcdRecord,)
                        ),
                    ),
                ),
                (
                    "frl",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsHistoRecord,)
                        ),
                    ),
                ),
                (
                    "lrl",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsHistoRecord,)
                        ),
                    ),
                ),
                (
                    "idd",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsIdRecord,)
                        ),
                    ),
                ),
                (
                    "ffq",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsFqRecord,)
                        ),
                    ),
                ),
                (
                    "lfq",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsFqRecord,)
                        ),
                    ),
                ),
                (
                    "fbc",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsBasePercentagesRecord,)
                        ),
                    ),
                ),
                (
                    "lbc",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsStatsBasePercentagesRecord,)
                        ),
                    ),
                ),
                (
                    "caseqc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cases_qc.caseqc"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SamtoolsIdxstatsMetrics",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("sample", models.CharField(max_length=200)),
                (
                    "records",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsIdxstatsRecord,)
                        ),
                    ),
                ),
                (
                    "caseqc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cases_qc.caseqc"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SamtoolsFlagstatMetrics",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("sample", models.CharField(max_length=200)),
                (
                    "qc_pass",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsFlagstatRecord,)
                        ),
                    ),
                ),
                (
                    "qc_fail",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.SamtoolsFlagstatRecord,)
                        ),
                    ),
                ),
                (
                    "caseqc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cases_qc.caseqc"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BcftoolsStatsMetrics",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("sample", models.CharField(max_length=200)),
                (
                    "sn",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.BcftoolsStatsSnRecord,)
                        ),
                    ),
                ),
                (
                    "tstv",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.BcftoolsStatsTstvRecord,)
                        ),
                    ),
                ),
                (
                    "sis",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.BcftoolsStatsSisRecord,)
                        ),
                    ),
                ),
                (
                    "af",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.BcftoolsStatsAfRecord,)
                        ),
                    ),
                ),
                (
                    "qual",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.BcftoolsStatsQualRecord,)
                        ),
                    ),
                ),
                (
                    "idd",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.BcfToolsStatsIddRecord,)
                        ),
                    ),
                ),
                (
                    "st",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.BcftoolsStatsStRecord,)
                        ),
                    ),
                ),
                (
                    "dp",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (cases_qc.models.BcftoolsStatsDpRecord,)
                        ),
                    ),
                ),
                (
                    "caseqc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cases_qc.caseqc"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
