// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { CasesAnalysisApiCaseanalysisListData, CasesAnalysisApiCaseanalysisListError, CasesAnalysisApiCaseanalysisListResponse, CasesAnalysisApiCaseanalysisRetrieveData, CasesAnalysisApiCaseanalysisRetrieveError, CasesAnalysisApiCaseanalysisRetrieveResponse, CasesAnalysisApiCaseanalysissessionListData, CasesAnalysisApiCaseanalysissessionListError, CasesAnalysisApiCaseanalysissessionListResponse, CasesAnalysisApiCaseanalysissessionRetrieveData, CasesAnalysisApiCaseanalysissessionRetrieveError, CasesAnalysisApiCaseanalysissessionRetrieveResponse, CasesImportApiCaseImportActionListData, CasesImportApiCaseImportActionListError, CasesImportApiCaseImportActionListResponse, CasesImportApiCaseImportActionCreateData, CasesImportApiCaseImportActionCreateError, CasesImportApiCaseImportActionCreateResponse, CasesImportApiCaseImportActionRetrieveData, CasesImportApiCaseImportActionRetrieveError, CasesImportApiCaseImportActionRetrieveResponse, CasesImportApiCaseImportActionUpdateData, CasesImportApiCaseImportActionUpdateError, CasesImportApiCaseImportActionUpdateResponse, CasesImportApiCaseImportActionPartialUpdateData, CasesImportApiCaseImportActionPartialUpdateError, CasesImportApiCaseImportActionPartialUpdateResponse, CasesImportApiCaseImportActionDestroyData, CasesImportApiCaseImportActionDestroyError, CasesImportApiCaseImportActionDestroyResponse, CasesQcApiCaseqcRetrieveRetrieveData, CasesQcApiCaseqcRetrieveRetrieveError, CasesQcApiCaseqcRetrieveRetrieveResponse, CasesQcApiVarfishstatsRetrieveRetrieveData, CasesQcApiVarfishstatsRetrieveRetrieveError, CasesQcApiVarfishstatsRetrieveRetrieveResponse, CasesApiAnnotationReleaseInfoListListData, CasesApiAnnotationReleaseInfoListListError, CasesApiAnnotationReleaseInfoListListResponse, CasesApiCaseCommentListCreateListData, CasesApiCaseCommentListCreateListError, CasesApiCaseCommentListCreateListResponse, CasesApiCaseCommentListCreateCreateData, CasesApiCaseCommentListCreateCreateError, CasesApiCaseCommentListCreateCreateResponse, CasesApiCasePhenotypeTermsListCreateListData, CasesApiCasePhenotypeTermsListCreateListError, CasesApiCasePhenotypeTermsListCreateListResponse, CasesApiCasePhenotypeTermsListCreateCreateData, CasesApiCasePhenotypeTermsListCreateCreateError, CasesApiCasePhenotypeTermsListCreateCreateResponse, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyRetrieveData, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyRetrieveError, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyRetrieveResponse, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyUpdateData, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyUpdateError, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyUpdateResponse, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyPartialUpdateData, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyPartialUpdateError, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyPartialUpdateResponse, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyDestroyData, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyDestroyError, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyDestroyResponse, CasesApiCaseCountRetrieveData, CasesApiCaseCountRetrieveError, CasesApiCaseCountRetrieveResponse, CasesApiCaseListListData, CasesApiCaseListListError, CasesApiCaseListListResponse, CasesApiCaseRetrieveUpdateDestroyRetrieveData, CasesApiCaseRetrieveUpdateDestroyRetrieveError, CasesApiCaseRetrieveUpdateDestroyRetrieveResponse, CasesApiCaseRetrieveUpdateDestroyUpdateData, CasesApiCaseRetrieveUpdateDestroyUpdateError, CasesApiCaseRetrieveUpdateDestroyUpdateResponse, CasesApiCaseRetrieveUpdateDestroyPartialUpdateData, CasesApiCaseRetrieveUpdateDestroyPartialUpdateError, CasesApiCaseRetrieveUpdateDestroyPartialUpdateResponse, CasesApiCaseRetrieveUpdateDestroyDestroyData, CasesApiCaseRetrieveUpdateDestroyDestroyError, CasesApiCaseRetrieveUpdateDestroyDestroyResponse, CasesApiSvAnnotationReleaseInfoListListData, CasesApiSvAnnotationReleaseInfoListListError, CasesApiSvAnnotationReleaseInfoListListResponse, CasesApiUserAndGlobalSettingsRetrieveError, CasesApiUserAndGlobalSettingsRetrieveResponse, GenepanelsApiGenepanelCategoryListListError, GenepanelsApiGenepanelCategoryListListResponse, GenepanelsApiLookupGenepanelRetrieveError, GenepanelsApiLookupGenepanelRetrieveResponse, ProjectApiCreateCreateData, ProjectApiCreateCreateError, ProjectApiCreateCreateResponse, ProjectApiInvitesCreateCreateData, ProjectApiInvitesCreateCreateError, ProjectApiInvitesCreateCreateResponse, ProjectApiInvitesListListData, ProjectApiInvitesListListError, ProjectApiInvitesListListResponse, ProjectApiInvitesResendCreateData, ProjectApiInvitesResendCreateError, ProjectApiInvitesResendCreateResponse, ProjectApiInvitesRevokeCreateData, ProjectApiInvitesRevokeCreateError, ProjectApiInvitesRevokeCreateResponse, ProjectApiListRetrieveError, ProjectApiListRetrieveResponse, ProjectApiRemoteGetRetrieveData, ProjectApiRemoteGetRetrieveError, ProjectApiRemoteGetRetrieveResponse, ProjectApiRetrieveRetrieveData, ProjectApiRetrieveRetrieveError, ProjectApiRetrieveRetrieveResponse, ProjectApiRolesCreateCreateData, ProjectApiRolesCreateCreateError, ProjectApiRolesCreateCreateResponse, ProjectApiRolesDestroyDestroyData, ProjectApiRolesDestroyDestroyError, ProjectApiRolesDestroyDestroyResponse, ProjectApiRolesOwnerTransferCreateData, ProjectApiRolesOwnerTransferCreateError, ProjectApiRolesOwnerTransferCreateResponse, ProjectApiRolesUpdateUpdateData, ProjectApiRolesUpdateUpdateError, ProjectApiRolesUpdateUpdateResponse, ProjectApiRolesUpdatePartialUpdateData, ProjectApiRolesUpdatePartialUpdateError, ProjectApiRolesUpdatePartialUpdateResponse, ProjectApiSettingsRetrieveRetrieveData, ProjectApiSettingsRetrieveRetrieveError, ProjectApiSettingsRetrieveRetrieveResponse, ProjectApiSettingsRetrieveUserRetrieveError, ProjectApiSettingsRetrieveUserRetrieveResponse, ProjectApiSettingsSetCreateData, ProjectApiSettingsSetCreateError, ProjectApiSettingsSetCreateResponse, ProjectApiSettingsSetUserCreateError, ProjectApiSettingsSetUserCreateResponse, ProjectApiUpdateUpdateData, ProjectApiUpdateUpdateError, ProjectApiUpdateUpdateResponse, ProjectApiUpdatePartialUpdateData, ProjectApiUpdatePartialUpdateError, ProjectApiUpdatePartialUpdateResponse, ProjectApiUsersCurrentRetrieveError, ProjectApiUsersCurrentRetrieveResponse, ProjectApiUsersListListError, ProjectApiUsersListListResponse, SeqmetaApiEnrichmentkitListCreateListError, SeqmetaApiEnrichmentkitListCreateListResponse, SeqmetaApiEnrichmentkitListCreateCreateData, SeqmetaApiEnrichmentkitListCreateCreateError, SeqmetaApiEnrichmentkitListCreateCreateResponse, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyRetrieveData, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyRetrieveError, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyRetrieveResponse, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyUpdateData, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyUpdateError, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyUpdateResponse, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyPartialUpdateData, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyPartialUpdateError, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyPartialUpdateResponse, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyDestroyData, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyDestroyError, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyDestroyResponse, SeqmetaApiTargetbedfileListCreateListData, SeqmetaApiTargetbedfileListCreateListError, SeqmetaApiTargetbedfileListCreateListResponse, SeqmetaApiTargetbedfileListCreateCreateData, SeqmetaApiTargetbedfileListCreateCreateError, SeqmetaApiTargetbedfileListCreateCreateResponse, SeqmetaApiTargetbedfileRetrieveUpdateDestroyRetrieveData, SeqmetaApiTargetbedfileRetrieveUpdateDestroyRetrieveError, SeqmetaApiTargetbedfileRetrieveUpdateDestroyRetrieveResponse, SeqmetaApiTargetbedfileRetrieveUpdateDestroyUpdateData, SeqmetaApiTargetbedfileRetrieveUpdateDestroyUpdateError, SeqmetaApiTargetbedfileRetrieveUpdateDestroyUpdateResponse, SeqmetaApiTargetbedfileRetrieveUpdateDestroyPartialUpdateData, SeqmetaApiTargetbedfileRetrieveUpdateDestroyPartialUpdateError, SeqmetaApiTargetbedfileRetrieveUpdateDestroyPartialUpdateResponse, SeqmetaApiTargetbedfileRetrieveUpdateDestroyDestroyData, SeqmetaApiTargetbedfileRetrieveUpdateDestroyDestroyError, SeqmetaApiTargetbedfileRetrieveUpdateDestroyDestroyResponse, SeqvarsApiPredefinedqueryListData, SeqvarsApiPredefinedqueryListError, SeqvarsApiPredefinedqueryListResponse, SeqvarsApiPredefinedqueryCreateData, SeqvarsApiPredefinedqueryCreateError, SeqvarsApiPredefinedqueryCreateResponse, SeqvarsApiPredefinedqueryRetrieveData, SeqvarsApiPredefinedqueryRetrieveError, SeqvarsApiPredefinedqueryRetrieveResponse, SeqvarsApiPredefinedqueryUpdateData, SeqvarsApiPredefinedqueryUpdateError, SeqvarsApiPredefinedqueryUpdateResponse, SeqvarsApiPredefinedqueryPartialUpdateData, SeqvarsApiPredefinedqueryPartialUpdateError, SeqvarsApiPredefinedqueryPartialUpdateResponse, SeqvarsApiPredefinedqueryDestroyData, SeqvarsApiPredefinedqueryDestroyError, SeqvarsApiPredefinedqueryDestroyResponse, SeqvarsApiQueryListData, SeqvarsApiQueryListError, SeqvarsApiQueryListResponse, SeqvarsApiQueryCreateData, SeqvarsApiQueryCreateError, SeqvarsApiQueryCreateResponse, SeqvarsApiQueryRetrieveData, SeqvarsApiQueryRetrieveError, SeqvarsApiQueryRetrieveResponse, SeqvarsApiQueryUpdateData, SeqvarsApiQueryUpdateError, SeqvarsApiQueryUpdateResponse, SeqvarsApiQueryPartialUpdateData, SeqvarsApiQueryPartialUpdateError, SeqvarsApiQueryPartialUpdateResponse, SeqvarsApiQueryDestroyData, SeqvarsApiQueryDestroyError, SeqvarsApiQueryDestroyResponse, SeqvarsApiQueryCreateFromCreateData, SeqvarsApiQueryCreateFromCreateError, SeqvarsApiQueryCreateFromCreateResponse, SeqvarsApiQueryexecutionListData, SeqvarsApiQueryexecutionListError, SeqvarsApiQueryexecutionListResponse, SeqvarsApiQueryexecutionRetrieveData, SeqvarsApiQueryexecutionRetrieveError, SeqvarsApiQueryexecutionRetrieveResponse, SeqvarsApiQueryexecutionStartCreateData, SeqvarsApiQueryexecutionStartCreateError, SeqvarsApiQueryexecutionStartCreateResponse, SeqvarsApiQuerypresetsclinvarListData, SeqvarsApiQuerypresetsclinvarListError, SeqvarsApiQuerypresetsclinvarListResponse, SeqvarsApiQuerypresetsclinvarCreateData, SeqvarsApiQuerypresetsclinvarCreateError, SeqvarsApiQuerypresetsclinvarCreateResponse, SeqvarsApiQuerypresetsclinvarRetrieveData, SeqvarsApiQuerypresetsclinvarRetrieveError, SeqvarsApiQuerypresetsclinvarRetrieveResponse, SeqvarsApiQuerypresetsclinvarUpdateData, SeqvarsApiQuerypresetsclinvarUpdateError, SeqvarsApiQuerypresetsclinvarUpdateResponse, SeqvarsApiQuerypresetsclinvarPartialUpdateData, SeqvarsApiQuerypresetsclinvarPartialUpdateError, SeqvarsApiQuerypresetsclinvarPartialUpdateResponse, SeqvarsApiQuerypresetsclinvarDestroyData, SeqvarsApiQuerypresetsclinvarDestroyError, SeqvarsApiQuerypresetsclinvarDestroyResponse, SeqvarsApiQuerypresetscolumnsListData, SeqvarsApiQuerypresetscolumnsListError, SeqvarsApiQuerypresetscolumnsListResponse, SeqvarsApiQuerypresetscolumnsCreateData, SeqvarsApiQuerypresetscolumnsCreateError, SeqvarsApiQuerypresetscolumnsCreateResponse, SeqvarsApiQuerypresetscolumnsRetrieveData, SeqvarsApiQuerypresetscolumnsRetrieveError, SeqvarsApiQuerypresetscolumnsRetrieveResponse, SeqvarsApiQuerypresetscolumnsUpdateData, SeqvarsApiQuerypresetscolumnsUpdateError, SeqvarsApiQuerypresetscolumnsUpdateResponse, SeqvarsApiQuerypresetscolumnsPartialUpdateData, SeqvarsApiQuerypresetscolumnsPartialUpdateError, SeqvarsApiQuerypresetscolumnsPartialUpdateResponse, SeqvarsApiQuerypresetscolumnsDestroyData, SeqvarsApiQuerypresetscolumnsDestroyError, SeqvarsApiQuerypresetscolumnsDestroyResponse, SeqvarsApiQuerypresetsconsequenceListData, SeqvarsApiQuerypresetsconsequenceListError, SeqvarsApiQuerypresetsconsequenceListResponse, SeqvarsApiQuerypresetsconsequenceCreateData, SeqvarsApiQuerypresetsconsequenceCreateError, SeqvarsApiQuerypresetsconsequenceCreateResponse, SeqvarsApiQuerypresetsconsequenceRetrieveData, SeqvarsApiQuerypresetsconsequenceRetrieveError, SeqvarsApiQuerypresetsconsequenceRetrieveResponse, SeqvarsApiQuerypresetsconsequenceUpdateData, SeqvarsApiQuerypresetsconsequenceUpdateError, SeqvarsApiQuerypresetsconsequenceUpdateResponse, SeqvarsApiQuerypresetsconsequencePartialUpdateData, SeqvarsApiQuerypresetsconsequencePartialUpdateError, SeqvarsApiQuerypresetsconsequencePartialUpdateResponse, SeqvarsApiQuerypresetsconsequenceDestroyData, SeqvarsApiQuerypresetsconsequenceDestroyError, SeqvarsApiQuerypresetsconsequenceDestroyResponse, SeqvarsApiQuerypresetsfactorydefaultsListData, SeqvarsApiQuerypresetsfactorydefaultsListError, SeqvarsApiQuerypresetsfactorydefaultsListResponse, SeqvarsApiQuerypresetsfactorydefaultsRetrieveData, SeqvarsApiQuerypresetsfactorydefaultsRetrieveError, SeqvarsApiQuerypresetsfactorydefaultsRetrieveResponse, SeqvarsApiQuerypresetsfrequencyListData, SeqvarsApiQuerypresetsfrequencyListError, SeqvarsApiQuerypresetsfrequencyListResponse, SeqvarsApiQuerypresetsfrequencyCreateData, SeqvarsApiQuerypresetsfrequencyCreateError, SeqvarsApiQuerypresetsfrequencyCreateResponse, SeqvarsApiQuerypresetsfrequencyRetrieveData, SeqvarsApiQuerypresetsfrequencyRetrieveError, SeqvarsApiQuerypresetsfrequencyRetrieveResponse, SeqvarsApiQuerypresetsfrequencyUpdateData, SeqvarsApiQuerypresetsfrequencyUpdateError, SeqvarsApiQuerypresetsfrequencyUpdateResponse, SeqvarsApiQuerypresetsfrequencyPartialUpdateData, SeqvarsApiQuerypresetsfrequencyPartialUpdateError, SeqvarsApiQuerypresetsfrequencyPartialUpdateResponse, SeqvarsApiQuerypresetsfrequencyDestroyData, SeqvarsApiQuerypresetsfrequencyDestroyError, SeqvarsApiQuerypresetsfrequencyDestroyResponse, SeqvarsApiQuerypresetslocusListData, SeqvarsApiQuerypresetslocusListError, SeqvarsApiQuerypresetslocusListResponse, SeqvarsApiQuerypresetslocusCreateData, SeqvarsApiQuerypresetslocusCreateError, SeqvarsApiQuerypresetslocusCreateResponse, SeqvarsApiQuerypresetslocusRetrieveData, SeqvarsApiQuerypresetslocusRetrieveError, SeqvarsApiQuerypresetslocusRetrieveResponse, SeqvarsApiQuerypresetslocusUpdateData, SeqvarsApiQuerypresetslocusUpdateError, SeqvarsApiQuerypresetslocusUpdateResponse, SeqvarsApiQuerypresetslocusPartialUpdateData, SeqvarsApiQuerypresetslocusPartialUpdateError, SeqvarsApiQuerypresetslocusPartialUpdateResponse, SeqvarsApiQuerypresetslocusDestroyData, SeqvarsApiQuerypresetslocusDestroyError, SeqvarsApiQuerypresetslocusDestroyResponse, SeqvarsApiQuerypresetsphenotypeprioListData, SeqvarsApiQuerypresetsphenotypeprioListError, SeqvarsApiQuerypresetsphenotypeprioListResponse, SeqvarsApiQuerypresetsphenotypeprioCreateData, SeqvarsApiQuerypresetsphenotypeprioCreateError, SeqvarsApiQuerypresetsphenotypeprioCreateResponse, SeqvarsApiQuerypresetsphenotypeprioRetrieveData, SeqvarsApiQuerypresetsphenotypeprioRetrieveError, SeqvarsApiQuerypresetsphenotypeprioRetrieveResponse, SeqvarsApiQuerypresetsphenotypeprioUpdateData, SeqvarsApiQuerypresetsphenotypeprioUpdateError, SeqvarsApiQuerypresetsphenotypeprioUpdateResponse, SeqvarsApiQuerypresetsphenotypeprioPartialUpdateData, SeqvarsApiQuerypresetsphenotypeprioPartialUpdateError, SeqvarsApiQuerypresetsphenotypeprioPartialUpdateResponse, SeqvarsApiQuerypresetsphenotypeprioDestroyData, SeqvarsApiQuerypresetsphenotypeprioDestroyError, SeqvarsApiQuerypresetsphenotypeprioDestroyResponse, SeqvarsApiQuerypresetsqualityListData, SeqvarsApiQuerypresetsqualityListError, SeqvarsApiQuerypresetsqualityListResponse, SeqvarsApiQuerypresetsqualityCreateData, SeqvarsApiQuerypresetsqualityCreateError, SeqvarsApiQuerypresetsqualityCreateResponse, SeqvarsApiQuerypresetsqualityRetrieveData, SeqvarsApiQuerypresetsqualityRetrieveError, SeqvarsApiQuerypresetsqualityRetrieveResponse, SeqvarsApiQuerypresetsqualityUpdateData, SeqvarsApiQuerypresetsqualityUpdateError, SeqvarsApiQuerypresetsqualityUpdateResponse, SeqvarsApiQuerypresetsqualityPartialUpdateData, SeqvarsApiQuerypresetsqualityPartialUpdateError, SeqvarsApiQuerypresetsqualityPartialUpdateResponse, SeqvarsApiQuerypresetsqualityDestroyData, SeqvarsApiQuerypresetsqualityDestroyError, SeqvarsApiQuerypresetsqualityDestroyResponse, SeqvarsApiQuerypresetssetListData, SeqvarsApiQuerypresetssetListError, SeqvarsApiQuerypresetssetListResponse, SeqvarsApiQuerypresetssetCreateData, SeqvarsApiQuerypresetssetCreateError, SeqvarsApiQuerypresetssetCreateResponse, SeqvarsApiQuerypresetssetRetrieveData, SeqvarsApiQuerypresetssetRetrieveError, SeqvarsApiQuerypresetssetRetrieveResponse, SeqvarsApiQuerypresetssetUpdateData, SeqvarsApiQuerypresetssetUpdateError, SeqvarsApiQuerypresetssetUpdateResponse, SeqvarsApiQuerypresetssetPartialUpdateData, SeqvarsApiQuerypresetssetPartialUpdateError, SeqvarsApiQuerypresetssetPartialUpdateResponse, SeqvarsApiQuerypresetssetDestroyData, SeqvarsApiQuerypresetssetDestroyError, SeqvarsApiQuerypresetssetDestroyResponse, SeqvarsApiQuerypresetssetCopyFromCreateData, SeqvarsApiQuerypresetssetCopyFromCreateError, SeqvarsApiQuerypresetssetCopyFromCreateResponse, SeqvarsApiQuerypresetssetversionListData, SeqvarsApiQuerypresetssetversionListError, SeqvarsApiQuerypresetssetversionListResponse, SeqvarsApiQuerypresetssetversionCreateData, SeqvarsApiQuerypresetssetversionCreateError, SeqvarsApiQuerypresetssetversionCreateResponse, SeqvarsApiQuerypresetssetversionRetrieveData, SeqvarsApiQuerypresetssetversionRetrieveError, SeqvarsApiQuerypresetssetversionRetrieveResponse, SeqvarsApiQuerypresetssetversionUpdateData, SeqvarsApiQuerypresetssetversionUpdateError, SeqvarsApiQuerypresetssetversionUpdateResponse, SeqvarsApiQuerypresetssetversionPartialUpdateData, SeqvarsApiQuerypresetssetversionPartialUpdateError, SeqvarsApiQuerypresetssetversionPartialUpdateResponse, SeqvarsApiQuerypresetssetversionDestroyData, SeqvarsApiQuerypresetssetversionDestroyError, SeqvarsApiQuerypresetssetversionDestroyResponse, SeqvarsApiQuerypresetssetversionCopyFromCreateData, SeqvarsApiQuerypresetssetversionCopyFromCreateError, SeqvarsApiQuerypresetssetversionCopyFromCreateResponse, SeqvarsApiQuerypresetsvariantprioListData, SeqvarsApiQuerypresetsvariantprioListError, SeqvarsApiQuerypresetsvariantprioListResponse, SeqvarsApiQuerypresetsvariantprioCreateData, SeqvarsApiQuerypresetsvariantprioCreateError, SeqvarsApiQuerypresetsvariantprioCreateResponse, SeqvarsApiQuerypresetsvariantprioRetrieveData, SeqvarsApiQuerypresetsvariantprioRetrieveError, SeqvarsApiQuerypresetsvariantprioRetrieveResponse, SeqvarsApiQuerypresetsvariantprioUpdateData, SeqvarsApiQuerypresetsvariantprioUpdateError, SeqvarsApiQuerypresetsvariantprioUpdateResponse, SeqvarsApiQuerypresetsvariantprioPartialUpdateData, SeqvarsApiQuerypresetsvariantprioPartialUpdateError, SeqvarsApiQuerypresetsvariantprioPartialUpdateResponse, SeqvarsApiQuerypresetsvariantprioDestroyData, SeqvarsApiQuerypresetsvariantprioDestroyError, SeqvarsApiQuerypresetsvariantprioDestroyResponse, SeqvarsApiQuerysettingsListData, SeqvarsApiQuerysettingsListError, SeqvarsApiQuerysettingsListResponse, SeqvarsApiQuerysettingsCreateData, SeqvarsApiQuerysettingsCreateError, SeqvarsApiQuerysettingsCreateResponse, SeqvarsApiQuerysettingsRetrieveData, SeqvarsApiQuerysettingsRetrieveError, SeqvarsApiQuerysettingsRetrieveResponse, SeqvarsApiQuerysettingsUpdateData, SeqvarsApiQuerysettingsUpdateError, SeqvarsApiQuerysettingsUpdateResponse, SeqvarsApiQuerysettingsPartialUpdateData, SeqvarsApiQuerysettingsPartialUpdateError, SeqvarsApiQuerysettingsPartialUpdateResponse, SeqvarsApiQuerysettingsDestroyData, SeqvarsApiQuerysettingsDestroyError, SeqvarsApiQuerysettingsDestroyResponse, SeqvarsApiResultrowListData, SeqvarsApiResultrowListError, SeqvarsApiResultrowListResponse, SeqvarsApiResultrowRetrieveData, SeqvarsApiResultrowRetrieveError, SeqvarsApiResultrowRetrieveResponse, SeqvarsApiResultsetListData, SeqvarsApiResultsetListError, SeqvarsApiResultsetListResponse, SeqvarsApiResultsetRetrieveData, SeqvarsApiResultsetRetrieveError, SeqvarsApiResultsetRetrieveResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * List the ``CaseAnalysis`` objects for the given case.
 *
 * Implement the "create single case analysis on listing" logic.
 */
export const casesAnalysisApiCaseanalysisList = <ThrowOnError extends boolean = false>(options: Options<CasesAnalysisApiCaseanalysisListData, ThrowOnError>) => { return (options?.client ?? client).get<CasesAnalysisApiCaseanalysisListResponse, CasesAnalysisApiCaseanalysisListError, ThrowOnError>({
    ...options,
    url: '/cases-analysis/api/caseanalysis/{case}/'
}); };

/**
 * Allow listing and retrieval of ``CaseAnalysis`` records for a given case.
 *
 * As we only allow for one ``CaseAnalysis`` per case, we implicitely create one
 * when listing.
 */
export const casesAnalysisApiCaseanalysisRetrieve = <ThrowOnError extends boolean = false>(options: Options<CasesAnalysisApiCaseanalysisRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<CasesAnalysisApiCaseanalysisRetrieveResponse, CasesAnalysisApiCaseanalysisRetrieveError, ThrowOnError>({
    ...options,
    url: '/cases-analysis/api/caseanalysis/{case}/{caseanalysis}/'
}); };

/**
 * List the ``CaseAnalysisSession`` objects for the given case and current user.
 *
 * Implement the "create single case analysis session on listing" logic.
 */
export const casesAnalysisApiCaseanalysissessionList = <ThrowOnError extends boolean = false>(options: Options<CasesAnalysisApiCaseanalysissessionListData, ThrowOnError>) => { return (options?.client ?? client).get<CasesAnalysisApiCaseanalysissessionListResponse, CasesAnalysisApiCaseanalysissessionListError, ThrowOnError>({
    ...options,
    url: '/cases-analysis/api/caseanalysissession/{case}/'
}); };

/**
 * Allow retrieval only of ``CaseAnalysisSession`` record for current user.
 */
export const casesAnalysisApiCaseanalysissessionRetrieve = <ThrowOnError extends boolean = false>(options: Options<CasesAnalysisApiCaseanalysissessionRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<CasesAnalysisApiCaseanalysissessionRetrieveResponse, CasesAnalysisApiCaseanalysissessionRetrieveError, ThrowOnError>({
    ...options,
    url: '/cases-analysis/api/caseanalysissession/{case}/{caseanalysissession}/'
}); };

/**
 * Base class for app view sets having project from URL kwarg as context.
 */
export const casesImportApiCaseImportActionList = <ThrowOnError extends boolean = false>(options: Options<CasesImportApiCaseImportActionListData, ThrowOnError>) => { return (options?.client ?? client).get<CasesImportApiCaseImportActionListResponse, CasesImportApiCaseImportActionListError, ThrowOnError>({
    ...options,
    url: '/cases-import/api/case-import-action/{project}/'
}); };

/**
 * Override to ensure creation happens in a transaction.
 *
 * This is important so we can rely on the serializer validation to be consistent
 * with the creation (e.g., on collision checks).
 */
export const casesImportApiCaseImportActionCreate = <ThrowOnError extends boolean = false>(options: Options<CasesImportApiCaseImportActionCreateData, ThrowOnError>) => { return (options?.client ?? client).post<CasesImportApiCaseImportActionCreateResponse, CasesImportApiCaseImportActionCreateError, ThrowOnError>({
    ...options,
    url: '/cases-import/api/case-import-action/{project}/'
}); };

/**
 * Base class for app view sets having project from URL kwarg as context.
 */
export const casesImportApiCaseImportActionRetrieve = <ThrowOnError extends boolean = false>(options: Options<CasesImportApiCaseImportActionRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<CasesImportApiCaseImportActionRetrieveResponse, CasesImportApiCaseImportActionRetrieveError, ThrowOnError>({
    ...options,
    url: '/cases-import/api/case-import-action/{project}/{caseimportaction}/'
}); };

/**
 * Override to ensure creation happens in a transaction.
 *
 * This is important so we can rely on the serializer validation to be consistent
 * with the creation (e.g., on collision checks).
 */
export const casesImportApiCaseImportActionUpdate = <ThrowOnError extends boolean = false>(options: Options<CasesImportApiCaseImportActionUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<CasesImportApiCaseImportActionUpdateResponse, CasesImportApiCaseImportActionUpdateError, ThrowOnError>({
    ...options,
    url: '/cases-import/api/case-import-action/{project}/{caseimportaction}/'
}); };

/**
 * Base class for app view sets having project from URL kwarg as context.
 */
export const casesImportApiCaseImportActionPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<CasesImportApiCaseImportActionPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<CasesImportApiCaseImportActionPartialUpdateResponse, CasesImportApiCaseImportActionPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/cases-import/api/case-import-action/{project}/{caseimportaction}/'
}); };

/**
 * Override to prevent destruction unless state is draft.
 */
export const casesImportApiCaseImportActionDestroy = <ThrowOnError extends boolean = false>(options: Options<CasesImportApiCaseImportActionDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<CasesImportApiCaseImportActionDestroyResponse, CasesImportApiCaseImportActionDestroyError, ThrowOnError>({
    ...options,
    url: '/cases-import/api/case-import-action/{project}/{caseimportaction}/'
}); };

/**
 * Retrieve the latest ``CaseQc`` for the given case.
 *
 * This corresponds to the raw QC values imported into VarFish.  See
 * ``VarfishStatsRetrieveApiView`` for the information used by the UI.
 *
 * **URL:** ``/cases_qc/api/caseqc/retrieve/{case.sodar_uuid}/``
 *
 * **Methods:** ``GET``
 *
 * **Returns:** serialized ``CaseQc`` if any, HTTP 404 if not found
 */
export const casesQcApiCaseqcRetrieveRetrieve = <ThrowOnError extends boolean = false>(options: Options<CasesQcApiCaseqcRetrieveRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<CasesQcApiCaseqcRetrieveRetrieveResponse, CasesQcApiCaseqcRetrieveRetrieveError, ThrowOnError>({
    ...options,
    url: '/cases-qc/api/caseqc/retrieve/{case}/'
}); };

/**
 * Retrieve the latest statistics to display in the UI for a case.
 *
 * **URL:** ``/cases_qc/api/varfishstats/retrieve/{case.sodar_uuid}/``
 *
 * **Methods:** ``GET``
 *
 * **Returns:** serialized ``CaseQc`` if any, HTTP 404 if not found
 */
export const casesQcApiVarfishstatsRetrieveRetrieve = <ThrowOnError extends boolean = false>(options: Options<CasesQcApiVarfishstatsRetrieveRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<CasesQcApiVarfishstatsRetrieveRetrieveResponse, CasesQcApiVarfishstatsRetrieveRetrieveError, ThrowOnError>({
    ...options,
    url: '/cases-qc/api/varfishstats/retrieve/{case}/'
}); };

/**
 * List annotation release infos for a given case.
 *
 * **URL:** ``/cases/api/annotation-release-info/list/{case.sodar_uuid}``
 *
 * **Methods:** ``GET``
 */
export const casesApiAnnotationReleaseInfoListList = <ThrowOnError extends boolean = false>(options: Options<CasesApiAnnotationReleaseInfoListListData, ThrowOnError>) => { return (options?.client ?? client).get<CasesApiAnnotationReleaseInfoListListResponse, CasesApiAnnotationReleaseInfoListListError, ThrowOnError>({
    ...options,
    url: '/cases/api/annotation-release-info/list/{case}/'
}); };

/**
 * List/create case comments for the given case.
 *
 * **URL:** ``/cases/api/case-comment/list-create/{case.sodar_uuid}``
 *
 * **Methods:** ``GET``
 *
 * **Parameters:**
 *
 * - ``page`` - specify page to return (default/first is ``1``)
 * - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)
 *
 * **Returns:**
 *
 * - ``count`` - number of total elements (``int``)
 * - ``next`` - URL to next page (``str`` or ``null``)
 * - ``previous`` - URL to next page (``str`` or ``null``)
 * - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`)
 */
export const casesApiCaseCommentListCreateList = <ThrowOnError extends boolean = false>(options: Options<CasesApiCaseCommentListCreateListData, ThrowOnError>) => { return (options?.client ?? client).get<CasesApiCaseCommentListCreateListResponse, CasesApiCaseCommentListCreateListError, ThrowOnError>({
    ...options,
    url: '/cases/api/case-comment/list-create/{case}/'
}); };

/**
 * List/create case comments for the given case.
 *
 * **URL:** ``/cases/api/case-comment/list-create/{case.sodar_uuid}``
 *
 * **Methods:** ``GET``
 *
 * **Parameters:**
 *
 * - ``page`` - specify page to return (default/first is ``1``)
 * - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)
 *
 * **Returns:**
 *
 * - ``count`` - number of total elements (``int``)
 * - ``next`` - URL to next page (``str`` or ``null``)
 * - ``previous`` - URL to next page (``str`` or ``null``)
 * - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`)
 */
export const casesApiCaseCommentListCreateCreate = <ThrowOnError extends boolean = false>(options: Options<CasesApiCaseCommentListCreateCreateData, ThrowOnError>) => { return (options?.client ?? client).post<CasesApiCaseCommentListCreateCreateResponse, CasesApiCaseCommentListCreateCreateError, ThrowOnError>({
    ...options,
    url: '/cases/api/case-comment/list-create/{case}/'
}); };

/**
 * List/create case phenotype term annotations.
 *
 * **URL:** ``/cases/api/case-phenotype-terms/list-create/{case.sodar_uuid}``
 *
 * **Methods:** ``GET``
 *
 * **Parameters:**
 *
 * - ``page`` - specify page to return (default/first is ``1``)
 * - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)
 *
 * **Returns:**
 *
 * - ``count`` - number of total elements (``int``)
 * - ``next`` - URL to next page (``str`` or ``null``)
 * - ``previous`` - URL to next page (``str`` or ``null``)
 * - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`)
 */
export const casesApiCasePhenotypeTermsListCreateList = <ThrowOnError extends boolean = false>(options: Options<CasesApiCasePhenotypeTermsListCreateListData, ThrowOnError>) => { return (options?.client ?? client).get<CasesApiCasePhenotypeTermsListCreateListResponse, CasesApiCasePhenotypeTermsListCreateListError, ThrowOnError>({
    ...options,
    url: '/cases/api/case-phenotype-terms/list-create/{case}/'
}); };

/**
 * List/create case phenotype term annotations.
 *
 * **URL:** ``/cases/api/case-phenotype-terms/list-create/{case.sodar_uuid}``
 *
 * **Methods:** ``GET``
 *
 * **Parameters:**
 *
 * - ``page`` - specify page to return (default/first is ``1``)
 * - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)
 *
 * **Returns:**
 *
 * - ``count`` - number of total elements (``int``)
 * - ``next`` - URL to next page (``str`` or ``null``)
 * - ``previous`` - URL to next page (``str`` or ``null``)
 * - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`)
 */
export const casesApiCasePhenotypeTermsListCreateCreate = <ThrowOnError extends boolean = false>(options: Options<CasesApiCasePhenotypeTermsListCreateCreateData, ThrowOnError>) => { return (options?.client ?? client).post<CasesApiCasePhenotypeTermsListCreateCreateResponse, CasesApiCasePhenotypeTermsListCreateCreateError, ThrowOnError>({
    ...options,
    url: '/cases/api/case-phenotype-terms/list-create/{case}/'
}); };

/**
 * Retrieve, update, destroy case comments for the given case.
 *
 * **URL:** ``/cases/api/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}``
 *
 * **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
 */
export const casesApiCasePhenotypeTermsRetrieveUpdateDestroyRetrieve = <ThrowOnError extends boolean = false>(options: Options<CasesApiCasePhenotypeTermsRetrieveUpdateDestroyRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<CasesApiCasePhenotypeTermsRetrieveUpdateDestroyRetrieveResponse, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyRetrieveError, ThrowOnError>({
    ...options,
    url: '/cases/api/case-phenotype-terms/retrieve-update-destroy/{casephenotypeterms}/'
}); };

/**
 * Retrieve, update, destroy case comments for the given case.
 *
 * **URL:** ``/cases/api/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}``
 *
 * **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
 */
export const casesApiCasePhenotypeTermsRetrieveUpdateDestroyUpdate = <ThrowOnError extends boolean = false>(options: Options<CasesApiCasePhenotypeTermsRetrieveUpdateDestroyUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<CasesApiCasePhenotypeTermsRetrieveUpdateDestroyUpdateResponse, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyUpdateError, ThrowOnError>({
    ...options,
    url: '/cases/api/case-phenotype-terms/retrieve-update-destroy/{casephenotypeterms}/'
}); };

/**
 * Retrieve, update, destroy case comments for the given case.
 *
 * **URL:** ``/cases/api/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}``
 *
 * **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
 */
export const casesApiCasePhenotypeTermsRetrieveUpdateDestroyPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<CasesApiCasePhenotypeTermsRetrieveUpdateDestroyPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<CasesApiCasePhenotypeTermsRetrieveUpdateDestroyPartialUpdateResponse, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/cases/api/case-phenotype-terms/retrieve-update-destroy/{casephenotypeterms}/'
}); };

/**
 * Retrieve, update, destroy case comments for the given case.
 *
 * **URL:** ``/cases/api/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}``
 *
 * **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
 */
export const casesApiCasePhenotypeTermsRetrieveUpdateDestroyDestroy = <ThrowOnError extends boolean = false>(options: Options<CasesApiCasePhenotypeTermsRetrieveUpdateDestroyDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<CasesApiCasePhenotypeTermsRetrieveUpdateDestroyDestroyResponse, CasesApiCasePhenotypeTermsRetrieveUpdateDestroyDestroyError, ThrowOnError>({
    ...options,
    url: '/cases/api/case-phenotype-terms/retrieve-update-destroy/{casephenotypeterms}/'
}); };

/**
 * Return the number of cases, potentially filtered.
 */
export const casesApiCaseCountRetrieve = <ThrowOnError extends boolean = false>(options: Options<CasesApiCaseCountRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<CasesApiCaseCountRetrieveResponse, CasesApiCaseCountRetrieveError, ThrowOnError>({
    ...options,
    url: '/cases/api/case/count/{project}/'
}); };

/**
 * List all cases in the current project.
 *
 * **URL:** ``/cases/api/case/list/{project.sodar_uid}/``
 *
 * **Methods:** ``GET``
 *
 * **Returns:** List of project details (see :py:class:`CaseRetrieveApiView`)
 */
export const casesApiCaseListList = <ThrowOnError extends boolean = false>(options: Options<CasesApiCaseListListData, ThrowOnError>) => { return (options?.client ?? client).get<CasesApiCaseListListResponse, CasesApiCaseListListError, ThrowOnError>({
    ...options,
    url: '/cases/api/case/list/{project}/'
}); };

/**
 * Update a given case.
 *
 * **URL:** ``/cases/api/case/update/{case.sodar_uid}/``
 *
 * **Methods:** ``PATCH``, ``PUT``, ``DELETE``.
 *
 * **Returns:** Updated case details.
 */
export const casesApiCaseRetrieveUpdateDestroyRetrieve = <ThrowOnError extends boolean = false>(options: Options<CasesApiCaseRetrieveUpdateDestroyRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<CasesApiCaseRetrieveUpdateDestroyRetrieveResponse, CasesApiCaseRetrieveUpdateDestroyRetrieveError, ThrowOnError>({
    ...options,
    url: '/cases/api/case/retrieve-update-destroy/{case}/'
}); };

/**
 * Update a given case.
 *
 * **URL:** ``/cases/api/case/update/{case.sodar_uid}/``
 *
 * **Methods:** ``PATCH``, ``PUT``, ``DELETE``.
 *
 * **Returns:** Updated case details.
 */
export const casesApiCaseRetrieveUpdateDestroyUpdate = <ThrowOnError extends boolean = false>(options: Options<CasesApiCaseRetrieveUpdateDestroyUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<CasesApiCaseRetrieveUpdateDestroyUpdateResponse, CasesApiCaseRetrieveUpdateDestroyUpdateError, ThrowOnError>({
    ...options,
    url: '/cases/api/case/retrieve-update-destroy/{case}/'
}); };

/**
 * Update a given case.
 *
 * **URL:** ``/cases/api/case/update/{case.sodar_uid}/``
 *
 * **Methods:** ``PATCH``, ``PUT``, ``DELETE``.
 *
 * **Returns:** Updated case details.
 */
export const casesApiCaseRetrieveUpdateDestroyPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<CasesApiCaseRetrieveUpdateDestroyPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<CasesApiCaseRetrieveUpdateDestroyPartialUpdateResponse, CasesApiCaseRetrieveUpdateDestroyPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/cases/api/case/retrieve-update-destroy/{case}/'
}); };

/**
 * Update a given case.
 *
 * **URL:** ``/cases/api/case/update/{case.sodar_uid}/``
 *
 * **Methods:** ``PATCH``, ``PUT``, ``DELETE``.
 *
 * **Returns:** Updated case details.
 */
export const casesApiCaseRetrieveUpdateDestroyDestroy = <ThrowOnError extends boolean = false>(options: Options<CasesApiCaseRetrieveUpdateDestroyDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<CasesApiCaseRetrieveUpdateDestroyDestroyResponse, CasesApiCaseRetrieveUpdateDestroyDestroyError, ThrowOnError>({
    ...options,
    url: '/cases/api/case/retrieve-update-destroy/{case}/'
}); };

/**
 * List SVannotation release infos for a given case.
 *
 * **URL:** ``/cases/api/sv-annotation-release-info/list/{case.sodar_uuid}``
 *
 * **Methods:** ``GET``
 */
export const casesApiSvAnnotationReleaseInfoListList = <ThrowOnError extends boolean = false>(options: Options<CasesApiSvAnnotationReleaseInfoListListData, ThrowOnError>) => { return (options?.client ?? client).get<CasesApiSvAnnotationReleaseInfoListListResponse, CasesApiSvAnnotationReleaseInfoListListError, ThrowOnError>({
    ...options,
    url: '/cases/api/sv-annotation-release-info/list/{case}/'
}); };

/**
 * Retrieve user and global settings.
 *
 * Also, send the CSRF token as a response token.
 */
export const casesApiUserAndGlobalSettingsRetrieve = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<CasesApiUserAndGlobalSettingsRetrieveResponse, CasesApiUserAndGlobalSettingsRetrieveError, ThrowOnError>({
    ...options,
    url: '/cases/api/user-and-global-settings/'
}); };

/**
 * List all ``GenePanelCategory`` entries with ``GenePanel``.
 *
 * **URL:** ``/genepanels/api/gene-panel-category``
 *
 * **Methods:** GET
 *
 * **Returns:**
 */
export const genepanelsApiGenepanelCategoryListList = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GenepanelsApiGenepanelCategoryListListResponse, GenepanelsApiGenepanelCategoryListListError, ThrowOnError>({
    ...options,
    url: '/genepanels/api/genepanel-category/list/'
}); };

/**
 * Retrieve information about a gene panel.
 *
 * **URL:** ``/genepanels/api/lookup-genepanel/``
 *
 * **Methods:** GET
 *
 * **Returns:**
 */
export const genepanelsApiLookupGenepanelRetrieve = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GenepanelsApiLookupGenepanelRetrieveResponse, GenepanelsApiLookupGenepanelRetrieveError, ThrowOnError>({
    ...options,
    url: '/genepanels/api/lookup-genepanel/'
}); };

/**
 * Create a project or a category.
 *
 * **URL:** ``/project/api/create``
 *
 * **Methods:** ``POST``
 *
 * **Parameters:**
 *
 * - ``title``: Project title (string)
 * - ``type``: Project type (string, options: ``PROJECT`` or ``CATEGORY``)
 * - ``parent``: Parent category UUID (string)
 * - ``description``: Project description (string, optional)
 * - ``readme``: Project readme (string, optional, supports markdown)
 * - ``public_guest_access``: Guest access for all users (boolean)
 * - ``owner``: User UUID of the project owner (string)
 */
export const projectApiCreateCreate = <ThrowOnError extends boolean = false>(options: Options<ProjectApiCreateCreateData, ThrowOnError>) => { return (options?.client ?? client).post<ProjectApiCreateCreateResponse, ProjectApiCreateCreateError, ThrowOnError>({
    ...options,
    url: '/project/api/create'
}); };

/**
 * Create a project invite.
 *
 * **URL:** ``/project/api/invites/create/{Project.sodar_uuid}``
 *
 * **Methods:** ``POST``
 *
 * **Parameters:**
 *
 * - ``email``: User email (string)
 * - ``role``: Desired role for user (string, e.g. "project contributor")
 */
export const projectApiInvitesCreateCreate = <ThrowOnError extends boolean = false>(options: Options<ProjectApiInvitesCreateCreateData, ThrowOnError>) => { return (options?.client ?? client).post<ProjectApiInvitesCreateCreateResponse, ProjectApiInvitesCreateCreateError, ThrowOnError>({
    ...options,
    url: '/project/api/invites/create/{project}'
}); };

/**
 * List user invites for a project.
 *
 * **URL:** ``/project/api/invites/list/{Project.sodar_uuid}``
 *
 * **Methods:** ``GET``
 *
 * **Returns:** List of project invite details
 */
export const projectApiInvitesListList = <ThrowOnError extends boolean = false>(options: Options<ProjectApiInvitesListListData, ThrowOnError>) => { return (options?.client ?? client).get<ProjectApiInvitesListListResponse, ProjectApiInvitesListListError, ThrowOnError>({
    ...options,
    url: '/project/api/invites/list/{project}'
}); };

/**
 * Handle invite resending in a POST request
 */
export const projectApiInvitesResendCreate = <ThrowOnError extends boolean = false>(options: Options<ProjectApiInvitesResendCreateData, ThrowOnError>) => { return (options?.client ?? client).post<ProjectApiInvitesResendCreateResponse, ProjectApiInvitesResendCreateError, ThrowOnError>({
    ...options,
    url: '/project/api/invites/resend/{projectinvite}'
}); };

/**
 * Handle invite revoking in a POST request
 */
export const projectApiInvitesRevokeCreate = <ThrowOnError extends boolean = false>(options: Options<ProjectApiInvitesRevokeCreateData, ThrowOnError>) => { return (options?.client ?? client).post<ProjectApiInvitesRevokeCreateResponse, ProjectApiInvitesRevokeCreateError, ThrowOnError>({
    ...options,
    url: '/project/api/invites/revoke/{projectinvite}'
}); };

/**
 * List all projects and categories for which the requesting user has access.
 *
 * **URL:** ``/project/api/list``
 *
 * **Methods:** ``GET``
 *
 * **Returns:**
 *
 * List of project details (see ``ProjectRetrieveAPIView``). For project finder
 * role, only lists title and UUID of projects.
 */
export const projectApiListRetrieve = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<ProjectApiListRetrieveResponse, ProjectApiListRetrieveError, ThrowOnError>({
    ...options,
    url: '/project/api/list'
}); };

/**
 * API view for retrieving remote projects from a source site
 */
export const projectApiRemoteGetRetrieve = <ThrowOnError extends boolean = false>(options: Options<ProjectApiRemoteGetRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<ProjectApiRemoteGetRetrieveResponse, ProjectApiRemoteGetRetrieveError, ThrowOnError>({
    ...options,
    url: '/project/api/remote/get/{secret}'
}); };

/**
 * Retrieve a project or category by its UUID.
 *
 * **URL:** ``/project/api/retrieve/{Project.sodar_uuid}``
 *
 * **Methods:** ``GET``
 *
 * **Returns:**
 *
 * - ``description``: Project description (string)
 * - ``parent``: Parent category UUID (string or null)
 * - ``readme``: Project readme (string, supports markdown)
 * - ``public_guest_access``: Guest access for all users (boolean)
 * - ``roles``: Project role assignments (dict, assignment UUID as key)
 * - ``sodar_uuid``: Project UUID (string)
 * - ``title``: Project title (string)
 * - ``type``: Project type (string, options: ``PROJECT`` or ``CATEGORY``)
 */
export const projectApiRetrieveRetrieve = <ThrowOnError extends boolean = false>(options: Options<ProjectApiRetrieveRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<ProjectApiRetrieveRetrieveResponse, ProjectApiRetrieveRetrieveError, ThrowOnError>({
    ...options,
    url: '/project/api/retrieve/{project}'
}); };

/**
 * Create a role assignment in a project.
 *
 * **URL:** ``/project/api/roles/create/{Project.sodar_uuid}``
 *
 * **Methods:** ``POST``
 *
 * **Parameters:**
 *
 * - ``role``: Desired role for user (string, e.g. "project contributor")
 * - ``user``: User UUID (string)
 */
export const projectApiRolesCreateCreate = <ThrowOnError extends boolean = false>(options: Options<ProjectApiRolesCreateCreateData, ThrowOnError>) => { return (options?.client ?? client).post<ProjectApiRolesCreateCreateResponse, ProjectApiRolesCreateCreateError, ThrowOnError>({
    ...options,
    url: '/project/api/roles/create/{project}'
}); };

/**
 * Destroy a role assignment.
 *
 * The owner role can not be destroyed using this view.
 *
 * **URL:** ``/project/api/roles/destroy/{RoleAssignment.sodar_uuid}``
 *
 * **Methods:** ``DELETE``
 */
export const projectApiRolesDestroyDestroy = <ThrowOnError extends boolean = false>(options: Options<ProjectApiRolesDestroyDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<ProjectApiRolesDestroyDestroyResponse, ProjectApiRolesDestroyDestroyError, ThrowOnError>({
    ...options,
    url: '/project/api/roles/destroy/{roleassignment}'
}); };

/**
 * Handle ownership transfer in a POST request
 */
export const projectApiRolesOwnerTransferCreate = <ThrowOnError extends boolean = false>(options: Options<ProjectApiRolesOwnerTransferCreateData, ThrowOnError>) => { return (options?.client ?? client).post<ProjectApiRolesOwnerTransferCreateResponse, ProjectApiRolesOwnerTransferCreateError, ThrowOnError>({
    ...options,
    url: '/project/api/roles/owner-transfer/{project}'
}); };

/**
 * Update the role assignment for a user in a project.
 *
 * The user can not be changed in this API view.
 *
 * **URL:** ``/project/api/roles/update/{RoleAssignment.sodar_uuid}``
 *
 * **Methods:** ``PUT``, ``PATCH``
 *
 * **Parameters:**
 *
 * - ``role``: Desired role for user (string, e.g. "project contributor")
 * - ``user``: User UUID (string)
 */
export const projectApiRolesUpdateUpdate = <ThrowOnError extends boolean = false>(options: Options<ProjectApiRolesUpdateUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<ProjectApiRolesUpdateUpdateResponse, ProjectApiRolesUpdateUpdateError, ThrowOnError>({
    ...options,
    url: '/project/api/roles/update/{roleassignment}'
}); };

/**
 * Update the role assignment for a user in a project.
 *
 * The user can not be changed in this API view.
 *
 * **URL:** ``/project/api/roles/update/{RoleAssignment.sodar_uuid}``
 *
 * **Methods:** ``PUT``, ``PATCH``
 *
 * **Parameters:**
 *
 * - ``role``: Desired role for user (string, e.g. "project contributor")
 * - ``user``: User UUID (string)
 */
export const projectApiRolesUpdatePartialUpdate = <ThrowOnError extends boolean = false>(options: Options<ProjectApiRolesUpdatePartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<ProjectApiRolesUpdatePartialUpdateResponse, ProjectApiRolesUpdatePartialUpdateError, ThrowOnError>({
    ...options,
    url: '/project/api/roles/update/{roleassignment}'
}); };

/**
 * API view for retrieving an app setting with the PROJECT or PROJECT_USER
 * scope.
 *
 * **URL:** ``project/api/settings/retrieve/{Project.sodar_uuid}``
 *
 * **Methods:** ``GET``
 *
 * **Parameters:**
 *
 * - ``app_name``: Name of app plugin for the setting, use "projectroles" for projectroles settings (string)
 * - ``setting_name``: Setting name (string)
 * - ``user``: User UUID for a PROJECT_USER setting (string or None, optional)
 */
export const projectApiSettingsRetrieveRetrieve = <ThrowOnError extends boolean = false>(options: Options<ProjectApiSettingsRetrieveRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<ProjectApiSettingsRetrieveRetrieveResponse, ProjectApiSettingsRetrieveRetrieveError, ThrowOnError>({
    ...options,
    url: '/project/api/settings/retrieve/{project}'
}); };

/**
 * API view for retrieving an app setting with the USER scope.
 *
 * **URL:** ``project/api/settings/retrieve/user``
 *
 * **Methods:** ``GET``
 *
 * **Parameters:**
 *
 * - ``app_name``: Name of app plugin for the setting, use "projectroles" for projectroles settings (string)
 * - ``setting_name``: Setting name (string)
 */
export const projectApiSettingsRetrieveUserRetrieve = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<ProjectApiSettingsRetrieveUserRetrieveResponse, ProjectApiSettingsRetrieveUserRetrieveError, ThrowOnError>({
    ...options,
    url: '/project/api/settings/retrieve/user'
}); };

/**
 * API view for setting the value of an app setting with the PROJECT or
 * PROJECT_USER scope.
 *
 * **URL:** ``project/api/settings/set/{Project.sodar_uuid}``
 *
 * **Methods:** ``POST``
 *
 * **Parameters:**
 *
 * - ``app_name``: Name of app plugin for the setting, use "projectroles" for projectroles settings (string)
 * - ``setting_name``: Setting name (string)
 * - ``value``: Setting value (string, may contain JSON for JSON settings)
 * - ``user``: User UUID for a PROJECT_USER setting (string or None, optional)
 */
export const projectApiSettingsSetCreate = <ThrowOnError extends boolean = false>(options: Options<ProjectApiSettingsSetCreateData, ThrowOnError>) => { return (options?.client ?? client).post<ProjectApiSettingsSetCreateResponse, ProjectApiSettingsSetCreateError, ThrowOnError>({
    ...options,
    url: '/project/api/settings/set/{project}'
}); };

/**
 * API view for setting the value of an app setting with the USER scope. Only
 * allows the user to set the value of their own settings.
 *
 * **URL:** ``project/api/settings/set/user``
 *
 * **Methods:** ``POST``
 *
 * **Parameters:**
 *
 * - ``app_name``: Name of app plugin for the setting, use "projectroles" for projectroles settings (string)
 * - ``setting_name``: Setting name (string)
 * - ``value``: Setting value (string, may contain JSON for JSON settings)
 */
export const projectApiSettingsSetUserCreate = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).post<ProjectApiSettingsSetUserCreateResponse, ProjectApiSettingsSetUserCreateError, ThrowOnError>({
    ...options,
    url: '/project/api/settings/set/user'
}); };

/**
 * Update the metadata of a project or a category.
 *
 * Note that the project owner can not be updated here. Instead, use the
 * dedicated API view ``RoleAssignmentOwnerTransferAPIView``.
 *
 * The project type can not be updated once a project has been created. The
 * parameter is still required for non-partial updates via the ``PUT`` method.
 *
 * **URL:** ``/project/api/update/{Project.sodar_uuid}``
 *
 * **Methods:** ``PUT``, ``PATCH``
 *
 * **Parameters:**
 *
 * - ``title``: Project title (string)
 * - ``type``: Project type (string, can not be modified)
 * - ``parent``: Parent category UUID (string)
 * - ``description``: Project description (string, optional)
 * - ``readme``: Project readme (string, optional, supports markdown)
 * - ``public_guest_access``: Guest access for all users (boolean)
 */
export const projectApiUpdateUpdate = <ThrowOnError extends boolean = false>(options: Options<ProjectApiUpdateUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<ProjectApiUpdateUpdateResponse, ProjectApiUpdateUpdateError, ThrowOnError>({
    ...options,
    url: '/project/api/update/{project}'
}); };

/**
 * Update the metadata of a project or a category.
 *
 * Note that the project owner can not be updated here. Instead, use the
 * dedicated API view ``RoleAssignmentOwnerTransferAPIView``.
 *
 * The project type can not be updated once a project has been created. The
 * parameter is still required for non-partial updates via the ``PUT`` method.
 *
 * **URL:** ``/project/api/update/{Project.sodar_uuid}``
 *
 * **Methods:** ``PUT``, ``PATCH``
 *
 * **Parameters:**
 *
 * - ``title``: Project title (string)
 * - ``type``: Project type (string, can not be modified)
 * - ``parent``: Parent category UUID (string)
 * - ``description``: Project description (string, optional)
 * - ``readme``: Project readme (string, optional, supports markdown)
 * - ``public_guest_access``: Guest access for all users (boolean)
 */
export const projectApiUpdatePartialUpdate = <ThrowOnError extends boolean = false>(options: Options<ProjectApiUpdatePartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<ProjectApiUpdatePartialUpdateResponse, ProjectApiUpdatePartialUpdateError, ThrowOnError>({
    ...options,
    url: '/project/api/update/{project}'
}); };

/**
 * Return information on the user making the request.
 *
 * **URL:** ``/project/api/users/current``
 *
 * **Methods:** ``GET``
 *
 * **Returns**:
 *
 * For current user:
 *
 * - ``email``: Email address of the user (string)
 * - ``is_superuser``: Superuser status (boolean)
 * - ``name``: Full name of the user (string)
 * - ``sodar_uuid``: User UUID (string)
 * - ``username``: Username of the user (string)
 */
export const projectApiUsersCurrentRetrieve = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<ProjectApiUsersCurrentRetrieveResponse, ProjectApiUsersCurrentRetrieveError, ThrowOnError>({
    ...options,
    url: '/project/api/users/current'
}); };

/**
 * Return a list of all users on the site. Excludes system users, unless called
 * with superuser access.
 *
 * **URL:** ``/project/api/users/list``
 *
 * **Methods:** ``GET``
 *
 * **Returns**: List of serializers users (see ``CurrentUserRetrieveAPIView``)
 */
export const projectApiUsersListList = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<ProjectApiUsersListListResponse, ProjectApiUsersListListError, ThrowOnError>({
    ...options,
    url: '/project/api/users/list'
}); };

/**
 * DRF list-create API view the ``EnrichmentKit`` model.
 */
export const seqmetaApiEnrichmentkitListCreateList = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<SeqmetaApiEnrichmentkitListCreateListResponse, SeqmetaApiEnrichmentkitListCreateListError, ThrowOnError>({
    ...options,
    url: '/seqmeta/api/enrichmentkit/list-create/'
}); };

/**
 * DRF list-create API view the ``EnrichmentKit`` model.
 */
export const seqmetaApiEnrichmentkitListCreateCreate = <ThrowOnError extends boolean = false>(options: Options<SeqmetaApiEnrichmentkitListCreateCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqmetaApiEnrichmentkitListCreateCreateResponse, SeqmetaApiEnrichmentkitListCreateCreateError, ThrowOnError>({
    ...options,
    url: '/seqmeta/api/enrichmentkit/list-create/'
}); };

/**
 * DRF retrieve-update-destroy API view for the ``EnrichmentKit`` model.
 */
export const seqmetaApiEnrichmentkitRetrieveUpdateDestroyRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqmetaApiEnrichmentkitRetrieveUpdateDestroyRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqmetaApiEnrichmentkitRetrieveUpdateDestroyRetrieveResponse, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqmeta/api/enrichmentkit/retrieve-update-destroy/{enrichmentkit}/'
}); };

/**
 * DRF retrieve-update-destroy API view for the ``EnrichmentKit`` model.
 */
export const seqmetaApiEnrichmentkitRetrieveUpdateDestroyUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqmetaApiEnrichmentkitRetrieveUpdateDestroyUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqmetaApiEnrichmentkitRetrieveUpdateDestroyUpdateResponse, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyUpdateError, ThrowOnError>({
    ...options,
    url: '/seqmeta/api/enrichmentkit/retrieve-update-destroy/{enrichmentkit}/'
}); };

/**
 * DRF retrieve-update-destroy API view for the ``EnrichmentKit`` model.
 */
export const seqmetaApiEnrichmentkitRetrieveUpdateDestroyPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqmetaApiEnrichmentkitRetrieveUpdateDestroyPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqmetaApiEnrichmentkitRetrieveUpdateDestroyPartialUpdateResponse, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqmeta/api/enrichmentkit/retrieve-update-destroy/{enrichmentkit}/'
}); };

/**
 * DRF retrieve-update-destroy API view for the ``EnrichmentKit`` model.
 */
export const seqmetaApiEnrichmentkitRetrieveUpdateDestroyDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqmetaApiEnrichmentkitRetrieveUpdateDestroyDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqmetaApiEnrichmentkitRetrieveUpdateDestroyDestroyResponse, SeqmetaApiEnrichmentkitRetrieveUpdateDestroyDestroyError, ThrowOnError>({
    ...options,
    url: '/seqmeta/api/enrichmentkit/retrieve-update-destroy/{enrichmentkit}/'
}); };

/**
 * DRF list-create API view the ``TargetBedFile`` model.
 */
export const seqmetaApiTargetbedfileListCreateList = <ThrowOnError extends boolean = false>(options: Options<SeqmetaApiTargetbedfileListCreateListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqmetaApiTargetbedfileListCreateListResponse, SeqmetaApiTargetbedfileListCreateListError, ThrowOnError>({
    ...options,
    url: '/seqmeta/api/targetbedfile/list-create/{enrichmentkit}/'
}); };

/**
 * DRF list-create API view the ``TargetBedFile`` model.
 */
export const seqmetaApiTargetbedfileListCreateCreate = <ThrowOnError extends boolean = false>(options: Options<SeqmetaApiTargetbedfileListCreateCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqmetaApiTargetbedfileListCreateCreateResponse, SeqmetaApiTargetbedfileListCreateCreateError, ThrowOnError>({
    ...options,
    url: '/seqmeta/api/targetbedfile/list-create/{enrichmentkit}/'
}); };

/**
 * DRF retrieve-update-destroy API view for the ``TargetBedFile`` model.
 */
export const seqmetaApiTargetbedfileRetrieveUpdateDestroyRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqmetaApiTargetbedfileRetrieveUpdateDestroyRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqmetaApiTargetbedfileRetrieveUpdateDestroyRetrieveResponse, SeqmetaApiTargetbedfileRetrieveUpdateDestroyRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqmeta/api/targetbedfile/retrieve-update-destroy/{targetbedfile}/'
}); };

/**
 * DRF retrieve-update-destroy API view for the ``TargetBedFile`` model.
 */
export const seqmetaApiTargetbedfileRetrieveUpdateDestroyUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqmetaApiTargetbedfileRetrieveUpdateDestroyUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqmetaApiTargetbedfileRetrieveUpdateDestroyUpdateResponse, SeqmetaApiTargetbedfileRetrieveUpdateDestroyUpdateError, ThrowOnError>({
    ...options,
    url: '/seqmeta/api/targetbedfile/retrieve-update-destroy/{targetbedfile}/'
}); };

/**
 * DRF retrieve-update-destroy API view for the ``TargetBedFile`` model.
 */
export const seqmetaApiTargetbedfileRetrieveUpdateDestroyPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqmetaApiTargetbedfileRetrieveUpdateDestroyPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqmetaApiTargetbedfileRetrieveUpdateDestroyPartialUpdateResponse, SeqmetaApiTargetbedfileRetrieveUpdateDestroyPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqmeta/api/targetbedfile/retrieve-update-destroy/{targetbedfile}/'
}); };

/**
 * DRF retrieve-update-destroy API view for the ``TargetBedFile`` model.
 */
export const seqmetaApiTargetbedfileRetrieveUpdateDestroyDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqmetaApiTargetbedfileRetrieveUpdateDestroyDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqmetaApiTargetbedfileRetrieveUpdateDestroyDestroyResponse, SeqmetaApiTargetbedfileRetrieveUpdateDestroyDestroyError, ThrowOnError>({
    ...options,
    url: '/seqmeta/api/targetbedfile/retrieve-update-destroy/{targetbedfile}/'
}); };

/**
 * ViewSet for the ``PredefinedQuery`` model.
 */
export const seqvarsApiPredefinedqueryList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiPredefinedqueryListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiPredefinedqueryListResponse, SeqvarsApiPredefinedqueryListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/predefinedquery/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``PredefinedQuery`` model.
 */
export const seqvarsApiPredefinedqueryCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiPredefinedqueryCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiPredefinedqueryCreateResponse, SeqvarsApiPredefinedqueryCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/predefinedquery/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``PredefinedQuery`` model.
 */
export const seqvarsApiPredefinedqueryRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiPredefinedqueryRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiPredefinedqueryRetrieveResponse, SeqvarsApiPredefinedqueryRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/predefinedquery/{querypresetssetversion}/{predefinedquery}/'
}); };

/**
 * ViewSet for the ``PredefinedQuery`` model.
 */
export const seqvarsApiPredefinedqueryUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiPredefinedqueryUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqvarsApiPredefinedqueryUpdateResponse, SeqvarsApiPredefinedqueryUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/predefinedquery/{querypresetssetversion}/{predefinedquery}/'
}); };

/**
 * ViewSet for the ``PredefinedQuery`` model.
 */
export const seqvarsApiPredefinedqueryPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiPredefinedqueryPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqvarsApiPredefinedqueryPartialUpdateResponse, SeqvarsApiPredefinedqueryPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/predefinedquery/{querypresetssetversion}/{predefinedquery}/'
}); };

/**
 * ViewSet for the ``PredefinedQuery`` model.
 */
export const seqvarsApiPredefinedqueryDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiPredefinedqueryDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqvarsApiPredefinedqueryDestroyResponse, SeqvarsApiPredefinedqueryDestroyError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/predefinedquery/{querypresetssetversion}/{predefinedquery}/'
}); };

/**
 * Allow CRUD of the user's queries.
 */
export const seqvarsApiQueryList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQueryListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQueryListResponse, SeqvarsApiQueryListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/query/{session}/'
}); };

/**
 * Allow CRUD of the user's queries.
 */
export const seqvarsApiQueryCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQueryCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQueryCreateResponse, SeqvarsApiQueryCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/query/{session}/'
}); };

/**
 * Allow CRUD of the user's queries.
 */
export const seqvarsApiQueryRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQueryRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQueryRetrieveResponse, SeqvarsApiQueryRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/query/{session}/{query}/'
}); };

/**
 * Allow CRUD of the user's queries.
 */
export const seqvarsApiQueryUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQueryUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqvarsApiQueryUpdateResponse, SeqvarsApiQueryUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/query/{session}/{query}/'
}); };

/**
 * Allow CRUD of the user's queries.
 */
export const seqvarsApiQueryPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQueryPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqvarsApiQueryPartialUpdateResponse, SeqvarsApiQueryPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/query/{session}/{query}/'
}); };

/**
 * Allow CRUD of the user's queries.
 */
export const seqvarsApiQueryDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQueryDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqvarsApiQueryDestroyResponse, SeqvarsApiQueryDestroyError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/query/{session}/{query}/'
}); };

/**
 * Create a new seqvars query from a predefined query.
 */
export const seqvarsApiQueryCreateFromCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQueryCreateFromCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQueryCreateFromCreateResponse, SeqvarsApiQueryCreateFromCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/query/{session}/create_from/'
}); };

/**
 * ViewSet for retrieving ``QueryExecution`` records.
 */
export const seqvarsApiQueryexecutionList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQueryexecutionListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQueryexecutionListResponse, SeqvarsApiQueryexecutionListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/queryexecution/{query}/'
}); };

/**
 * ViewSet for retrieving ``QueryExecution`` records.
 */
export const seqvarsApiQueryexecutionRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQueryexecutionRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQueryexecutionRetrieveResponse, SeqvarsApiQueryexecutionRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/queryexecution/{query}/{queryexecution}/'
}); };

/**
 * Create a new query execution for the given query.
 *
 * Also, start the execution of a background job.
 */
export const seqvarsApiQueryexecutionStartCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQueryexecutionStartCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQueryexecutionStartCreateResponse, SeqvarsApiQueryexecutionStartCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/queryexecution/{query}/start/'
}); };

/**
 * ViewSet for the ``QueryPresetsClinvar`` model.
 */
export const seqvarsApiQuerypresetsclinvarList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsclinvarListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsclinvarListResponse, SeqvarsApiQuerypresetsclinvarListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsclinvar/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsClinvar`` model.
 */
export const seqvarsApiQuerypresetsclinvarCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsclinvarCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQuerypresetsclinvarCreateResponse, SeqvarsApiQuerypresetsclinvarCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsclinvar/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsClinvar`` model.
 */
export const seqvarsApiQuerypresetsclinvarRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsclinvarRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsclinvarRetrieveResponse, SeqvarsApiQuerypresetsclinvarRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsclinvar/{querypresetssetversion}/{querypresetsclinvar}/'
}); };

/**
 * ViewSet for the ``QueryPresetsClinvar`` model.
 */
export const seqvarsApiQuerypresetsclinvarUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsclinvarUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqvarsApiQuerypresetsclinvarUpdateResponse, SeqvarsApiQuerypresetsclinvarUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsclinvar/{querypresetssetversion}/{querypresetsclinvar}/'
}); };

/**
 * ViewSet for the ``QueryPresetsClinvar`` model.
 */
export const seqvarsApiQuerypresetsclinvarPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsclinvarPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqvarsApiQuerypresetsclinvarPartialUpdateResponse, SeqvarsApiQuerypresetsclinvarPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsclinvar/{querypresetssetversion}/{querypresetsclinvar}/'
}); };

/**
 * ViewSet for the ``QueryPresetsClinvar`` model.
 */
export const seqvarsApiQuerypresetsclinvarDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsclinvarDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqvarsApiQuerypresetsclinvarDestroyResponse, SeqvarsApiQuerypresetsclinvarDestroyError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsclinvar/{querypresetssetversion}/{querypresetsclinvar}/'
}); };

/**
 * ViewSet for the ``QueryPresetsColumns`` model.
 */
export const seqvarsApiQuerypresetscolumnsList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetscolumnsListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetscolumnsListResponse, SeqvarsApiQuerypresetscolumnsListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetscolumns/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsColumns`` model.
 */
export const seqvarsApiQuerypresetscolumnsCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetscolumnsCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQuerypresetscolumnsCreateResponse, SeqvarsApiQuerypresetscolumnsCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetscolumns/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsColumns`` model.
 */
export const seqvarsApiQuerypresetscolumnsRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetscolumnsRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetscolumnsRetrieveResponse, SeqvarsApiQuerypresetscolumnsRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetscolumns/{querypresetssetversion}/{querypresetscolumns}/'
}); };

/**
 * ViewSet for the ``QueryPresetsColumns`` model.
 */
export const seqvarsApiQuerypresetscolumnsUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetscolumnsUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqvarsApiQuerypresetscolumnsUpdateResponse, SeqvarsApiQuerypresetscolumnsUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetscolumns/{querypresetssetversion}/{querypresetscolumns}/'
}); };

/**
 * ViewSet for the ``QueryPresetsColumns`` model.
 */
export const seqvarsApiQuerypresetscolumnsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetscolumnsPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqvarsApiQuerypresetscolumnsPartialUpdateResponse, SeqvarsApiQuerypresetscolumnsPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetscolumns/{querypresetssetversion}/{querypresetscolumns}/'
}); };

/**
 * ViewSet for the ``QueryPresetsColumns`` model.
 */
export const seqvarsApiQuerypresetscolumnsDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetscolumnsDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqvarsApiQuerypresetscolumnsDestroyResponse, SeqvarsApiQuerypresetscolumnsDestroyError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetscolumns/{querypresetssetversion}/{querypresetscolumns}/'
}); };

/**
 * ViewSet for the ``QueryPresetsConsequence`` model.
 */
export const seqvarsApiQuerypresetsconsequenceList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsconsequenceListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsconsequenceListResponse, SeqvarsApiQuerypresetsconsequenceListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsconsequence/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsConsequence`` model.
 */
export const seqvarsApiQuerypresetsconsequenceCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsconsequenceCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQuerypresetsconsequenceCreateResponse, SeqvarsApiQuerypresetsconsequenceCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsconsequence/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsConsequence`` model.
 */
export const seqvarsApiQuerypresetsconsequenceRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsconsequenceRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsconsequenceRetrieveResponse, SeqvarsApiQuerypresetsconsequenceRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsconsequence/{querypresetssetversion}/{querypresetsconsequence}/'
}); };

/**
 * ViewSet for the ``QueryPresetsConsequence`` model.
 */
export const seqvarsApiQuerypresetsconsequenceUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsconsequenceUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqvarsApiQuerypresetsconsequenceUpdateResponse, SeqvarsApiQuerypresetsconsequenceUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsconsequence/{querypresetssetversion}/{querypresetsconsequence}/'
}); };

/**
 * ViewSet for the ``QueryPresetsConsequence`` model.
 */
export const seqvarsApiQuerypresetsconsequencePartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsconsequencePartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqvarsApiQuerypresetsconsequencePartialUpdateResponse, SeqvarsApiQuerypresetsconsequencePartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsconsequence/{querypresetssetversion}/{querypresetsconsequence}/'
}); };

/**
 * ViewSet for the ``QueryPresetsConsequence`` model.
 */
export const seqvarsApiQuerypresetsconsequenceDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsconsequenceDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqvarsApiQuerypresetsconsequenceDestroyResponse, SeqvarsApiQuerypresetsconsequenceDestroyError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsconsequence/{querypresetssetversion}/{querypresetsconsequence}/'
}); };

/**
 * ViewSet for listing the factory defaults.
 *
 * This is a public view, no permissions are required.
 */
export const seqvarsApiQuerypresetsfactorydefaultsList = <ThrowOnError extends boolean = false>(options?: Options<SeqvarsApiQuerypresetsfactorydefaultsListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsfactorydefaultsListResponse, SeqvarsApiQuerypresetsfactorydefaultsListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsfactorydefaults/'
}); };

/**
 * ViewSet for listing the factory defaults.
 *
 * This is a public view, no permissions are required.
 */
export const seqvarsApiQuerypresetsfactorydefaultsRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsfactorydefaultsRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsfactorydefaultsRetrieveResponse, SeqvarsApiQuerypresetsfactorydefaultsRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsfactorydefaults/{querypresetsset}/'
}); };

/**
 * ViewSet for the ``QueryPresetsFrequency`` model.
 */
export const seqvarsApiQuerypresetsfrequencyList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsfrequencyListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsfrequencyListResponse, SeqvarsApiQuerypresetsfrequencyListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsfrequency/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsFrequency`` model.
 */
export const seqvarsApiQuerypresetsfrequencyCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsfrequencyCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQuerypresetsfrequencyCreateResponse, SeqvarsApiQuerypresetsfrequencyCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsfrequency/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsFrequency`` model.
 */
export const seqvarsApiQuerypresetsfrequencyRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsfrequencyRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsfrequencyRetrieveResponse, SeqvarsApiQuerypresetsfrequencyRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsfrequency/{querypresetssetversion}/{querypresetsfrequency}/'
}); };

/**
 * ViewSet for the ``QueryPresetsFrequency`` model.
 */
export const seqvarsApiQuerypresetsfrequencyUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsfrequencyUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqvarsApiQuerypresetsfrequencyUpdateResponse, SeqvarsApiQuerypresetsfrequencyUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsfrequency/{querypresetssetversion}/{querypresetsfrequency}/'
}); };

/**
 * ViewSet for the ``QueryPresetsFrequency`` model.
 */
export const seqvarsApiQuerypresetsfrequencyPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsfrequencyPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqvarsApiQuerypresetsfrequencyPartialUpdateResponse, SeqvarsApiQuerypresetsfrequencyPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsfrequency/{querypresetssetversion}/{querypresetsfrequency}/'
}); };

/**
 * ViewSet for the ``QueryPresetsFrequency`` model.
 */
export const seqvarsApiQuerypresetsfrequencyDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsfrequencyDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqvarsApiQuerypresetsfrequencyDestroyResponse, SeqvarsApiQuerypresetsfrequencyDestroyError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsfrequency/{querypresetssetversion}/{querypresetsfrequency}/'
}); };

/**
 * ViewSet for the ``QueryPresetsLocus`` model.
 */
export const seqvarsApiQuerypresetslocusList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetslocusListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetslocusListResponse, SeqvarsApiQuerypresetslocusListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetslocus/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsLocus`` model.
 */
export const seqvarsApiQuerypresetslocusCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetslocusCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQuerypresetslocusCreateResponse, SeqvarsApiQuerypresetslocusCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetslocus/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsLocus`` model.
 */
export const seqvarsApiQuerypresetslocusRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetslocusRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetslocusRetrieveResponse, SeqvarsApiQuerypresetslocusRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetslocus/{querypresetssetversion}/{querypresetslocus}/'
}); };

/**
 * ViewSet for the ``QueryPresetsLocus`` model.
 */
export const seqvarsApiQuerypresetslocusUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetslocusUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqvarsApiQuerypresetslocusUpdateResponse, SeqvarsApiQuerypresetslocusUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetslocus/{querypresetssetversion}/{querypresetslocus}/'
}); };

/**
 * ViewSet for the ``QueryPresetsLocus`` model.
 */
export const seqvarsApiQuerypresetslocusPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetslocusPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqvarsApiQuerypresetslocusPartialUpdateResponse, SeqvarsApiQuerypresetslocusPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetslocus/{querypresetssetversion}/{querypresetslocus}/'
}); };

/**
 * ViewSet for the ``QueryPresetsLocus`` model.
 */
export const seqvarsApiQuerypresetslocusDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetslocusDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqvarsApiQuerypresetslocusDestroyResponse, SeqvarsApiQuerypresetslocusDestroyError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetslocus/{querypresetssetversion}/{querypresetslocus}/'
}); };

/**
 * ViewSet for the ``QueryPresetsPhenotypePrio`` model.
 */
export const seqvarsApiQuerypresetsphenotypeprioList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsphenotypeprioListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsphenotypeprioListResponse, SeqvarsApiQuerypresetsphenotypeprioListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsphenotypeprio/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsPhenotypePrio`` model.
 */
export const seqvarsApiQuerypresetsphenotypeprioCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsphenotypeprioCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQuerypresetsphenotypeprioCreateResponse, SeqvarsApiQuerypresetsphenotypeprioCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsphenotypeprio/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsPhenotypePrio`` model.
 */
export const seqvarsApiQuerypresetsphenotypeprioRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsphenotypeprioRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsphenotypeprioRetrieveResponse, SeqvarsApiQuerypresetsphenotypeprioRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsphenotypeprio/{querypresetssetversion}/{querypresetsphenotypeprio}/'
}); };

/**
 * ViewSet for the ``QueryPresetsPhenotypePrio`` model.
 */
export const seqvarsApiQuerypresetsphenotypeprioUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsphenotypeprioUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqvarsApiQuerypresetsphenotypeprioUpdateResponse, SeqvarsApiQuerypresetsphenotypeprioUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsphenotypeprio/{querypresetssetversion}/{querypresetsphenotypeprio}/'
}); };

/**
 * ViewSet for the ``QueryPresetsPhenotypePrio`` model.
 */
export const seqvarsApiQuerypresetsphenotypeprioPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsphenotypeprioPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqvarsApiQuerypresetsphenotypeprioPartialUpdateResponse, SeqvarsApiQuerypresetsphenotypeprioPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsphenotypeprio/{querypresetssetversion}/{querypresetsphenotypeprio}/'
}); };

/**
 * ViewSet for the ``QueryPresetsPhenotypePrio`` model.
 */
export const seqvarsApiQuerypresetsphenotypeprioDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsphenotypeprioDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqvarsApiQuerypresetsphenotypeprioDestroyResponse, SeqvarsApiQuerypresetsphenotypeprioDestroyError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsphenotypeprio/{querypresetssetversion}/{querypresetsphenotypeprio}/'
}); };

/**
 * ViewSet for the ``QueryPresetsQuality`` model.
 */
export const seqvarsApiQuerypresetsqualityList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsqualityListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsqualityListResponse, SeqvarsApiQuerypresetsqualityListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsquality/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsQuality`` model.
 */
export const seqvarsApiQuerypresetsqualityCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsqualityCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQuerypresetsqualityCreateResponse, SeqvarsApiQuerypresetsqualityCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsquality/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsQuality`` model.
 */
export const seqvarsApiQuerypresetsqualityRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsqualityRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsqualityRetrieveResponse, SeqvarsApiQuerypresetsqualityRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsquality/{querypresetssetversion}/{querypresetsquality}/'
}); };

/**
 * ViewSet for the ``QueryPresetsQuality`` model.
 */
export const seqvarsApiQuerypresetsqualityUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsqualityUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqvarsApiQuerypresetsqualityUpdateResponse, SeqvarsApiQuerypresetsqualityUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsquality/{querypresetssetversion}/{querypresetsquality}/'
}); };

/**
 * ViewSet for the ``QueryPresetsQuality`` model.
 */
export const seqvarsApiQuerypresetsqualityPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsqualityPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqvarsApiQuerypresetsqualityPartialUpdateResponse, SeqvarsApiQuerypresetsqualityPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsquality/{querypresetssetversion}/{querypresetsquality}/'
}); };

/**
 * ViewSet for the ``QueryPresetsQuality`` model.
 */
export const seqvarsApiQuerypresetsqualityDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsqualityDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqvarsApiQuerypresetsqualityDestroyResponse, SeqvarsApiQuerypresetsqualityDestroyError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsquality/{querypresetssetversion}/{querypresetsquality}/'
}); };

/**
 * ViewSet for the ``QueryPresetsSet`` model.
 */
export const seqvarsApiQuerypresetssetList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetssetListResponse, SeqvarsApiQuerypresetssetListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsset/{project}/'
}); };

/**
 * ViewSet for the ``QueryPresetsSet`` model.
 */
export const seqvarsApiQuerypresetssetCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQuerypresetssetCreateResponse, SeqvarsApiQuerypresetssetCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsset/{project}/'
}); };

/**
 * ViewSet for the ``QueryPresetsSet`` model.
 */
export const seqvarsApiQuerypresetssetRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetssetRetrieveResponse, SeqvarsApiQuerypresetssetRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsset/{project}/{querypresetsset}/'
}); };

/**
 * ViewSet for the ``QueryPresetsSet`` model.
 */
export const seqvarsApiQuerypresetssetUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqvarsApiQuerypresetssetUpdateResponse, SeqvarsApiQuerypresetssetUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsset/{project}/{querypresetsset}/'
}); };

/**
 * ViewSet for the ``QueryPresetsSet`` model.
 */
export const seqvarsApiQuerypresetssetPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqvarsApiQuerypresetssetPartialUpdateResponse, SeqvarsApiQuerypresetssetPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsset/{project}/{querypresetsset}/'
}); };

/**
 * ViewSet for the ``QueryPresetsSet`` model.
 */
export const seqvarsApiQuerypresetssetDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqvarsApiQuerypresetssetDestroyResponse, SeqvarsApiQuerypresetssetDestroyError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsset/{project}/{querypresetsset}/'
}); };

/**
 * Create a copy/clone of the given preset set.
 */
export const seqvarsApiQuerypresetssetCopyFromCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetCopyFromCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQuerypresetssetCopyFromCreateResponse, SeqvarsApiQuerypresetssetCopyFromCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsset/{project}/{querypresetsset}/copy_from/'
}); };

/**
 * ViewSet for the ``QueryPresetsSetVersion`` model.
 */
export const seqvarsApiQuerypresetssetversionList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetversionListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetssetversionListResponse, SeqvarsApiQuerypresetssetversionListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetssetversion/{querypresetsset}/'
}); };

/**
 * ViewSet for the ``QueryPresetsSetVersion`` model.
 */
export const seqvarsApiQuerypresetssetversionCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetversionCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQuerypresetssetversionCreateResponse, SeqvarsApiQuerypresetssetversionCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetssetversion/{querypresetsset}/'
}); };

/**
 * ViewSet for the ``QueryPresetsSetVersion`` model.
 */
export const seqvarsApiQuerypresetssetversionRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetversionRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetssetversionRetrieveResponse, SeqvarsApiQuerypresetssetversionRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetssetversion/{querypresetsset}/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsSetVersion`` model.
 */
export const seqvarsApiQuerypresetssetversionUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetversionUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqvarsApiQuerypresetssetversionUpdateResponse, SeqvarsApiQuerypresetssetversionUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetssetversion/{querypresetsset}/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsSetVersion`` model.
 */
export const seqvarsApiQuerypresetssetversionPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetversionPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqvarsApiQuerypresetssetversionPartialUpdateResponse, SeqvarsApiQuerypresetssetversionPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetssetversion/{querypresetsset}/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsSetVersion`` model.
 */
export const seqvarsApiQuerypresetssetversionDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetversionDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqvarsApiQuerypresetssetversionDestroyResponse, SeqvarsApiQuerypresetssetversionDestroyError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetssetversion/{querypresetsset}/{querypresetssetversion}/'
}); };

/**
 * Copy from another presets set version.
 */
export const seqvarsApiQuerypresetssetversionCopyFromCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetssetversionCopyFromCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQuerypresetssetversionCopyFromCreateResponse, SeqvarsApiQuerypresetssetversionCopyFromCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetssetversion/{querypresetsset}/{querypresetssetversion}/copy_from/'
}); };

/**
 * ViewSet for the ``QueryPresetsVariantPrio`` model.
 */
export const seqvarsApiQuerypresetsvariantprioList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsvariantprioListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsvariantprioListResponse, SeqvarsApiQuerypresetsvariantprioListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsvariantprio/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsVariantPrio`` model.
 */
export const seqvarsApiQuerypresetsvariantprioCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsvariantprioCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQuerypresetsvariantprioCreateResponse, SeqvarsApiQuerypresetsvariantprioCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsvariantprio/{querypresetssetversion}/'
}); };

/**
 * ViewSet for the ``QueryPresetsVariantPrio`` model.
 */
export const seqvarsApiQuerypresetsvariantprioRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsvariantprioRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerypresetsvariantprioRetrieveResponse, SeqvarsApiQuerypresetsvariantprioRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsvariantprio/{querypresetssetversion}/{querypresetsvariantprio}/'
}); };

/**
 * ViewSet for the ``QueryPresetsVariantPrio`` model.
 */
export const seqvarsApiQuerypresetsvariantprioUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsvariantprioUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqvarsApiQuerypresetsvariantprioUpdateResponse, SeqvarsApiQuerypresetsvariantprioUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsvariantprio/{querypresetssetversion}/{querypresetsvariantprio}/'
}); };

/**
 * ViewSet for the ``QueryPresetsVariantPrio`` model.
 */
export const seqvarsApiQuerypresetsvariantprioPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsvariantprioPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqvarsApiQuerypresetsvariantprioPartialUpdateResponse, SeqvarsApiQuerypresetsvariantprioPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsvariantprio/{querypresetssetversion}/{querypresetsvariantprio}/'
}); };

/**
 * ViewSet for the ``QueryPresetsVariantPrio`` model.
 */
export const seqvarsApiQuerypresetsvariantprioDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerypresetsvariantprioDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqvarsApiQuerypresetsvariantprioDestroyResponse, SeqvarsApiQuerypresetsvariantprioDestroyError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querypresetsvariantprio/{querypresetssetversion}/{querypresetsvariantprio}/'
}); };

/**
 * ViewSet for the ``QuerySettings`` model.
 */
export const seqvarsApiQuerysettingsList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerysettingsListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerysettingsListResponse, SeqvarsApiQuerysettingsListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querysettings/{session}/'
}); };

/**
 * ViewSet for the ``QuerySettings`` model.
 */
export const seqvarsApiQuerysettingsCreate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerysettingsCreateData, ThrowOnError>) => { return (options?.client ?? client).post<SeqvarsApiQuerysettingsCreateResponse, SeqvarsApiQuerysettingsCreateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querysettings/{session}/'
}); };

/**
 * ViewSet for the ``QuerySettings`` model.
 */
export const seqvarsApiQuerysettingsRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerysettingsRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiQuerysettingsRetrieveResponse, SeqvarsApiQuerysettingsRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querysettings/{session}/{querysettings}/'
}); };

/**
 * ViewSet for the ``QuerySettings`` model.
 */
export const seqvarsApiQuerysettingsUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerysettingsUpdateData, ThrowOnError>) => { return (options?.client ?? client).put<SeqvarsApiQuerysettingsUpdateResponse, SeqvarsApiQuerysettingsUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querysettings/{session}/{querysettings}/'
}); };

/**
 * ViewSet for the ``QuerySettings`` model.
 */
export const seqvarsApiQuerysettingsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerysettingsPartialUpdateData, ThrowOnError>) => { return (options?.client ?? client).patch<SeqvarsApiQuerysettingsPartialUpdateResponse, SeqvarsApiQuerysettingsPartialUpdateError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querysettings/{session}/{querysettings}/'
}); };

/**
 * ViewSet for the ``QuerySettings`` model.
 */
export const seqvarsApiQuerysettingsDestroy = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiQuerysettingsDestroyData, ThrowOnError>) => { return (options?.client ?? client).delete<SeqvarsApiQuerysettingsDestroyResponse, SeqvarsApiQuerysettingsDestroyError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/querysettings/{session}/{querysettings}/'
}); };

/**
 * ViewSet for retrieving ``ResultRow`` records.
 */
export const seqvarsApiResultrowList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiResultrowListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiResultrowListResponse, SeqvarsApiResultrowListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/resultrow/{resultset}/'
}); };

/**
 * ViewSet for retrieving ``ResultRow`` records.
 */
export const seqvarsApiResultrowRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiResultrowRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiResultrowRetrieveResponse, SeqvarsApiResultrowRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/resultrow/{resultset}/{seqvarresultrow}/'
}); };

/**
 * ViewSet for retrieving ``ResultSet`` records.
 */
export const seqvarsApiResultsetList = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiResultsetListData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiResultsetListResponse, SeqvarsApiResultsetListError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/resultset/{queryexecution}/'
}); };

/**
 * ViewSet for retrieving ``ResultSet`` records.
 */
export const seqvarsApiResultsetRetrieve = <ThrowOnError extends boolean = false>(options: Options<SeqvarsApiResultsetRetrieveData, ThrowOnError>) => { return (options?.client ?? client).get<SeqvarsApiResultsetRetrieveResponse, SeqvarsApiResultsetRetrieveError, ThrowOnError>({
    ...options,
    url: '/seqvars/api/resultset/{queryexecution}/{resultset}/'
}); };