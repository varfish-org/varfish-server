/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/variants/ajax/extra-anno-fields/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description A view that returns all extra annotation field names.
     *
     *     **URL:** ``/variants/api/extra-anno-fields/``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** List of extra annotation field names. */
    get: operations['listExtraAnnoFields']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/project/qc/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Render JSON with project-wide case statistics */
    get: operations['retrieveCaseListQcStats']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/case/retrieve/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve detail of the specified case.
     *
     *     **URL:** ``/variants/api/case/retrieve/{case.sodar_uuid}/``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:**
     *
     *     - ``date_created`` - creation timestamp (ISO 8601 ``str``)
     *     - ``date_modified`` - modification timestamp (ISO 8601 ``str``)
     *     - ``index`` - index sample name (``str``)
     *     - ``name`` - case name (``str``)
     *     - ``notes`` - any notes related to case (``str`` or ``null``)
     *     - ``num_small_vars`` - number of small variants (``int`` or ``null``)
     *     - ``num_svs`` - number of structural variants (``int`` or ``null``)
     *     - ``pedigree`` - ``list`` of ``dict`` representing pedigree entries, ``dict`` have keys
     *
     *         - ``sex`` - PLINK-PED encoded biological sample sex (``int``, 0-unknown, 1-male, 2-female)
     *         - ``father`` - father sample name (``str``)
     *         - ``mother`` - mother sample name (``str``)
     *         - ``name`` - current sample's name (``str``)
     *         - ``affected`` - PLINK-PED encoded affected state (``int``, 0-unknown, 1-unaffected, 2-affected)
     *         - ``has_gt_entries`` - whether sample has genotype entries (``boolean``)
     *
     *     - ``project`` - UUID of owning project (``str``)
     *     - ``release`` - genome build (``str``, one of ``["GRCh37", "GRCh37"]``)
     *     - ``sodar_uuid`` - case UUID (``str``)
     *     - ``status`` - status of case (``str``, one of ``"initial"``, ``"active"``, ``"closed-unsolved"``,
     *       ``"closed-uncertain"``, ``"closed-solved"``)
     *     - ``tags`` - ``list`` of ``str`` tags */
    get: operations['retrieveCase']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query-case/list/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List small variant queries for the given Case.
     *
     *     **URL:** ``/variants/api/query-case/list/{case.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Parameters:**
     *
     *     - ``page`` - specify page to return (default/first is ``1``)
     *     - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)
     *
     *     **Returns:**
     *
     *     - ``count`` - number of total elements (``int``)
     *     - ``next`` - URL to next page (``str`` or ``null``)
     *     - ``previous`` - URL to next page (``str`` or ``null``)
     *     - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`) */
    get: operations['retrieveSmallVariantQuery']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query/list-create/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description API endpoint for listing and creating SmallVariant queries for a given case.
     *
     *     After creation, a background job will be started to execute the query.
     *
     *     **URL:** ``/variants/api/query/list-create/{case.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``POST`` */
    get: operations['retrieveSmallVariantQuery']
    put?: never
    /** @description API endpoint for listing and creating SmallVariant queries for a given case.
     *
     *     After creation, a background job will be started to execute the query.
     *
     *     **URL:** ``/variants/api/query/list-create/{case.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``POST`` */
    post: operations['createSmallVariantQuery']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query/retrieve-update-destroy/{smallvariantquery}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description API endpoint for retrieving, updating, and deleting SmallVariant queries for a given case.
     *
     *     **URL:** ``/variants/api/query/retrieve-update-destroy/{smallvariantquery.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    get: operations['retrieveSmallVariantQueryWithLogs']
    /** @description API endpoint for retrieving, updating, and deleting SmallVariant queries for a given case.
     *
     *     **URL:** ``/variants/api/query/retrieve-update-destroy/{smallvariantquery.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    put: operations['updateSmallVariantQueryWithLogs']
    post?: never
    /** @description API endpoint for retrieving, updating, and deleting SmallVariant queries for a given case.
     *
     *     **URL:** ``/variants/api/query/retrieve-update-destroy/{smallvariantquery.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    delete: operations['destroySmallVariantQueryWithLogs']
    options?: never
    head?: never
    /** @description API endpoint for retrieving, updating, and deleting SmallVariant queries for a given case.
     *
     *     **URL:** ``/variants/api/query/retrieve-update-destroy/{smallvariantquery.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    patch: operations['partialUpdateSmallVariantQueryWithLogs']
    trace?: never
  }
  '/variants/api/query-result-set/list/{smallvariantquery}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description API endpoint for listing query result sets for a query.
     *
     *     **URL:** ``/variants/api/query-result-set/list/{smallvariantquery.sodar_uuid}/``
     *
     *     **Methods:** ``GET`` */
    get: operations['retrieveSmallVariantQueryResultSet']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query-result-set/retrieve/{smallvariantqueryresultset}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description API endpoint for retrieving query result sets.
     *
     *     **URL:** ``/variants/api/query-result-set/retrieve/{smallvariantquery.sodar_uuid}/``
     *
     *     **Methods:** ``GET`` */
    get: operations['retrieveSmallVariantQueryResultSet']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query-result-row/list/{smallvariantqueryresultset}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description API endpoint for listing query result rows.
     *
     *     **URL:** ``/variants/api/query-result-row/list/{smallvariantqueryresultset.sodar_uuid}/``
     *
     *     **Methods:** ``GET`` */
    get: operations['retrieveSmallVariantQueryResultRow']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query-result-row/retrieve/{smallvariantqueryresultrow}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description API endpoint for retrieving one result row.
     *
     *     **URL:** ``/variants/api/query-result-row/retrieve/{smallvariantqueryresultrow.sodar_uuid}/``
     *
     *     **Methods:** ``GET`` */
    get: operations['retrieveSmallVariantQueryResultRow']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query-case/query-settings-shortcut/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Generate query settings for a given case by certain shortcuts.
     *
     *     **URL:** ``/variants/api/query-case/query-settings-shortcut/{case.uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Parameters:**
     *
     *     - ``database`` - the database to query, one of ``"refseq"`` (default) and ``"ensembl"``
     *
     *     - ``quick_preset`` - overall preset selection using the presets below, valid values are
     *
     *          - ``defaults`` - applies presets that are recommended for starting out without a specific hypothesis
     *          - ``de_novo`` - applies presets that are recommended for starting out when the hypothesis is dominannt
     *            inheritance with *de novo* variants
     *          - ``dominant`` - applies presets that are recommended for starting out when the hypothesis is dominant
     *            inheritance (but not with *de novo* variants)
     *          - ``homozygous_recessive`` - applies presets that are recommended for starting out when the hypothesis is
     *            recessive with homzygous variants
     *          - ``compound_heterozygous`` - applies presets that are recommended for starting out when the hypothesis is
     *            recessive with compound heterozygous variants
     *          - ``recessive`` - applies presets that are recommended for starting out when the hypothesis is recessive mode
     *            of inheritance
     *          - ``x_recessive`` - applies presets that are recommended for starting out when the hypothesis is X recessive
     *            mode of inheritance
     *          - ``clinvar_pathogenic`` - apply presets that are recommended for screening variants for known pathogenic
     *            variants present Clinvar
     *          - ``mitochondrial`` - apply presets recommended for starting out to filter for mitochondrial mode of
     *            inheritance
     *          - ``whole_exomes`` - apply presets that return all variants of the case, regardless of frequency, quality etc.
     *
     *     - ``inheritance`` - preset selection for mode of inheritance, valid values are
     *
     *         - ``any`` - no particular constraint on inheritance (default)
     *         - ``dominant`` - allow variants compatible with dominant mode of inheritance (includes *de novo* variants)
     *         - ``homozygous_recessive`` - allow variants compatible with homozygous recessive mode of inheritance
     *         - ``compound_heterozygous`` - allow variants compatible with compound heterozygous recessive mode of
     *           inheritance
     *         - ``recessive`` - allow variants compatible with recessive mode of inheritance of a disease/trait (includes
     *           both homozygous and compound heterozygous recessive)
     *         - ``x_recessive`` - allow variants compatible with X_recessive mode of inheritance of a disease/trait
     *         - ``mitochondrial`` - mitochondrial inheritance (also applicable for "clinvar pathogenic")
     *         - ``custom`` - indicates custom settings such that none of the above inheritance settings applies
     *
     *     - ``frequency`` - preset selection for frequencies, valid values are
     *
     *         - ``any`` - do not apply any thresholds
     *         - ``dominant_super_strict`` - apply thresholds considered "very strict" in a dominant disease context
     *         - ``dominant_strict`` - apply thresholds considered "strict" in a dominant disease context (default)
     *         - ``dominant_relaxed`` - apply thresholds considered "relaxed" in a dominant disease context
     *         - ``recessive_strict`` - apply thresholds considered "strict" in a recessiv disease context
     *         - ``recessive_relaxed`` - apply thresholds considered "relaxed" in a recessiv disease context
     *         - ``custom`` - indicates custom settings such that none of the above frequency settings applies
     *
     *     - ``impact`` - preset selection for molecular impact values, valid values are
     *
     *         - ``null_variant`` - allow variants that are predicted to be null variants
     *         - ``aa_change_splicing`` - allow variants that are predicted to change the amino acid of the gene's
     *           protein and also splicing variants
     *         - ``all_coding_deep_intronic`` - allow all coding variants and also deeply intronic ones
     *         - ``whole_transcript`` - allow variants from the whole transcript (exonic/intronic)
     *         - ``any_impact`` - allow any predicted molecular impact
     *         - ``custom`` - indicates custom settings such that none of the above impact settings applies
     *
     *     - ``quality`` - preset selection for variant call quality values, valid values are
     *
     *         - ``super_strict`` - very stricdt quality settings
     *         - ``strict`` - strict quality settings, used as the default
     *         - ``relaxed`` - relaxed quality settings
     *         - ``any`` - ignore quality, all variants pass filter
     *         - ``custom`` - indicates custom settings such that none of the above quality settings applies
     *
     *     - ``chromosomes`` - preset selection for selecting chromosomes/regions/genes allow/block lists, valid values are
     *
     *         - ``whole_genome`` - the defaults settings selecting the whole genome
     *         - ``autosomes`` - select the variants lying on the autosomes only
     *         - ``x_chromosome`` - select variants on the X chromosome only
     *         - ``y_chromosome`` - select variants on the Y chromosome only
     *         - ``mt_chromosome`` - select variants on the mitochondrial chromosome only
     *         - ``custom`` - indicates custom settings such that none of the above chromosomes presets applies
     *
     *     - ``flagsetc`` - preset selection for "flags etc." section, valid values are
     *
     *         - ``defaults`` - the defaults also used in the user interface
     *         - ``clinvar_only`` - select variants present in Clinvar only
     *         - ``user_flagged`` - select user_flagged variants only
     *         - ``custom`` - indicates custom settings such that none of the above flags etc. presets apply
     *
     *     **Returns:**
     *
     *     - ``presets`` - a ``dict`` with the following keys; this mirrors back the quick presets and further presets
     *       selected in the parameters
     *
     *         - ``quick_presets`` - one of the ``quick_presets`` preset values from above
     *         - ``inheritance`` - one of the ``inheritance`` preset values from above
     *         - ``frequency`` - one of the ``frequency`` preset values from above
     *         - ``impact`` - one of the ``impact`` preset values from above
     *         - ``quality`` - one of the ``quality`` preset values from above
     *         - ``chromosomes`` - one of the ``chromosomes`` preset values from above
     *         - ``flagsetc`` - one of the ``flagsetc`` preset values from above
     *
     *     - ``query_settings`` - a ``dict`` with the query settings ready to be used for the given case; this will
     *       follow :ref:`api_json_schemas_case_query_v1`. */
    get: operations['retrieveSettingsShortcuts']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query-case/quick-presets/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Resolve quick preset name to category preset.
     *
     *     **URL:** ``/variants/api/query-case/quick-presets``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** A dict mapping each of the category names to category preset values. */
    get: operations['listSmallVariantQuickPresetsApis']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query-case/category-presets/{category}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List all presets for the given category.
     *
     *     **URL:** ``/variants/api/query-case/category-presets/{category}``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** A dict mapping each of the category names to category preset values. */
    get: operations['retrieveSmallVariantCategoryPresetsApi']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query-case/inheritance-presets/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List all inheritance presets for the given case.
     *
     *     **URL:** ``/variants/api/query-case/inheritance-presets/{case.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** A dict mapping each of the category names to category preset values. */
    get: operations['retrieveSmallVariantInheritancePresetsApi']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query-case/download/generate/tsv/{smallvariantquery}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Start generating results for download of a small variant query.
     *
     *     **URL:** ``/variants/api/query-case/download/generate/tsv/{query.sodar_uuid}``
     *
     *     **URL:** ``/variants/api/query-case/download/generate/xlsx/{query.sodar_uuid}``
     *
     *     **URL:** ``/variants/api/query-case/download/generate/vcf/{query.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** */
    get: operations['retrieveSmallVariantQueryDownloadGenerateApi']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query-case/download/generate/vcf/{smallvariantquery}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Start generating results for download of a small variant query.
     *
     *     **URL:** ``/variants/api/query-case/download/generate/tsv/{query.sodar_uuid}``
     *
     *     **URL:** ``/variants/api/query-case/download/generate/xlsx/{query.sodar_uuid}``
     *
     *     **URL:** ``/variants/api/query-case/download/generate/vcf/{query.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** */
    get: operations['retrieveSmallVariantQueryDownloadGenerateApi']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query-case/download/generate/xlsx/{smallvariantquery}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Start generating results for download of a small variant query.
     *
     *     **URL:** ``/variants/api/query-case/download/generate/tsv/{query.sodar_uuid}``
     *
     *     **URL:** ``/variants/api/query-case/download/generate/xlsx/{query.sodar_uuid}``
     *
     *     **URL:** ``/variants/api/query-case/download/generate/vcf/{query.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** */
    get: operations['retrieveSmallVariantQueryDownloadGenerateApi']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query-case/download/serve/{exportfilebgjob}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Serve download results of a small variant query.
     *
     *     **URL:** ``/variants/api/query-case/download/serve/{exportfilebgjob.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** */
    get: operations['retrieveSmallVariantQueryDownloadServeApi']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/query-case/download/status/{exportfilebgjob}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Get status of generating results for download of a small variant query.
     *
     *     **URL:** ``/variants/api/query-case/download/status/{job.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** */
    get: operations['retrieveExportFileBgJob']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/small-variant-comment/list-create/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description A view that allows to list existing comments and new ones.
     *
     *     **URL:** ``/variants/api/small-variant-comment/list-create/{case.sodar_uuid}/``
     *
     *     **Query Arguments:**
     *
     *     - release
     *     - chromosome
     *     - start
     *     - end
     *     - reference
     *     - alternative
     *
     *     **Methods:** ``GET``, ``POST``
     *
     *     **Returns:** */
    get: operations['retrieveSmallVariantComment']
    put?: never
    /** @description A view that allows to list existing comments and new ones.
     *
     *     **URL:** ``/variants/api/small-variant-comment/list-create/{case.sodar_uuid}/``
     *
     *     **Query Arguments:**
     *
     *     - release
     *     - chromosome
     *     - start
     *     - end
     *     - reference
     *     - alternative
     *
     *     **Methods:** ``GET``, ``POST``
     *
     *     **Returns:** */
    post: operations['createSmallVariantComment']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/small-variant-comment/list-project/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description A view that allows to list existing comments for a project and variant.
     *
     *     **URL:** ``/variants/api/small-variant-comment/list-project/{project.sodar_uuid}/``
     *
     *     **Query Arguments:**
     *
     *     - release
     *     - chromosome
     *     - start
     *     - end
     *     - reference
     *     - alternative
     *     - exclude_case_uuid
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** */
    get: operations['retrieveSmallVariantCommentProject']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/small-variant-flags/list-create/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description A view that allows to list existing flags and create new ones.
     *
     *     **URL:** ``/variants/api/small-variant-flags/list-create/{case.sodar_uuid}/``
     *
     *     **Query Arguments:**
     *
     *     - release
     *     - chromosome
     *     - start
     *     - end
     *     - reference
     *     - alternative
     *
     *     **Methods:** ``GET``, ``POST``
     *
     *     **Returns:** */
    get: operations['retrieveSmallVariantFlags']
    put?: never
    /** @description A view that allows to list existing flags and create new ones.
     *
     *     **URL:** ``/variants/api/small-variant-flags/list-create/{case.sodar_uuid}/``
     *
     *     **Query Arguments:**
     *
     *     - release
     *     - chromosome
     *     - start
     *     - end
     *     - reference
     *     - alternative
     *
     *     **Methods:** ``GET``, ``POST``
     *
     *     **Returns:** */
    post: operations['createSmallVariantFlags']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/small-variant-flags/list-project/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description A view that allows to list existing comments for a project and variant.
     *
     *     **URL:** ``/variants/api/small-variant-flags/list-project/{project.sodar_uuid}/``
     *
     *     **Query Arguments:**
     *
     *     - release
     *     - chromosome
     *     - start
     *     - end
     *     - reference
     *     - alternative
     *     - exclude_case_uuid
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** */
    get: operations['retrieveSmallVariantFlagsProject']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/acmg-criteria-rating/list-create/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description A view that allows to create new ACMG ratings.
     *
     *     **URL:** ``/variants/api/acmg-criteria-rating/list-create/{case.sodar_uuid}/``
     *
     *     **Query Arguments:**
     *
     *     - release
     *     - chromosome
     *     - start
     *     - end
     *     - reference
     *     - alternative
     *
     *     **Methods:** ``POST``
     *
     *     **Returns:** */
    get: operations['retrieveAcmgCriteriaRating']
    put?: never
    /** @description A view that allows to create new ACMG ratings.
     *
     *     **URL:** ``/variants/api/acmg-criteria-rating/list-create/{case.sodar_uuid}/``
     *
     *     **Query Arguments:**
     *
     *     - release
     *     - chromosome
     *     - start
     *     - end
     *     - reference
     *     - alternative
     *
     *     **Methods:** ``POST``
     *
     *     **Returns:** */
    post: operations['createAcmgCriteriaRating']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/extra-anno-fields/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description A view that returns all extra annotation field names.
     *
     *     **URL:** ``/variants/api/extra-anno-fields/``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** List of extra annotation field names. */
    get: operations['listExtraAnnoFields']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/project-settings/retrieve/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description A view that returns project settings for the given project.
     *
     *     **URL:** ``/variants/api/project-settings/retrieve/{project.uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** {
     *         ts_tv_warning_upper,
     *         ts_tv_warning_lower
     *     } */
    get: operations['retrieveProjectSettings']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/importer/api/case-import-info/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF list-create API view the ``CaseImportInfo`` model. */
    get: operations['retrieveCaseImportInfo']
    put?: never
    /** @description DRF list-create API view the ``CaseImportInfo`` model. */
    post: operations['createCaseImportInfo']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/importer/api/case-import-info/{project}/{caseimportinfo}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF retrieve-update-destroy API view for the ``CaseImportInfo`` model. */
    get: operations['retrieveCaseImportInfo']
    /** @description DRF retrieve-update-destroy API view for the ``CaseImportInfo`` model. */
    put: operations['updateCaseImportInfo']
    post?: never
    /** @description DRF retrieve-update-destroy API view for the ``CaseImportInfo`` model. */
    delete: operations['destroyCaseImportInfo']
    options?: never
    head?: never
    /** @description DRF retrieve-update-destroy API view for the ``CaseImportInfo`` model. */
    patch: operations['partialUpdateCaseImportInfo']
    trace?: never
  }
  '/importer/api/variant-set-import-info/{caseimportinfo}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF list-create API view the ``VariantSetImportInfo`` model. */
    get: operations['retrieveVariantSetImportInfo']
    put?: never
    /** @description DRF list-create API view the ``VariantSetImportInfo`` model. */
    post: operations['createVariantSetImportInfo']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/importer/api/variant-set-import-info/{caseimportinfo}/{variantsetimportinfo}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF retrieve-update-destroy API view for the ``VariantSetImportInfo`` model. */
    get: operations['retrieveVariantSetImportInfo']
    /** @description DRF retrieve-update-destroy API view for the ``VariantSetImportInfo`` model. */
    put: operations['updateVariantSetImportInfo']
    post?: never
    /** @description DRF retrieve-update-destroy API view for the ``VariantSetImportInfo`` model. */
    delete: operations['destroyVariantSetImportInfo']
    options?: never
    head?: never
    /** @description DRF retrieve-update-destroy API view for the ``VariantSetImportInfo`` model. */
    patch: operations['partialUpdateVariantSetImportInfo']
    trace?: never
  }
  '/importer/api/bam-qc-file/{caseimportinfo}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF list-create API view the ``BamQcFile`` model. */
    get: operations['retrieveBamQcFile']
    put?: never
    /** @description DRF list-create API view the ``BamQcFile`` model. */
    post: operations['createBamQcFile']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/importer/api/bam-qc-file/{caseimportinfo}/{bamqcfile}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF retrieve-update-destroy API view for the ``BamQcFile`` model. */
    get: operations['retrieveBamQcFile']
    put?: never
    post?: never
    /** @description DRF retrieve-update-destroy API view for the ``BamQcFile`` model. */
    delete: operations['destroyBamQcFile']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/importer/api/case-gene-annotation-file/{caseimportinfo}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF list-create API view the ``CaseGeneAnnotationFile`` model. */
    get: operations['retrieveCaseGeneAnnotationFile']
    put?: never
    /** @description DRF list-create API view the ``CaseGeneAnnotationFile`` model. */
    post: operations['createCaseGeneAnnotationFile']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/importer/api/case-gene-annotation-file/{caseimportinfo}/{casegeneannotationfile}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF retrieve-update-destroy API view for the ``CaseGeneAnnotationFile`` model. */
    get: operations['retrieveCaseGeneAnnotationFile']
    put?: never
    post?: never
    /** @description DRF retrieve-update-destroy API view for the ``CaseGeneAnnotationFile`` model. */
    delete: operations['destroyCaseGeneAnnotationFile']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/importer/api/genotype-file/{variantsetimportinfo}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF list-create API view the ``GenotypeFile`` model. */
    get: operations['retrieveGenotypeFile']
    put?: never
    /** @description DRF list-create API view the ``GenotypeFile`` model. */
    post: operations['createGenotypeFile']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/importer/api/genotype-file/{variantsetimportinfo}/{genotypefile}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF retrieve-update-destroy API view for the ``GenotypeFile`` model. */
    get: operations['retrieveGenotypeFile']
    put?: never
    post?: never
    /** @description DRF retrieve-update-destroy API view for the ``GenotypeFile`` model. */
    delete: operations['destroyGenotypeFile']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/importer/api/effects-file/{variantsetimportinfo}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF list-create API view the ``EffectsFile`` model. */
    get: operations['retrieveEffectFile']
    put?: never
    /** @description DRF list-create API view the ``EffectsFile`` model. */
    post: operations['createEffectFile']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/importer/api/effects-file/{variantsetimportinfo}/{effectsfile}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF retrieve-update-destroy API view for the ``EffectsFile`` model. */
    get: operations['retrieveEffectFile']
    put?: never
    post?: never
    /** @description DRF retrieve-update-destroy API view for the ``EffectsFile`` model. */
    delete: operations['destroyEffectFile']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/importer/api/database-info-file/{variantsetimportinfo}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF list-create API view the ``DatabaseInfoFile`` model. */
    get: operations['retrieveDatabaseInfoFile']
    put?: never
    /** @description DRF list-create API view the ``DatabaseInfoFile`` model. */
    post: operations['createDatabaseInfoFile']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/importer/api/database-info-file/{variantsetimportinfo}/{databaseinfofile}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF retrieve-update-destroy API view for the ``DatabaseInfoFile`` model. */
    get: operations['retrieveDatabaseInfoFile']
    put?: never
    post?: never
    /** @description DRF retrieve-update-destroy API view for the ``DatabaseInfoFile`` model. */
    delete: operations['destroyDatabaseInfoFile']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/fetch-variants/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description AJAX endpoint for retrieving structural variants from the given case.
     *
     *     **URL:** ``/ajax/fetch-variants/{case.sodar_uuid}/``
     *
     *     **Methods:** ``GET`` */
    get: operations['retrieveSvFetchVariantsAjax']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/query-case/quick-presets/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Resolve quick preset name to category preset.
     *
     *     **URL:** ``/variants/api/query-case/quick-presets``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** A dict mapping each of the category names to category preset values. */
    get: operations['listSvQuickPresetsAjaxs']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/query-case/category-presets/{category}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List all presets for the given category.
     *
     *     **URL:** ``/variants/api/query-case/category-presets/{category}``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** A dict mapping each of the category names to category preset values. */
    get: operations['retrieveSvCategoryPresetsApi']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/query-case/inheritance-presets/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List all inheritance presets for the given case.
     *
     *     **URL:** ``/variants/api/query-case/inheritance-presets/{case.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** A dict mapping each of the category names to category preset values. */
    get: operations['retrieveSvInheritancePresetsApi']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/query-case/query-settings-shortcut/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description AJAX endpoint to generate SV query settings for a given case by certain shortcuts.
     *
     *     **URL:** ``/svs/ajax/query-case/query-settings-shortcut/{case.uuid}/``
     *
     *     **Methods:** ``GET``
     *
     *     **Parameters:**
     *
     *     - ``quick_preset`` - overall preset selection using the presets below, valid values are
     *
     *          - ``defaults`` - applies presets that are recommended for starting out without a specific hypothesis
     *          - ``de_novo`` - applies presets that are recommended for starting out when the hypothesis is dominannt
     *            inheritance with *de novo* variants
     *          - ``dominant`` - applies presets that are recommended for starting out when the hypothesis is dominant
     *            inheritance (but not with *de novo* variants)
     *          - ``homozygous_recessive`` - applies presets that are recommended for starting out when the hypothesis is
     *            recessive with homzygous variants
     *          - ``heterozygous_recessive`` - applies presets that are recommended for starting out when the hypothesis is
     *            recessive with compound heterozygous variants; will only query for SINGLE variants
     *          - ``x_recessive`` - applies presets that are recommended for starting out when the hypothesis is X recessive
     *            mode of inheritance
     *          - ``clinvar_pathogenic`` - apply presets that are recommended for screening variants for known pathogenic
     *            variants present Clinvar
     *          - ``mitochondrial`` - apply presets recommended for starting out to filter for mitochondrial mode of
     *            inheritance
     *          - ``whole_genome`` - apply presets that return all variants of the case, regardless of frequency, quality etc.
     *
     *     - ``inheritance`` - preset selection for mode of inheritance, valid values are
     *
     *         - ``any`` - no particular constraint on inheritance (default)
     *         - ``de_novo`` - allow variants compatible with de novo mode of inheritance
     *         - ``dominant`` - allow variants compatible with dominant mode of inheritance (includes *de novo* variants)
     *         - ``homozygous_recessive`` - allow variants compatible with homozygous recessive mode of inheritance
     *         - ``heterozygous_heterozygous`` - allow variants compatible with compound heterozygous recessive mode of
     *           inheritance
     *         - ``x_recessive`` - allow variants compatible with X_recessive mode of inheritance of a disease/trait
     *         - ``mitochondrial`` - mitochondrial inheritance (also applicable for "clinvar pathogenic")
     *         - ``custom`` - indicates custom settings such that none of the above inheritance settings applies
     *
     *     - ``frequency`` - preset selection for frequencies, valid values are
     *
     *         - ``any`` - do not apply any thresholds
     *         - ``strict`` - apply thresholds considered "strict"
     *         - ``relaxed`` - apply thresholds considered "relaxed"
     *         - ``custom`` - indicates custom settings such that none of the above frequency settings applies
     *
     *     - ``impact`` - preset selection for molecular impact values, valid values are
     *
     *         - ``any`` - allow any impact
     *         - ``almost_all`` - remove variants that commonly are artifacts
     *         - ``cnv_only`` - keep only copy number variable variants
     *         - ``custom`` - indicates custom settings such that none of the above impact settings applies
     *
     *     - ``chromosomes`` - preset selection for selecting chromosomes/regions/genes allow/block lists, valid values are
     *
     *         - ``whole_genome`` - the defaults settings selecting the whole genome
     *         - ``autosomes`` - select the variants lying on the autosomes only
     *         - ``x_chromosome`` - select variants on the X chromosome only
     *         - ``y_chromosome`` - select variants on the Y chromosome only
     *         - ``mt_chromosome`` - select variants on the mitochondrial chromosome only
     *         - ``custom`` - indicates custom settings such that none of the above chromosomes presets applies
     *
     *     - ``regulatory`` - preset selection for regulatory feature annotation
     *
     *         - ``default`` - the defaults setting selection
     *
     *     - ``tad`` - preset selection for TAD feature annotation
     *
     *         - ``default`` - the defaults setting
     *
     *     - ``known_patho`` - presets related to known pathogenic variants and ClinVar
     *
     *         - ``default`` - default settings
     *         - ``custom`` - indicates custom settings such that none of the above presets applies
     *
     *     - ``genotype_criteria`` - selection of filter criteria
     *
     *         - ``svish_high`` - "high convidence" filter criteria
     *         - ``svish_pass`` - "pass" filter criteria
     *         - ``default`` - define default filter criteria
     *         - ``none`` - define no filter criteria
     *
     *     - ``database`` - the database to query, one of ``"refseq"`` (default) and ``"ensembl"``
     *
     *     **Returns:**
     *
     *     - ``presets`` - a ``dict`` with the following keys; this mirrors back the quick presets and further presets
     *       selected in the parameters
     *
     *         - ``quick_presets`` - one of the ``quick_presets`` preset values from above
     *         - ``inheritance`` - one of the ``inheritance`` preset values from above
     *         - ``frequency`` - one of the ``frequency`` preset values from above
     *         - ``impact`` - one of the ``impact`` preset values from above
     *         - ``chromosomes`` - one of the ``chromosomes`` preset values from above
     *         - ``regulatory`` - feature annotation based on regulatory features, from above
     *         - ``tad`` - feature annotation based on TADs, from above
     *         - ``filter_criteria_definition`` - definition of filter criteria, from above
     *
     *     - ``query_settings`` - a ``dict`` with the query settings ready to be used for the given case */
    get: operations['retrieveSvQuerySettingsShortcuts']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/sv-query/list-create/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description AJAX endpoint for listing and creating SV queries for a given case.
     *
     *     After creation, a background job will be started to execute the query.
     *
     *     **URL:** ``/svs/ajax/sv-query/list-create/{case.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``POST`` */
    get: operations['retrieveSvQuery']
    put?: never
    /** @description AJAX endpoint for listing and creating SV queries for a given case.
     *
     *     After creation, a background job will be started to execute the query.
     *
     *     **URL:** ``/svs/ajax/sv-query/list-create/{case.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``POST`` */
    post: operations['createSvQuery']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/sv-query/retrieve-update-destroy/{svquery}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description AJAX endpoint for retrieving, updating, and deleting SV queries for a given case.
     *
     *     **URL:** ``/svs/ajax/sv-query/retrieve-update-destroy/{svquery.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    get: operations['retrieveSvQueryWithLogs']
    /** @description AJAX endpoint for retrieving, updating, and deleting SV queries for a given case.
     *
     *     **URL:** ``/svs/ajax/sv-query/retrieve-update-destroy/{svquery.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    put: operations['updateSvQueryWithLogs']
    post?: never
    /** @description AJAX endpoint for retrieving, updating, and deleting SV queries for a given case.
     *
     *     **URL:** ``/svs/ajax/sv-query/retrieve-update-destroy/{svquery.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    delete: operations['destroySvQueryWithLogs']
    options?: never
    head?: never
    /** @description AJAX endpoint for retrieving, updating, and deleting SV queries for a given case.
     *
     *     **URL:** ``/svs/ajax/sv-query/retrieve-update-destroy/{svquery.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    patch: operations['partialUpdateSvQueryWithLogs']
    trace?: never
  }
  '/svs/sv-query-result-set/list/{svquery}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description AJAX endpoint for listing query result sets for a query.
     *
     *     **URL:** ``/svs/ajax/sv-query-result-set/list/{svqueryresultset.sodar_uuid}/``
     *
     *     **Methods:** ``GET`` */
    get: operations['retrieveSvQueryResultSet']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/sv-query-result-set/retrieve/{svqueryresultset}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description AJAX endpoint for retrieving query result sets.
     *
     *     **URL:** ``/svs/ajax/sv-query-result-set/retrieve/{svqueryresultset.sodar_uuid}/``
     *
     *     **Methods:** ``GET`` */
    get: operations['retrieveSvQueryResultSet']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/sv-query-result-row/list/{svqueryresultset}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description AJAX endpoint for listing query result rows for a query.
     *
     *     **URL:** ``/svs/ajax/sv-query-result-row/list/{svqueryresultset.sodar_uuid}/``
     *
     *     **Methods:** ``GET`` */
    get: operations['retrieveSvQueryResultRow']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/sv-query-result-row/retrieve/{svqueryresultrow}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description AJAX endpoint for retreiving query result row for a query.
     *
     *     **URL:** ``/svs/ajax/sv-query-result-row/retrieve/{svqueryresultrow.sodar_uuid}/``
     *
     *     **Methods:** ``GET`` */
    get: operations['retrieveSvQueryResultRow']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/structural-variant-flags/list-create/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['retrieveStructuralVariantFlags']
    put?: never
    post: operations['createStructuralVariantFlags']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/structural-variant-flags/list-project/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['retrieveStructuralVariantFlagsProject']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/structural-variant-flags/retrieve-update-destroy/{structuralvariantflags}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['retrieveStructuralVariantFlags']
    put: operations['updateStructuralVariantFlags']
    post?: never
    delete: operations['destroyStructuralVariantFlags']
    options?: never
    head?: never
    patch: operations['partialUpdateStructuralVariantFlags']
    trace?: never
  }
  '/svs/ajax/structural-variant-comment/list-create/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['retrieveStructuralVariantComment']
    put?: never
    post: operations['createStructuralVariantComment']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/structural-variant-comment/list-project/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['retrieveStructuralVariantCommentProject']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/structural-variant-comment/retrieve-update-destroy/{structuralvariantcomment}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['retrieveStructuralVariantComment']
    put: operations['updateStructuralVariantComment']
    post?: never
    delete: operations['destroyStructuralVariantComment']
    options?: never
    head?: never
    patch: operations['partialUpdateStructuralVariantComment']
    trace?: never
  }
  '/svs/ajax/structural-variant-acmg-rating/list-create/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['retrieveStructuralVariantAcmgRating']
    put?: never
    post: operations['createStructuralVariantAcmgRating']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/structural-variant-acmg-rating/list-project/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['retrieveStructuralVariantAcmgRatingProject']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/svs/ajax/structural-variant-acmg-rating/retrieve-update-destroy/{structuralvariantacmgrating}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['retrieveStructuralVariantAcmgRating']
    put: operations['updateStructuralVariantAcmgRating']
    post?: never
    delete: operations['destroyStructuralVariantAcmgRating']
    options?: never
    head?: never
    patch: operations['partialUpdateStructuralVariantAcmgRating']
    trace?: never
  }
  '/project/ajax/list': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description View to retrieve project list entries from the client */
    get: operations['listProjectListAjaxs']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/ajax/user/current': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Return information of the requesting user for Ajax requests. */
    get: operations['retrieveSODARUser']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/list': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List all projects and categories for which the requesting user has access.
     *
     *     **URL:** ``/project/api/list``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:**
     *
     *     List of project details (see ``ProjectRetrieveAPIView``). For project finder
     *     role, only lists title and UUID of projects. */
    get: operations['listProjects']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/retrieve/{project}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve a project or category by its UUID.
     *
     *     **URL:** ``/project/api/retrieve/{Project.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:**
     *
     *     - ``description``: Project description (string)
     *     - ``parent``: Parent category UUID (string or null)
     *     - ``readme``: Project readme (string, supports markdown)
     *     - ``public_guest_access``: Guest access for all users (boolean)
     *     - ``roles``: Project role assignments (dict, assignment UUID as key)
     *     - ``sodar_uuid``: Project UUID (string)
     *     - ``title``: Project title (string)
     *     - ``type``: Project type (string, options: ``PROJECT`` or ``CATEGORY``) */
    get: operations['retrieveProject']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/invites/list/{project}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List user invites for a project.
     *
     *     **URL:** ``/project/api/invites/list/{Project.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** List of project invite details */
    get: operations['retrieveProjectInvite']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/settings/retrieve/{project}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description API view for retrieving an app setting with the PROJECT or PROJECT_USER
     *     scope.
     *
     *     **URL:** ``project/api/settings/retrieve/{Project.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Parameters:**
     *
     *     - ``app_name``: Name of app plugin for the setting, use "projectroles" for projectroles settings (string)
     *     - ``setting_name``: Setting name (string)
     *     - ``user``: User UUID for a PROJECT_USER setting (string or None, optional) */
    get: operations['retrieveAppSetting']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/settings/retrieve/user': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description API view for retrieving an app setting with the USER scope.
     *
     *     **URL:** ``project/api/settings/retrieve/user``
     *
     *     **Methods:** ``GET``
     *
     *     **Parameters:**
     *
     *     - ``app_name``: Name of app plugin for the setting, use "projectroles" for projectroles settings (string)
     *     - ``setting_name``: Setting name (string) */
    get: operations['retrieveAppSetting']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/users/list': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Return a list of all users on the site. Excludes system users, unless called
     *     with superuser access.
     *
     *     **URL:** ``/project/api/users/list``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns**: List of serializers users (see ``CurrentUserRetrieveAPIView``) */
    get: operations['listSODARUsers']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/users/current': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Return information on the user making the request.
     *
     *     **URL:** ``/project/api/users/current``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns**:
     *
     *     For current user:
     *
     *     - ``email``: Email address of the user (string)
     *     - ``is_superuser``: Superuser status (boolean)
     *     - ``name``: Full name of the user (string)
     *     - ``sodar_uuid``: User UUID (string)
     *     - ``username``: Username of the user (string) */
    get: operations['retrieveSODARUser']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/remote/get/{secret}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description API view for retrieving remote projects from a source site */
    get: operations['retrieveRemoteProjectGet']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/timeline/ajax/detail/{projectevent}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Ajax view for retrieving event details for projects */
    get: operations['retrieveProjectEventDetailAjax']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/timeline/ajax/detail/site/{projectevent}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Ajax view for retrieving event details for site-wide events */
    get: operations['retrieveSiteEventDetailAjax']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/timeline/ajax/extra/{projectevent}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Ajax view for retrieving event extra data for projects */
    get: operations['retrieveProjectEventExtraAjax']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/timeline/ajax/extra/site/{projectevent}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Ajax view for retrieving event extra data for site-wide events */
    get: operations['retrieveSiteEventExtraAjax']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/timeline/ajax/extra/status/{eventstatus}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Ajax view for retrieving event status extra data for events */
    get: operations['retrieveEventStatusExtraAjax']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/app_alerts/ajax/status': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description View to get app alert status for user */
    get: operations['listAppAlertStatusAjaxs']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cohorts/ajax/user-permissions/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve permissions of current user in project.
     *
     *     **URL:** ``/cohorts/ajax/user-permissions/{project.sodar_uuid}/``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** List of permissions that the user has in the project for the ``cohorts`` app. */
    get: operations['retrieveProjectUserPermissionsAjax']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cohorts/api/cohort/list-create/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List cohorts of a project or create a cohort in the project.
     *
     *     **URL:** ``/cohorts/api/cohort/list-create/{project.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``POST``
     *
     *     **Returns:** List of cohorts */
    get: operations['retrieveCohort']
    put?: never
    /** @description List cohorts of a project or create a cohort in the project.
     *
     *     **URL:** ``/cohorts/api/cohort/list-create/{project.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``POST``
     *
     *     **Returns:** List of cohorts */
    post: operations['createCohort']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cohorts/api/cohort/retrieve-update-destroy/{cohort}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve, update destroy a given cohort.
     *
     *     **URL:** ``/cohorts/api/cohort/retrieve-update-destroy/{cohort.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
     *
     *     **Returns:** Cohort. */
    get: operations['retrieveCohort']
    /** @description Retrieve, update destroy a given cohort.
     *
     *     **URL:** ``/cohorts/api/cohort/retrieve-update-destroy/{cohort.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
     *
     *     **Returns:** Cohort. */
    put: operations['updateCohort']
    post?: never
    /** @description Retrieve, update destroy a given cohort.
     *
     *     **URL:** ``/cohorts/api/cohort/retrieve-update-destroy/{cohort.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
     *
     *     **Returns:** Cohort. */
    delete: operations['destroyCohort']
    options?: never
    head?: never
    /** @description Retrieve, update destroy a given cohort.
     *
     *     **URL:** ``/cohorts/api/cohort/retrieve-update-destroy/{cohort.sodar_uuid}/``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
     *
     *     **Returns:** Cohort. */
    patch: operations['partialUpdateCohort']
    trace?: never
  }
  '/cohorts/api/cohortcase/list/{cohort}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List all cohortcase for a given cohort.
     *
     *     **URL:** ``/cohorts/api/cohortcase/list/{cohort.sodar_uuid}/``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** List of CohortCase. */
    get: operations['retrieveCohortCase']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cohorts/api/accessible-projects-cases/list/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List all accessible projects including cases for a user.
     *
     *     **URL:** ``/cohorts/api/accessible-projects-cases/list/{cohort.sodar_uuid}/``
     *
     *     **Methods:**: ``GET``
     *
     *     **Returns:** List of project including cases. */
    get: operations['retrieveProjectCases']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/beaconsite/endpoint/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Implementation of the GA4GH info endpoint. */
    get: operations['listBeaconInfoApis']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/beaconsite/endpoint/query/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Implementation of the GA4GH query endpoint. */
    get: operations['listBeaconQueryApis']
    put?: never
    /** @description Implementation of the GA4GH query endpoint. */
    post: operations['createBeaconQueryApi']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/genepanels/api/genepanel-category/list/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List all ``GenePanelCategory`` entries with ``GenePanel``.
     *
     *     **URL:** ``/genepanels/api/gene-panel-category``
     *
     *     **Methods:** GET
     *
     *     **Returns:** */
    get: operations['listGenePanelCategorys']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/genepanels/api/lookup-genepanel/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve information about a gene panel.
     *
     *     **URL:** ``/genepanels/api/lookup-genepanel/``
     *
     *     **Methods:** GET
     *
     *     **Returns:** */
    get: operations['retrieveGenePanel']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cases/ajax/user-permissions/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve permissions of current user in project.
     *
     *     **URL:** ``/cases/ajax/user-permissions/{project.sodar_uuid}/``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** List of permissions that the user has in the project for the ``cases`` app. */
    get: operations['retrieveProjectUserPermissionsAjax']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cases/api/case/list/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List all cases in the current project.
     *
     *     **URL:** ``/cases/api/case/list/{project.sodar_uid}/``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** List of project details (see :py:class:`CaseRetrieveApiView`) */
    get: operations['retrieveCaseSerializerNg']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cases/api/case/retrieve-update-destroy/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Update a given case.
     *
     *     **URL:** ``/cases/api/case/update/{case.sodar_uid}/``
     *
     *     **Methods:** ``PATCH``, ``PUT``, ``DELETE``.
     *
     *     **Returns:** Updated case details. */
    get: operations['retrieveCaseSerializerNg']
    /** @description Update a given case.
     *
     *     **URL:** ``/cases/api/case/update/{case.sodar_uid}/``
     *
     *     **Methods:** ``PATCH``, ``PUT``, ``DELETE``.
     *
     *     **Returns:** Updated case details. */
    put: operations['updateCaseSerializerNg']
    post?: never
    /** @description Update a given case.
     *
     *     **URL:** ``/cases/api/case/update/{case.sodar_uid}/``
     *
     *     **Methods:** ``PATCH``, ``PUT``, ``DELETE``.
     *
     *     **Returns:** Updated case details. */
    delete: operations['destroyCaseSerializerNg']
    options?: never
    head?: never
    /** @description Update a given case.
     *
     *     **URL:** ``/cases/api/case/update/{case.sodar_uid}/``
     *
     *     **Methods:** ``PATCH``, ``PUT``, ``DELETE``.
     *
     *     **Returns:** Updated case details. */
    patch: operations['partialUpdateCaseSerializerNg']
    trace?: never
  }
  '/cases/api/case-comment/list-create/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List/create case comments for the given case.
     *
     *     **URL:** ``/cases/api/case-comment/list-create/{case.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Parameters:**
     *
     *     - ``page`` - specify page to return (default/first is ``1``)
     *     - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)
     *
     *     **Returns:**
     *
     *     - ``count`` - number of total elements (``int``)
     *     - ``next`` - URL to next page (``str`` or ``null``)
     *     - ``previous`` - URL to next page (``str`` or ``null``)
     *     - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`) */
    get: operations['retrieveCaseComment']
    put?: never
    /** @description List/create case comments for the given case.
     *
     *     **URL:** ``/cases/api/case-comment/list-create/{case.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Parameters:**
     *
     *     - ``page`` - specify page to return (default/first is ``1``)
     *     - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)
     *
     *     **Returns:**
     *
     *     - ``count`` - number of total elements (``int``)
     *     - ``next`` - URL to next page (``str`` or ``null``)
     *     - ``previous`` - URL to next page (``str`` or ``null``)
     *     - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`) */
    post: operations['createCaseComment']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cases/ajax/case-comment/retrieve-update-destroy/{casecomment}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve, update, destroy case comments for the given case.
     *
     *     **URL:** ``/cases/api/case-comment/retrieve-update-destroy/{case_comment.sodar_uuid}``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    get: operations['retrieveCaseComments']
    /** @description Retrieve, update, destroy case comments for the given case.
     *
     *     **URL:** ``/cases/api/case-comment/retrieve-update-destroy/{case_comment.sodar_uuid}``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    put: operations['updateCaseComments']
    post?: never
    /** @description Retrieve, update, destroy case comments for the given case.
     *
     *     **URL:** ``/cases/api/case-comment/retrieve-update-destroy/{case_comment.sodar_uuid}``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    delete: operations['destroyCaseComments']
    options?: never
    head?: never
    /** @description Retrieve, update, destroy case comments for the given case.
     *
     *     **URL:** ``/cases/api/case-comment/retrieve-update-destroy/{case_comment.sodar_uuid}``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    patch: operations['partialUpdateCaseComments']
    trace?: never
  }
  '/cases/api/case-phenotype-terms/list-create/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List/create case phenotype term annotations.
     *
     *     **URL:** ``/cases/api/case-phenotype-terms/list-create/{case.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Parameters:**
     *
     *     - ``page`` - specify page to return (default/first is ``1``)
     *     - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)
     *
     *     **Returns:**
     *
     *     - ``count`` - number of total elements (``int``)
     *     - ``next`` - URL to next page (``str`` or ``null``)
     *     - ``previous`` - URL to next page (``str`` or ``null``)
     *     - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`) */
    get: operations['retrieveCasePhenotypeTerms']
    put?: never
    /** @description List/create case phenotype term annotations.
     *
     *     **URL:** ``/cases/api/case-phenotype-terms/list-create/{case.sodar_uuid}``
     *
     *     **Methods:** ``GET``
     *
     *     **Parameters:**
     *
     *     - ``page`` - specify page to return (default/first is ``1``)
     *     - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)
     *
     *     **Returns:**
     *
     *     - ``count`` - number of total elements (``int``)
     *     - ``next`` - URL to next page (``str`` or ``null``)
     *     - ``previous`` - URL to next page (``str`` or ``null``)
     *     - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`) */
    post: operations['createCasePhenotypeTerms']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cases/api/case-phenotype-terms/retrieve-update-destroy/{casephenotypeterms}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve, update, destroy case comments for the given case.
     *
     *     **URL:** ``/cases/api/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    get: operations['retrieveCasePhenotypeTerms']
    /** @description Retrieve, update, destroy case comments for the given case.
     *
     *     **URL:** ``/cases/api/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    put: operations['updateCasePhenotypeTerms']
    post?: never
    /** @description Retrieve, update, destroy case comments for the given case.
     *
     *     **URL:** ``/cases/api/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    delete: operations['destroyCasePhenotypeTerms']
    options?: never
    head?: never
    /** @description Retrieve, update, destroy case comments for the given case.
     *
     *     **URL:** ``/cases/api/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}``
     *
     *     **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE`` */
    patch: operations['partialUpdateCasePhenotypeTerms']
    trace?: never
  }
  '/cases/api/annotation-release-info/list/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List annotation release infos for a given case.
     *
     *     **URL:** ``/cases/api/annotation-release-info/list/{case.sodar_uuid}``
     *
     *     **Methods:** ``GET`` */
    get: operations['retrieveAnnotationReleaseInfo']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cases/api/sv-annotation-release-info/list/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List SVannotation release infos for a given case.
     *
     *     **URL:** ``/cases/api/sv-annotation-release-info/list/{case.sodar_uuid}``
     *
     *     **Methods:** ``GET`` */
    get: operations['retrieveSvAnnotationReleaseInfo']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/varannos/api/varannoset/list-create/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF list-create API view the ``VarAnnoSet`` model. */
    get: operations['retrieveVarAnnoSet']
    put?: never
    /** @description DRF list-create API view the ``VarAnnoSet`` model. */
    post: operations['createVarAnnoSet']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/varannos/api/varannoset/retrieve-update-destroy/{varannoset}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF retrieve-update-destroy API view for the ``VarAnnoSet`` model. */
    get: operations['retrieveVarAnnoSet']
    /** @description DRF retrieve-update-destroy API view for the ``VarAnnoSet`` model. */
    put: operations['updateVarAnnoSet']
    post?: never
    /** @description DRF retrieve-update-destroy API view for the ``VarAnnoSet`` model. */
    delete: operations['destroyVarAnnoSet']
    options?: never
    head?: never
    /** @description DRF retrieve-update-destroy API view for the ``VarAnnoSet`` model. */
    patch: operations['partialUpdateVarAnnoSet']
    trace?: never
  }
  '/varannos/api/varannosetentry/list-create/{varannoset}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF list-create API view the ``VarAnnoSetEntry`` model. */
    get: operations['retrieveVarAnnoSetEntry']
    put?: never
    /** @description DRF list-create API view the ``VarAnnoSetEntry`` model. */
    post: operations['createVarAnnoSetEntry']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/varannos/api/varannosetentry/retrieve-update-destroy/{varannosetentry}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF retrieve-update-destroy API view for the ``VarAnnoSetEntry`` model. */
    get: operations['retrieveVarAnnoSetEntry']
    /** @description DRF retrieve-update-destroy API view for the ``VarAnnoSetEntry`` model. */
    put: operations['updateVarAnnoSetEntry']
    post?: never
    /** @description DRF retrieve-update-destroy API view for the ``VarAnnoSetEntry`` model. */
    delete: operations['destroyVarAnnoSetEntry']
    options?: never
    head?: never
    /** @description DRF retrieve-update-destroy API view for the ``VarAnnoSetEntry`` model. */
    patch: operations['partialUpdateVarAnnoSetEntry']
    trace?: never
  }
  '/seqmeta/api/enrichmentkit/list-create/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF list-create API view the ``EnrichmentKit`` model. */
    get: operations['listEnrichmentKits']
    put?: never
    /** @description DRF list-create API view the ``EnrichmentKit`` model. */
    post: operations['createEnrichmentKit']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqmeta/api/enrichmentkit/retrieve-update-destroy/{enrichmentkit}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF retrieve-update-destroy API view for the ``EnrichmentKit`` model. */
    get: operations['retrieveEnrichmentKit']
    /** @description DRF retrieve-update-destroy API view for the ``EnrichmentKit`` model. */
    put: operations['updateEnrichmentKit']
    post?: never
    /** @description DRF retrieve-update-destroy API view for the ``EnrichmentKit`` model. */
    delete: operations['destroyEnrichmentKit']
    options?: never
    head?: never
    /** @description DRF retrieve-update-destroy API view for the ``EnrichmentKit`` model. */
    patch: operations['partialUpdateEnrichmentKit']
    trace?: never
  }
  '/seqmeta/api/targetbedfile/list-create/{enrichmentkit}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF list-create API view the ``TargetBedFile`` model. */
    get: operations['retrieveTargetBedFile']
    put?: never
    /** @description DRF list-create API view the ``TargetBedFile`` model. */
    post: operations['createTargetBedFile']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqmeta/api/targetbedfile/retrieve-update-destroy/{targetbedfile}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description DRF retrieve-update-destroy API view for the ``TargetBedFile`` model. */
    get: operations['retrieveTargetBedFile']
    /** @description DRF retrieve-update-destroy API view for the ``TargetBedFile`` model. */
    put: operations['updateTargetBedFile']
    post?: never
    /** @description DRF retrieve-update-destroy API view for the ``TargetBedFile`` model. */
    delete: operations['destroyTargetBedFile']
    options?: never
    head?: never
    /** @description DRF retrieve-update-destroy API view for the ``TargetBedFile`` model. */
    patch: operations['partialUpdateTargetBedFile']
    trace?: never
  }
  '/cases-import/api/case-import-action/list-create/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['retrieveCaseImportAction']
    put?: never
    post: operations['createCaseImportAction']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cases-import/api/case-import-action/retrieve-update-destroy/{caseimportaction}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['retrieveCaseImportAction']
    put: operations['updateCaseImportAction']
    post?: never
    delete: operations['destroyCaseImportAction']
    options?: never
    head?: never
    patch: operations['partialUpdateCaseImportAction']
    trace?: never
  }
  '/cases-qc/api/caseqc/retrieve/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve the latest ``CaseQc`` for the given case.
     *
     *     This corresponds to the raw QC values imported into VarFish.  See
     *     ``VarfishStatsRetrieveApiView`` for the information used by the UI.
     *
     *     **URL:** ``/cases_qc/api/caseqc/retrieve/{case.sodar_uuid}/``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** serialized ``CaseQc`` if any, HTTP 404 if not found */
    get: operations['retrieveCaseQc']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cases-qc/api/varfishstats/retrieve/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve the latest statistics to display in the UI for a case.
     *
     *     **URL:** ``/cases_qc/api/varfishstats/retrieve/{case.sodar_uuid}/``
     *
     *     **Methods:** ``GET``
     *
     *     **Returns:** serialized ``CaseQc`` if any, HTTP 404 if not found */
    get: operations['retrieveVarfishStats']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cases-analysis/api/caseanalysis/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List the ``CaseAnalysis`` objects for the given case.
     *
     *     Implement the "create single case analysis on listing" logic. */
    get: operations['listCaseAnalysis']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cases-analysis/api/caseanalysis/{case}/{caseanalysis}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Allow listing and retrieval of ``CaseAnalysis`` records for a given case.
     *
     *     As we only allow for one ``CaseAnalysis`` per case, we implicitely create one
     *     when listing. */
    get: operations['retrieveCaseAnalysis']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cases-analysis/api/caseanalysissession/{case}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List the ``CaseAnalysisSession`` objects for the given case and current user.
     *
     *     Implement the "create single case analysis session on listing" logic. */
    get: operations['listCaseAnalysisSessions']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cases-analysis/api/caseanalysissession/{case}/{caseanalysissession}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Allow retrieval only of ``CaseAnalysisSession`` record for current user. */
    get: operations['retrieveCaseAnalysisSession']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/querypresetsset/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsSet`` model. */
    get: operations['listQueryPresetsSets']
    put?: never
    /** @description ViewSet for the ``QueryPresetsSet`` model. */
    post: operations['createQueryPresetsSet']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/querypresetsset/{project}/{querypresetsset}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsSet`` model. */
    get: operations['retrieveQueryPresetsSet']
    /** @description ViewSet for the ``QueryPresetsSet`` model. */
    put: operations['updateQueryPresetsSet']
    post?: never
    /** @description ViewSet for the ``QueryPresetsSet`` model. */
    delete: operations['destroyQueryPresetsSet']
    options?: never
    head?: never
    /** @description ViewSet for the ``QueryPresetsSet`` model. */
    patch: operations['partialUpdateQueryPresetsSet']
    trace?: never
  }
  '/seqvars/api/querypresetsset/{project}/{querypresetsset}/copy_from/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Copy from another presets set. */
    get: operations['copyFromQueryPresetsSet']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/querypresetssetversion/{querypresetsset}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsSetVersion`` model. */
    get: operations['listQueryPresetsSetVersions']
    put?: never
    /** @description ViewSet for the ``QueryPresetsSetVersion`` model. */
    post: operations['createQueryPresetsSetVersion']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/querypresetssetversion/{querypresetsset}/{querypresetssetversion}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsSetVersion`` model. */
    get: operations['retrieveQueryPresetsSetVersionDetails']
    /** @description ViewSet for the ``QueryPresetsSetVersion`` model. */
    put: operations['updateQueryPresetsSetVersion']
    post?: never
    /** @description ViewSet for the ``QueryPresetsSetVersion`` model. */
    delete: operations['destroyQueryPresetsSetVersion']
    options?: never
    head?: never
    /** @description ViewSet for the ``QueryPresetsSetVersion`` model. */
    patch: operations['partialUpdateQueryPresetsSetVersion']
    trace?: never
  }
  '/seqvars/api/querypresetsquality/{querypresetssetversion}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsQuality`` model. */
    get: operations['listQueryPresetsQualitys']
    put?: never
    /** @description ViewSet for the ``QueryPresetsQuality`` model. */
    post: operations['createQueryPresetsQuality']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/querypresetsquality/{querypresetssetversion}/{querypresetsquality}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsQuality`` model. */
    get: operations['retrieveQueryPresetsQuality']
    /** @description ViewSet for the ``QueryPresetsQuality`` model. */
    put: operations['updateQueryPresetsQuality']
    post?: never
    /** @description ViewSet for the ``QueryPresetsQuality`` model. */
    delete: operations['destroyQueryPresetsQuality']
    options?: never
    head?: never
    /** @description ViewSet for the ``QueryPresetsQuality`` model. */
    patch: operations['partialUpdateQueryPresetsQuality']
    trace?: never
  }
  '/seqvars/api/querypresetsfrequency/{querypresetssetversion}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsFrequency`` model. */
    get: operations['listQueryPresetsFrequencys']
    put?: never
    /** @description ViewSet for the ``QueryPresetsFrequency`` model. */
    post: operations['createQueryPresetsFrequency']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/querypresetsfrequency/{querypresetssetversion}/{querypresetsfrequency}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsFrequency`` model. */
    get: operations['retrieveQueryPresetsFrequency']
    /** @description ViewSet for the ``QueryPresetsFrequency`` model. */
    put: operations['updateQueryPresetsFrequency']
    post?: never
    /** @description ViewSet for the ``QueryPresetsFrequency`` model. */
    delete: operations['destroyQueryPresetsFrequency']
    options?: never
    head?: never
    /** @description ViewSet for the ``QueryPresetsFrequency`` model. */
    patch: operations['partialUpdateQueryPresetsFrequency']
    trace?: never
  }
  '/seqvars/api/querypresetsconsequence/{querypresetssetversion}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsConsequence`` model. */
    get: operations['listQueryPresetsConsequences']
    put?: never
    /** @description ViewSet for the ``QueryPresetsConsequence`` model. */
    post: operations['createQueryPresetsConsequence']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/querypresetsconsequence/{querypresetssetversion}/{querypresetsconsequence}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsConsequence`` model. */
    get: operations['retrieveQueryPresetsConsequence']
    /** @description ViewSet for the ``QueryPresetsConsequence`` model. */
    put: operations['updateQueryPresetsConsequence']
    post?: never
    /** @description ViewSet for the ``QueryPresetsConsequence`` model. */
    delete: operations['destroyQueryPresetsConsequence']
    options?: never
    head?: never
    /** @description ViewSet for the ``QueryPresetsConsequence`` model. */
    patch: operations['partialUpdateQueryPresetsConsequence']
    trace?: never
  }
  '/seqvars/api/querypresetslocus/{querypresetssetversion}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsLocus`` model. */
    get: operations['listQueryPresetsLocus']
    put?: never
    /** @description ViewSet for the ``QueryPresetsLocus`` model. */
    post: operations['createQueryPresetsLocus']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/querypresetslocus/{querypresetssetversion}/{querypresetslocus}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsLocus`` model. */
    get: operations['retrieveQueryPresetsLocus']
    /** @description ViewSet for the ``QueryPresetsLocus`` model. */
    put: operations['updateQueryPresetsLocus']
    post?: never
    /** @description ViewSet for the ``QueryPresetsLocus`` model. */
    delete: operations['destroyQueryPresetsLocus']
    options?: never
    head?: never
    /** @description ViewSet for the ``QueryPresetsLocus`` model. */
    patch: operations['partialUpdateQueryPresetsLocus']
    trace?: never
  }
  '/seqvars/api/querypresetsphenotypeprio/{querypresetssetversion}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsPhenotypePrio`` model. */
    get: operations['listQueryPresetsPhenotypePrios']
    put?: never
    /** @description ViewSet for the ``QueryPresetsPhenotypePrio`` model. */
    post: operations['createQueryPresetsPhenotypePrio']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/querypresetsphenotypeprio/{querypresetssetversion}/{querypresetsphenotypeprio}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsPhenotypePrio`` model. */
    get: operations['retrieveQueryPresetsPhenotypePrio']
    /** @description ViewSet for the ``QueryPresetsPhenotypePrio`` model. */
    put: operations['updateQueryPresetsPhenotypePrio']
    post?: never
    /** @description ViewSet for the ``QueryPresetsPhenotypePrio`` model. */
    delete: operations['destroyQueryPresetsPhenotypePrio']
    options?: never
    head?: never
    /** @description ViewSet for the ``QueryPresetsPhenotypePrio`` model. */
    patch: operations['partialUpdateQueryPresetsPhenotypePrio']
    trace?: never
  }
  '/seqvars/api/querypresetsvariantprio/{querypresetssetversion}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsVariantPrio`` model. */
    get: operations['listQueryPresetsVariantPrios']
    put?: never
    /** @description ViewSet for the ``QueryPresetsVariantPrio`` model. */
    post: operations['createQueryPresetsVariantPrio']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/querypresetsvariantprio/{querypresetssetversion}/{querypresetsvariantprio}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsVariantPrio`` model. */
    get: operations['retrieveQueryPresetsVariantPrio']
    /** @description ViewSet for the ``QueryPresetsVariantPrio`` model. */
    put: operations['updateQueryPresetsVariantPrio']
    post?: never
    /** @description ViewSet for the ``QueryPresetsVariantPrio`` model. */
    delete: operations['destroyQueryPresetsVariantPrio']
    options?: never
    head?: never
    /** @description ViewSet for the ``QueryPresetsVariantPrio`` model. */
    patch: operations['partialUpdateQueryPresetsVariantPrio']
    trace?: never
  }
  '/seqvars/api/querypresetsclinvar/{querypresetssetversion}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsClinvar`` model. */
    get: operations['listQueryPresetsClinvars']
    put?: never
    /** @description ViewSet for the ``QueryPresetsClinvar`` model. */
    post: operations['createQueryPresetsClinvar']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/querypresetsclinvar/{querypresetssetversion}/{querypresetsclinvar}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsClinvar`` model. */
    get: operations['retrieveQueryPresetsClinvar']
    /** @description ViewSet for the ``QueryPresetsClinvar`` model. */
    put: operations['updateQueryPresetsClinvar']
    post?: never
    /** @description ViewSet for the ``QueryPresetsClinvar`` model. */
    delete: operations['destroyQueryPresetsClinvar']
    options?: never
    head?: never
    /** @description ViewSet for the ``QueryPresetsClinvar`` model. */
    patch: operations['partialUpdateQueryPresetsClinvar']
    trace?: never
  }
  '/seqvars/api/querypresetscolumns/{querypresetssetversion}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsColumns`` model. */
    get: operations['listQueryPresetsColumns']
    put?: never
    /** @description ViewSet for the ``QueryPresetsColumns`` model. */
    post: operations['createQueryPresetsColumns']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/querypresetscolumns/{querypresetssetversion}/{querypresetscolumns}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QueryPresetsColumns`` model. */
    get: operations['retrieveQueryPresetsColumns']
    /** @description ViewSet for the ``QueryPresetsColumns`` model. */
    put: operations['updateQueryPresetsColumns']
    post?: never
    /** @description ViewSet for the ``QueryPresetsColumns`` model. */
    delete: operations['destroyQueryPresetsColumns']
    options?: never
    head?: never
    /** @description ViewSet for the ``QueryPresetsColumns`` model. */
    patch: operations['partialUpdateQueryPresetsColumns']
    trace?: never
  }
  '/seqvars/api/predefinedquery/{querypresetssetversion}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``PredefinedQuery`` model. */
    get: operations['listPredefinedQuerys']
    put?: never
    /** @description ViewSet for the ``PredefinedQuery`` model. */
    post: operations['createPredefinedQuery']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/predefinedquery/{querypresetssetversion}/{predefinedquery}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``PredefinedQuery`` model. */
    get: operations['retrievePredefinedQuery']
    /** @description ViewSet for the ``PredefinedQuery`` model. */
    put: operations['updatePredefinedQuery']
    post?: never
    /** @description ViewSet for the ``PredefinedQuery`` model. */
    delete: operations['destroyPredefinedQuery']
    options?: never
    head?: never
    /** @description ViewSet for the ``PredefinedQuery`` model. */
    patch: operations['partialUpdatePredefinedQuery']
    trace?: never
  }
  '/seqvars/api/querysettings/{session}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QuerySettings`` model. */
    get: operations['listQuerySettings']
    put?: never
    /** @description ViewSet for the ``QuerySettings`` model. */
    post: operations['createQuerySettingsDetails']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/querysettings/{session}/{querysettings}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for the ``QuerySettings`` model. */
    get: operations['retrieveQuerySettingsDetails']
    /** @description ViewSet for the ``QuerySettings`` model. */
    put: operations['updateQuerySettingsDetails']
    post?: never
    /** @description ViewSet for the ``QuerySettings`` model. */
    delete: operations['destroyQuerySettings']
    options?: never
    head?: never
    /** @description ViewSet for the ``QuerySettings`` model. */
    patch: operations['partialUpdateQuerySettingsDetails']
    trace?: never
  }
  '/seqvars/api/query/{session}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Allow CRUD of the user's queries. */
    get: operations['listQuerys']
    put?: never
    /** @description Allow CRUD of the user's queries. */
    post: operations['createQueryDetails']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/query/{session}/{query}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Allow CRUD of the user's queries. */
    get: operations['retrieveQueryDetails']
    /** @description Allow CRUD of the user's queries. */
    put: operations['updateQueryDetails']
    post?: never
    /** @description Allow CRUD of the user's queries. */
    delete: operations['destroyQuery']
    options?: never
    head?: never
    /** @description Allow CRUD of the user's queries. */
    patch: operations['partialUpdateQueryDetails']
    trace?: never
  }
  '/seqvars/api/queryexecution/{query}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for retrieving ``QueryExecution`` records. */
    get: operations['listQueryExecutions']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/queryexecution/{query}/{queryexecution}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for retrieving ``QueryExecution`` records. */
    get: operations['retrieveQueryExecutionDetails']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/resultset/{query}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for retrieving ``ResultSet`` records. */
    get: operations['listResultSets']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/resultset/{query}/{resultset}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for retrieving ``ResultSet`` records. */
    get: operations['retrieveResultSet']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/resultrow/{resultset}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for retrieving ``ResultRow`` records. */
    get: operations['listResultRows']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/seqvars/api/resultrow/{resultset}/{seqvarresultrow}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description ViewSet for retrieving ``ResultRow`` records. */
    get: operations['retrieveResultRow']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/auth/login/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['createLogin']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/auth/logout/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['createLogout']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/auth/logoutall/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Log the user out of all sessions
     *     I.E. deletes all auth tokens for the user */
    post: operations['createLogoutAll']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/ajax/list/columns': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description View to retrieve project list extra column data from the client */
    post: operations['createProjectListColumnAjax']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/ajax/list/roles': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description View to retrieve project list role data from the client */
    post: operations['createProjectListRoleAjax']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/ajax/star/{project}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description View to handle starring and unstarring a project */
    post: operations['createProjectStarringAjax']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/create': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Create a project or a category.
     *
     *     **URL:** ``/project/api/create``
     *
     *     **Methods:** ``POST``
     *
     *     **Parameters:**
     *
     *     - ``title``: Project title (string)
     *     - ``type``: Project type (string, options: ``PROJECT`` or ``CATEGORY``)
     *     - ``parent``: Parent category UUID (string)
     *     - ``description``: Project description (string, optional)
     *     - ``readme``: Project readme (string, optional, supports markdown)
     *     - ``public_guest_access``: Guest access for all users (boolean)
     *     - ``owner``: User UUID of the project owner (string) */
    post: operations['createProject']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/roles/create/{project}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Create a role assignment in a project.
     *
     *     **URL:** ``/project/api/roles/create/{Project.sodar_uuid}``
     *
     *     **Methods:** ``POST``
     *
     *     **Parameters:**
     *
     *     - ``role``: Desired role for user (string, e.g. "project contributor")
     *     - ``user``: User UUID (string) */
    post: operations['createRoleAssignment']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/roles/owner-transfer/{project}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Handle ownership transfer in a POST request */
    post: operations['createRoleAssignmentOwnerTransfer']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/invites/create/{project}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Create a project invite.
     *
     *     **URL:** ``/project/api/invites/create/{Project.sodar_uuid}``
     *
     *     **Methods:** ``POST``
     *
     *     **Parameters:**
     *
     *     - ``email``: User email (string)
     *     - ``role``: Desired role for user (string, e.g. "project contributor") */
    post: operations['createProjectInvite']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/invites/revoke/{projectinvite}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Handle invite revoking in a POST request */
    post: operations['createProjectInviteRevoke']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/invites/resend/{projectinvite}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Handle invite resending in a POST request */
    post: operations['createProjectInviteResend']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/settings/set/{project}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description API view for setting the value of an app setting with the PROJECT or
     *     PROJECT_USER scope.
     *
     *     **URL:** ``project/api/settings/set/{Project.sodar_uuid}``
     *
     *     **Methods:** ``POST``
     *
     *     **Parameters:**
     *
     *     - ``app_name``: Name of app plugin for the setting, use "projectroles" for projectroles settings (string)
     *     - ``setting_name``: Setting name (string)
     *     - ``value``: Setting value (string, may contain JSON for JSON settings)
     *     - ``user``: User UUID for a PROJECT_USER setting (string or None, optional) */
    post: operations['createProjectSettingSet']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/settings/set/user': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description API view for setting the value of an app setting with the USER scope. Only
     *     allows the user to set the value of their own settings.
     *
     *     **URL:** ``project/api/settings/set/user``
     *
     *     **Methods:** ``POST``
     *
     *     **Parameters:**
     *
     *     - ``app_name``: Name of app plugin for the setting, use "projectroles" for projectroles settings (string)
     *     - ``setting_name``: Setting name (string)
     *     - ``value``: Setting value (string, may contain JSON for JSON settings) */
    post: operations['createUserSettingSet']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/admin_alerts/ajax/active/toggle/{adminalert}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description AdminAlert acivation toggling Ajax view */
    post: operations['createAdminAlertActiveToggleAjax']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/app_alerts/ajax/dismiss/{appalert}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description View to handle app alert dismissal in UI */
    post: operations['createAppAlertDismissAjax']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/app_alerts/ajax/dismiss/all': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description View to handle app alert dismissal in UI */
    post: operations['createAppAlertDismissAjax']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cohorts/api/cohortcase/create/{project}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Create cohortcase in the current project.
     *
     *     **URL:** ``/cohorts/api/cohortcase/create/{project.sodar_uuid}/``
     *
     *     **Methods:** ``POST``
     *
     *     **Returns:** CohortCase. */
    post: operations['createCohortCase']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/small-variant-comment/update/{smallvariantcomment}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** @description A view that allows to update comments.
     *
     *     **URL:** ``/variants/api/small-variant-comment/update/{smallvariantcomment.sodar_uuid}/``
     *
     *     **Methods:** ``PUT``, ``PATCH``
     *
     *     **Returns:** */
    put: operations['updateSmallVariantComment']
    post?: never
    delete?: never
    options?: never
    head?: never
    /** @description A view that allows to update comments.
     *
     *     **URL:** ``/variants/api/small-variant-comment/update/{smallvariantcomment.sodar_uuid}/``
     *
     *     **Methods:** ``PUT``, ``PATCH``
     *
     *     **Returns:** */
    patch: operations['partialUpdateSmallVariantComment']
    trace?: never
  }
  '/variants/api/small-variant-flags/update/{smallvariantflags}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** @description A view that allows to update flags.
     *
     *     **URL:** ``/variants/api/small-variant-flags/update/{smallvariantflags.sodar_uuid}/``
     *
     *     **Methods:** ``PUT``, ``PATCH``
     *
     *     **Returns:** */
    put: operations['updateSmallVariantFlags']
    post?: never
    delete?: never
    options?: never
    head?: never
    /** @description A view that allows to update flags.
     *
     *     **URL:** ``/variants/api/small-variant-flags/update/{smallvariantflags.sodar_uuid}/``
     *
     *     **Methods:** ``PUT``, ``PATCH``
     *
     *     **Returns:** */
    patch: operations['partialUpdateSmallVariantFlags']
    trace?: never
  }
  '/variants/api/acmg-criteria-rating/update/{acmgcriteriarating}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** @description A view that allows to create new ACMG ratings.
     *
     *     **URL:** ``/variants/api/acmg-criteria-rating/update/{acmgcriteriarating.sodar_uuid}/``
     *
     *     **Methods:** ``PUT``, ``PATCH``
     *
     *     **Returns:** */
    put: operations['updateAcmgCriteriaRating']
    post?: never
    delete?: never
    options?: never
    head?: never
    /** @description A view that allows to create new ACMG ratings.
     *
     *     **URL:** ``/variants/api/acmg-criteria-rating/update/{acmgcriteriarating.sodar_uuid}/``
     *
     *     **Methods:** ``PUT``, ``PATCH``
     *
     *     **Returns:** */
    patch: operations['partialUpdateAcmgCriteriaRating']
    trace?: never
  }
  '/project/api/update/{project}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** @description Update the metadata of a project or a category.
     *
     *     Note that the project owner can not be updated here. Instead, use the
     *     dedicated API view ``RoleAssignmentOwnerTransferAPIView``.
     *
     *     The project type can not be updated once a project has been created. The
     *     parameter is still required for non-partial updates via the ``PUT`` method.
     *
     *     **URL:** ``/project/api/update/{Project.sodar_uuid}``
     *
     *     **Methods:** ``PUT``, ``PATCH``
     *
     *     **Parameters:**
     *
     *     - ``title``: Project title (string)
     *     - ``type``: Project type (string, can not be modified)
     *     - ``parent``: Parent category UUID (string)
     *     - ``description``: Project description (string, optional)
     *     - ``readme``: Project readme (string, optional, supports markdown)
     *     - ``public_guest_access``: Guest access for all users (boolean) */
    put: operations['updateProject']
    post?: never
    delete?: never
    options?: never
    head?: never
    /** @description Update the metadata of a project or a category.
     *
     *     Note that the project owner can not be updated here. Instead, use the
     *     dedicated API view ``RoleAssignmentOwnerTransferAPIView``.
     *
     *     The project type can not be updated once a project has been created. The
     *     parameter is still required for non-partial updates via the ``PUT`` method.
     *
     *     **URL:** ``/project/api/update/{Project.sodar_uuid}``
     *
     *     **Methods:** ``PUT``, ``PATCH``
     *
     *     **Parameters:**
     *
     *     - ``title``: Project title (string)
     *     - ``type``: Project type (string, can not be modified)
     *     - ``parent``: Parent category UUID (string)
     *     - ``description``: Project description (string, optional)
     *     - ``readme``: Project readme (string, optional, supports markdown)
     *     - ``public_guest_access``: Guest access for all users (boolean) */
    patch: operations['partialUpdateProject']
    trace?: never
  }
  '/project/api/roles/update/{roleassignment}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** @description Update the role assignment for a user in a project.
     *
     *     The user can not be changed in this API view.
     *
     *     **URL:** ``/project/api/roles/update/{RoleAssignment.sodar_uuid}``
     *
     *     **Methods:** ``PUT``, ``PATCH``
     *
     *     **Parameters:**
     *
     *     - ``role``: Desired role for user (string, e.g. "project contributor")
     *     - ``user``: User UUID (string) */
    put: operations['updateRoleAssignment']
    post?: never
    delete?: never
    options?: never
    head?: never
    /** @description Update the role assignment for a user in a project.
     *
     *     The user can not be changed in this API view.
     *
     *     **URL:** ``/project/api/roles/update/{RoleAssignment.sodar_uuid}``
     *
     *     **Methods:** ``PUT``, ``PATCH``
     *
     *     **Parameters:**
     *
     *     - ``role``: Desired role for user (string, e.g. "project contributor")
     *     - ``user``: User UUID (string) */
    patch: operations['partialUpdateRoleAssignment']
    trace?: never
  }
  '/variants/api/small-variant-comment/delete/{smallvariantcomment}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /** @description A view that allows to delete comments.
     *
     *     **URL:** ``/variants/api/small-variant-comment/delete/{smallvariantcomment.sodar_uuid}/``
     *
     *     **Methods:** ``DELETE``
     *
     *     **Returns:** */
    delete: operations['destroySmallVariantComment']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/small-variant-flags/delete/{smallvariantflags}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /** @description A view that allows to delete flags.
     *
     *     **URL:** ``/variants/api/small-variant-flags/delete/{smallvariantflags.sodar_uuid}/``
     *
     *     **Methods:** ``DELETE``
     *
     *     **Returns:** */
    delete: operations['destroySmallVariantFlags']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/variants/api/acmg-criteria-rating/delete/{acmgcriteriarating}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /** @description A view that allows to delete ACMG ratings.
     *
     *     **URL:** ``/variants/api/acmg-criteria-rating/delete/{acmgcriteriarating.sodar_uuid}/``
     *
     *     **Methods:** ``DELETE``
     *
     *     **Returns:** */
    delete: operations['destroyAcmgCriteriaRating']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/project/api/roles/destroy/{roleassignment}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /** @description Destroy a role assignment.
     *
     *     The owner role can not be destroyed using this view.
     *
     *     **URL:** ``/project/api/roles/destroy/{RoleAssignment.sodar_uuid}``
     *
     *     **Methods:** ``DELETE`` */
    delete: operations['destroyRoleAssignment']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cohorts/api/cohortcase/destroy/{cohortcase}/': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /** @description Destroy a given cohortcase.
     *
     *     **URL:** ``/cohorts/api/cohortcase/destroy/{cohortcase.sodar_uuid}/``
     *
     *     **Methods:** ``DELETE``
     *
     *     **Returns:** None */
    delete: operations['destroyCohortCase']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    ExtraAnnoField: {
      field: number
      label: string
    }
    CaseListQcStats: {
      pedigree: Record<string, never>
      relData: Record<string, never>
      varStats: Record<string, never>
      sexErrors: Record<string, never>
      chrXHetHomRatio: Record<string, never>
      dps: Record<string, never>
      dpQuantiles: Record<string, never>
      hetRatioQuantiles: Record<string, never>
      dpHetData: Record<string, never>
    }
    Case: {
      readonly sodar_uuid?: string
      readonly project?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly release?: string | null
      name: string
      index: string
      pedigree: Record<string, never>
      /** @description Number of small variants, empty if no small variants have been imported */
      readonly num_small_vars?: number | null
      /** @description Number of structural variants, empty if no structural variants have been imported */
      readonly num_svs?: number | null
      notes?: string | null
      /** @enum {string} */
      status?:
        | 'initial'
        | 'active'
        | 'closed-unsolved'
        | 'closed-uncertain'
        | 'closed-solved'
      tags?: string[] | null
      readonly annotationreleaseinfo_set?: {
        readonly genomebuild?: string
        readonly table?: string
        /** Format: date-time */
        readonly timestamp?: string
        readonly release?: string
      }[]
      readonly svannotationreleaseinfo_set?: {
        readonly genomebuild?: string
        readonly table?: string
        /** Format: date-time */
        readonly timestamp?: string
        readonly release?: string
      }[]
      readonly phenotype_terms?: {
        readonly sodar_uuid?: string
        /**
         * Format: date-time
         * @description DateTime of creation
         */
        readonly date_created?: string
        /**
         * Format: date-time
         * @description DateTime of last modification
         */
        readonly date_modified?: string
        readonly case?: string
        /** @description Individual */
        individual: string
        terms: Record<string, never>
      }[]
      readonly casealignmentstats?: string
      readonly casevariantstats?: string
      readonly relatedness?: string
      readonly sex_errors?: string
      readonly presetset?: string
      case_version?: number
      readonly smallvariantqueryresultset?: string
      readonly svqueryresultset?: string
    }
    SmallVariantQuery: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      readonly case?: string
      readonly user?: string
      query_settings: Record<string, never>
      /** @description The query settings version (major) */
      query_settings_version_major?: number
      /** @description The query settings version (minor) */
      query_settings_version_minor?: number
      /** @description Optional user-assigned name */
      name?: string | null
      /** @description Case is flagged as public or not */
      public?: boolean
    }
    SmallVariantQueryWithLogs: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      readonly user?: string
      readonly case?: string
      /**
       * @description The current query state
       * @enum {string}
       */
      readonly query_state?:
        | 'initial'
        | 'running'
        | 'done'
        | 'cancelled'
        | 'failed'
        | 'timeout'
      /** @description Message related to the query state */
      readonly query_state_msg?: string | null
      query_settings: Record<string, never>
      /** @description The query settings version (major) */
      readonly query_settings_version_major?: number
      /** @description The query settings version (minor) */
      readonly query_settings_version_minor?: number
      readonly logs?: string
    }
    SmallVariantQueryResultSet: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of modification
       */
      readonly date_modified?: string
      readonly smallvariantquery?: string
      readonly case?: string
      /**
       * Format: date-time
       * @description Date time of query start
       */
      readonly start_time?: string
      /**
       * Format: date-time
       * @description Date time of query end
       */
      readonly end_time?: string
      /** @description Elapsed seconds */
      readonly elapsed_seconds?: number
      /** @description Number of rows in the result */
      readonly result_row_count?: number
    }
    SmallVariantQueryResultRow: {
      readonly sodar_uuid?: string
      readonly smallvariantqueryresultset?: string
      readonly release?: string
      readonly chromosome?: string
      readonly chromosome_no?: number
      readonly bin?: number
      readonly start?: number
      readonly end?: number
      readonly reference?: string
      readonly alternative?: string
      /** @description The query result rows */
      readonly payload?: Record<string, never>
    }
    SettingsShortcuts: {
      presets: Record<string, never>
      query_settings: Record<string, never>
    }
    ExportFileBgJob: {
      readonly sodar_uuid?: string
      /**
       * @description File types for exported file
       * @enum {string}
       */
      file_type: 'tsv' | 'xlsx' | 'vcf'
      readonly status?: string
    }
    SmallVariantComment: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly case?: string
      readonly user?: string
      release: string
      chromosome: string
      start: number
      end: number
      reference: string
      alternative: string
      text: string
      readonly user_can_edit?: string
    }
    SmallVariantCommentProject: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly case?: string
      readonly user?: string
      release: string
      chromosome: string
      start: number
      end: number
      reference: string
      alternative: string
      text: string
      readonly user_can_edit?: string
    }
    SmallVariantFlags: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly case?: string
      release: string
      chromosome: string
      start: number
      end: number
      reference: string
      alternative: string
      flag_bookmarked?: boolean
      flag_incidental?: boolean
      flag_candidate?: boolean
      flag_final_causative?: boolean
      flag_for_validation?: boolean
      flag_no_disease_association?: boolean
      flag_segregates?: boolean
      flag_doesnt_segregate?: boolean
      /** @enum {string} */
      flag_visual?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_molecular?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_validation?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_phenotype_match?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_summary?: 'positive' | 'uncertain' | 'negative' | 'empty'
    }
    SmallVariantFlagsProject: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly case?: string
      release: string
      chromosome: string
      start: number
      end: number
      reference: string
      alternative: string
      flag_bookmarked?: boolean
      flag_incidental?: boolean
      flag_candidate?: boolean
      flag_final_causative?: boolean
      flag_for_validation?: boolean
      flag_no_disease_association?: boolean
      flag_segregates?: boolean
      flag_doesnt_segregate?: boolean
      /** @enum {string} */
      flag_visual?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_molecular?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_validation?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_phenotype_match?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_summary?: 'positive' | 'uncertain' | 'negative' | 'empty'
    }
    AcmgCriteriaRating: {
      readonly user?: string
      readonly case?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      /**
       * Format: uuid
       * @description Case SODAR UUID
       */
      readonly sodar_uuid?: string
      release: string
      chromosome: string
      start: number
      end: number
      reference: string
      alternative: string
      /** @description ('null variant (nonsense, frameshift, canonical ±1 or 2 splice sites, initiation codon, single or multiexon deletion) in a gene where LOF is a known mechanism of disease',) */
      pvs1?: number
      /** @description Same amino acid change as a previously established pathogenic variant regardless of nucleotide change */
      ps1?: number
      /** @description De novo (both maternity and paternity confirmed) in a patient with the disease and no family history */
      ps2?: number
      /** @description Well-established in vitro or in vivo functional studies supportive of a damaging effect on the gene or gene product */
      ps3?: number
      /** @description The prevalence of the variant in affected individuals is significantly increased compared with the prevalence in controls */
      ps4?: number
      /** @description Located in a mutational hot spot and/or critical and well-established functional domain (e.g., active site of an enzyme) without benign variation */
      pm1?: number
      /** @description Absent from controls (or at extremely low frequency if recessive) in Exome Sequencing Project, 1000 Genomes Project, or Exome Aggregation Consortium */
      pm2?: number
      /** @description For recessive disorders, detected in trans with a pathogenic variant */
      pm3?: number
      /** @description Protein length changes as a result of in-frame deletions/insertions in a nonrepeat region or stop-loss variants */
      pm4?: number
      /** @description Novel missense change at an amino acid residue where a different missense change determined to be pathogenic has been seen before */
      pm5?: number
      /** @description Assumed de novo, but without confirmation of paternity and maternity */
      pm6?: number
      /** @description Cosegregation with disease in multiple affected family members in a gene definitively known to cause the disease */
      pp1?: number
      /** @description Missense variant in a gene that has a low rate of benign missense variation and in which missense variants are: a common mechanism of disease */
      pp2?: number
      /** @description Multiple lines of computational evidence support a deleterious effect on the gene or gene product (conservation, evolutionary, splicing impact, etc.) */
      pp3?: number
      /** @description Patient's phenotype or family history is highly specific for a disease with a single genetic etiology */
      pp4?: number
      /** @description Reputable source recently reports variant as pathogenic, but the evidence is not available to the laboratory to perform an independent evaluation */
      pp5?: number
      /** @description Allele frequency is >5% in Exome Sequencing Project, 1000 Genomes Project, or Exome Aggregation Consortium */
      ba1?: number
      /** @description Allele frequency is greater than expected for disorder (see Table 6) */
      bs1?: number
      /** @description Observed in a healthy adult individual for a recessive (homozygous), dominant (heterozygous), or X-linked (hemizygous) disorder, with full penetrance expected at an early age */
      bs2?: number
      /** @description Well-established in vitro or in vivo functional studies show no damaging effect on protein function or splicing */
      bs3?: number
      /** @description BS4: Lack of segregation in affected members of a family */
      bs4?: number
      /** @description Missense variant in a gene for which primarily truncating variants are known to cause disease */
      bp1?: number
      /** @description Observed in trans with a pathogenic variant for a fully penetrant dominant gene/disorder or observed in cis with a pathogenic variant in any inheritance pattern */
      bp2?: number
      /** @description In-frame deletions/insertions in a repetitive region without a known function */
      bp3?: number
      /** @description Multiple lines of computational evidence suggest no impact on gene or gene product (conservation, evolutionary, splicing impact, etc.) */
      bp4?: number
      /** @description Variant found in a case with an alternate molecular basis for disease */
      bp5?: number
      /** @description Reputable source recently reports variant as benign, but the evidence is not available to the laboratory to perform an independent evaluation */
      bp6?: number
      /** @description A synonymous (silent) variant for which splicing prediction algorithms predict no impact to the splice consensus sequence nor the creation of a new splice site AND the nucleotide is not highly conserved */
      bp7?: number
      /** @description Result of the ACMG classification */
      class_auto?: number | null
      /** @description Use this field to override the auto-computed class assignment */
      class_override?: number | null
      readonly acmg_class?: string
    }
    ProjectSettings: {
      ts_tv_valid_upper: number
      ts_tv_valid_lower: number
    }
    CaseImportInfo: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly owner?: string
      readonly case?: string
      release?: string | null
      readonly project?: string
      name: string
      index: string
      pedigree: Record<string, never>
      notes?: string | null
      /**
       * @description State of the case import
       * @enum {string}
       */
      state?: 'draft' | 'submitted' | 'imported' | 'evicted' | 'failed'
      tags?: string[] | null
      readonly bam_qc_files?: {
        /**
         * Format: uuid
         * @description Record UUID
         */
        sodar_uuid?: string
        /**
         * Format: date-time
         * @description DateTime of creation
         */
        readonly date_created?: string
        /**
         * Format: date-time
         * @description DateTime of last modification
         */
        readonly date_modified?: string
        readonly case_import_info?: string
        /**
         * Format: binary
         * @description The uploaded file.
         */
        file: string
        /** @description Original file name. */
        name: string
        /** @description MD5 checksum of original file. */
        md5: string
      }[]
      readonly variant_sets?: {
        /**
         * Format: uuid
         * @description Record UUID
         */
        readonly sodar_uuid?: string
        /**
         * Format: date-time
         * @description DateTime of creation
         */
        readonly date_created?: string
        /**
         * Format: date-time
         * @description DateTime of last modification
         */
        readonly date_modified?: string
        /**
         * @description Genome build used in the variant set.
         * @enum {string}
         */
        genomebuild?: 'GRCh37' | 'GRCh38'
        readonly case_import_info?: string
        /**
         * @description The type of variant set that is referenced.
         * @enum {string}
         */
        variant_type: 'SMALL' | 'STRUCTURAL'
        readonly genotype_files?: {
          /**
           * Format: uuid
           * @description Record UUID
           */
          sodar_uuid?: string
          /**
           * Format: date-time
           * @description DateTime of creation
           */
          readonly date_created?: string
          /**
           * Format: date-time
           * @description DateTime of last modification
           */
          readonly date_modified?: string
          readonly variant_set_import_info?: string
          /**
           * Format: binary
           * @description The uploaded file.
           */
          file: string
          /** @description Original file name. */
          name: string
          /** @description MD5 checksum of original file. */
          md5: string
        }[]
        readonly effect_files?: {
          /**
           * Format: uuid
           * @description Record UUID
           */
          sodar_uuid?: string
          /**
           * Format: date-time
           * @description DateTime of creation
           */
          readonly date_created?: string
          /**
           * Format: date-time
           * @description DateTime of last modification
           */
          readonly date_modified?: string
          readonly variant_set_import_info?: string
          /**
           * Format: binary
           * @description The uploaded file.
           */
          file: string
          /** @description Original file name. */
          name: string
          /** @description MD5 checksum of original file. */
          md5: string
        }[]
        readonly db_info_files?: {
          /**
           * Format: uuid
           * @description Record UUID
           */
          sodar_uuid?: string
          /**
           * Format: date-time
           * @description DateTime of creation
           */
          readonly date_created?: string
          /**
           * Format: date-time
           * @description DateTime of last modification
           */
          readonly date_modified?: string
          readonly variant_set_import_info?: string
          /**
           * Format: binary
           * @description The uploaded file.
           */
          file: string
          /** @description Original file name. */
          name: string
          /** @description MD5 checksum of original file. */
          md5: string
        }[]
        /**
         * @description State of the variant set import
         * @enum {string}
         */
        state?: 'draft' | 'uploaded' | 'imported' | 'evicted' | 'failed'
      }[]
    }
    VariantSetImportInfo: {
      /**
       * Format: uuid
       * @description Record UUID
       */
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      /**
       * @description Genome build used in the variant set.
       * @enum {string}
       */
      genomebuild?: 'GRCh37' | 'GRCh38'
      readonly case_import_info?: string
      /**
       * @description The type of variant set that is referenced.
       * @enum {string}
       */
      variant_type: 'SMALL' | 'STRUCTURAL'
      readonly genotype_files?: {
        /**
         * Format: uuid
         * @description Record UUID
         */
        sodar_uuid?: string
        /**
         * Format: date-time
         * @description DateTime of creation
         */
        readonly date_created?: string
        /**
         * Format: date-time
         * @description DateTime of last modification
         */
        readonly date_modified?: string
        readonly variant_set_import_info?: string
        /**
         * Format: binary
         * @description The uploaded file.
         */
        file: string
        /** @description Original file name. */
        name: string
        /** @description MD5 checksum of original file. */
        md5: string
      }[]
      readonly effect_files?: {
        /**
         * Format: uuid
         * @description Record UUID
         */
        sodar_uuid?: string
        /**
         * Format: date-time
         * @description DateTime of creation
         */
        readonly date_created?: string
        /**
         * Format: date-time
         * @description DateTime of last modification
         */
        readonly date_modified?: string
        readonly variant_set_import_info?: string
        /**
         * Format: binary
         * @description The uploaded file.
         */
        file: string
        /** @description Original file name. */
        name: string
        /** @description MD5 checksum of original file. */
        md5: string
      }[]
      readonly db_info_files?: {
        /**
         * Format: uuid
         * @description Record UUID
         */
        sodar_uuid?: string
        /**
         * Format: date-time
         * @description DateTime of creation
         */
        readonly date_created?: string
        /**
         * Format: date-time
         * @description DateTime of last modification
         */
        readonly date_modified?: string
        readonly variant_set_import_info?: string
        /**
         * Format: binary
         * @description The uploaded file.
         */
        file: string
        /** @description Original file name. */
        name: string
        /** @description MD5 checksum of original file. */
        md5: string
      }[]
      /**
       * @description State of the variant set import
       * @enum {string}
       */
      state?: 'draft' | 'uploaded' | 'imported' | 'evicted' | 'failed'
    }
    BamQcFile: {
      /**
       * Format: uuid
       * @description Record UUID
       */
      sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly case_import_info?: string
      /**
       * Format: binary
       * @description The uploaded file.
       */
      file: string
      /** @description Original file name. */
      name: string
      /** @description MD5 checksum of original file. */
      md5: string
    }
    CaseGeneAnnotationFile: {
      /**
       * Format: uuid
       * @description Record UUID
       */
      sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly case_import_info?: string
      /**
       * Format: binary
       * @description The uploaded file.
       */
      file: string
      /** @description Original file name. */
      name: string
      /** @description MD5 checksum of original file. */
      md5: string
    }
    GenotypeFile: {
      /**
       * Format: uuid
       * @description Record UUID
       */
      sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly variant_set_import_info?: string
      /**
       * Format: binary
       * @description The uploaded file.
       */
      file: string
      /** @description Original file name. */
      name: string
      /** @description MD5 checksum of original file. */
      md5: string
    }
    EffectFile: {
      /**
       * Format: uuid
       * @description Record UUID
       */
      sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly variant_set_import_info?: string
      /**
       * Format: binary
       * @description The uploaded file.
       */
      file: string
      /** @description Original file name. */
      name: string
      /** @description MD5 checksum of original file. */
      md5: string
    }
    DatabaseInfoFile: {
      /**
       * Format: uuid
       * @description Record UUID
       */
      sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly variant_set_import_info?: string
      /**
       * Format: binary
       * @description The uploaded file.
       */
      file: string
      /** @description Original file name. */
      name: string
      /** @description MD5 checksum of original file. */
      md5: string
    }
    SvQuerySettingsShortcuts: {
      presets: Record<string, never>
      query_settings: Record<string, never>
    }
    SvQuery: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of modification
       */
      readonly date_modified?: string
      readonly user?: string
      readonly case?: string
      /**
       * @description The current query state
       * @enum {string}
       */
      readonly query_state?:
        | 'initial'
        | 'running'
        | 'done'
        | 'cancelled'
        | 'failed'
        | 'timeout'
      /** @description Message related to the query state */
      readonly query_state_msg?: string | null
      query_settings: Record<string, never>
    }
    SvQueryWithLogs: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of modification
       */
      readonly date_modified?: string
      readonly user?: string
      readonly case?: string
      /**
       * @description The current query state
       * @enum {string}
       */
      readonly query_state?:
        | 'initial'
        | 'running'
        | 'done'
        | 'cancelled'
        | 'failed'
        | 'timeout'
      /** @description Message related to the query state */
      readonly query_state_msg?: string | null
      query_settings: Record<string, never>
      readonly logs?: string
    }
    SvQueryResultSet: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of modification
       */
      readonly date_modified?: string
      readonly svquery?: string
      readonly case?: string
      /**
       * Format: date-time
       * @description Date time of query start
       */
      readonly start_time?: string
      /**
       * Format: date-time
       * @description Date time of query end
       */
      readonly end_time?: string
      /** @description Elapsed seconds */
      readonly elapsed_seconds?: number
      /** @description Number of rows in the result */
      readonly result_row_count?: number
    }
    SvQueryResultRow: {
      readonly sodar_uuid?: string
      readonly svqueryresultset?: string
      readonly release?: string
      readonly chromosome?: string
      readonly chromosome_no?: number
      readonly bin?: number
      readonly chromosome2?: string | null
      readonly chromosome_no2?: number | null
      readonly bin2?: number | null
      readonly start?: number
      readonly end?: number
      readonly pe_orientation?: string | null
      /** @enum {string} */
      readonly sv_type?: 'DEL' | 'DUP' | 'INS' | 'INV' | 'BND' | 'CNV'
      /** @enum {string} */
      readonly sv_sub_type?:
        | 'DEL'
        | 'DEL:ME'
        | 'DEL:ME:SVA'
        | 'DEL:ME:L1'
        | 'DEL:ME:ALU'
        | 'DUP'
        | 'DUP:TANDEM'
        | 'INV'
        | 'INS'
        | 'INS:ME'
        | 'INS:ME:SVA'
        | 'INS:ME:L1'
        | 'INS:ME:ALU'
        | 'BND'
        | 'CNV'
      /** @description The query result rows */
      readonly payload?: Record<string, never>
    }
    StructuralVariantFlags: {
      /**
       * Format: uuid
       * @description Annotation UUID
       */
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly case?: string
      release: string
      chromosome: string
      start: number
      end: number
      sv_type: string
      sv_sub_type: string
      flag_bookmarked?: boolean
      flag_candidate?: boolean
      flag_final_causative?: boolean
      flag_for_validation?: boolean
      flag_no_disease_association?: boolean
      flag_segregates?: boolean
      flag_doesnt_segregate?: boolean
      /** @enum {string} */
      flag_visual?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_molecular?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_validation?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_phenotype_match?: 'positive' | 'uncertain' | 'negative' | 'empty'
      flag_incidental?: boolean
      /** @enum {string} */
      flag_summary?: 'positive' | 'uncertain' | 'negative' | 'empty'
    }
    StructuralVariantFlagsProject: {
      /**
       * Format: uuid
       * @description Annotation UUID
       */
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly case?: string
      release: string
      chromosome: string
      start: number
      end: number
      sv_type: string
      sv_sub_type: string
      flag_bookmarked?: boolean
      flag_candidate?: boolean
      flag_final_causative?: boolean
      flag_for_validation?: boolean
      flag_no_disease_association?: boolean
      flag_segregates?: boolean
      flag_doesnt_segregate?: boolean
      /** @enum {string} */
      flag_visual?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_molecular?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_validation?: 'positive' | 'uncertain' | 'negative' | 'empty'
      /** @enum {string} */
      flag_phenotype_match?: 'positive' | 'uncertain' | 'negative' | 'empty'
      flag_incidental?: boolean
      /** @enum {string} */
      flag_summary?: 'positive' | 'uncertain' | 'negative' | 'empty'
    }
    StructuralVariantComment: {
      /**
       * Format: uuid
       * @description Annotation UUID
       */
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly user?: string
      readonly case?: string
      release: string
      chromosome: string
      start: number
      end: number
      sv_type: string
      sv_sub_type: string
      /** @description The comment text */
      text: string
      readonly user_can_edit?: string
    }
    StructuralVariantCommentProject: {
      /**
       * Format: uuid
       * @description Annotation UUID
       */
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly user?: string
      readonly case?: string
      release: string
      chromosome: string
      start: number
      end: number
      sv_type: string
      sv_sub_type: string
      /** @description The comment text */
      text: string
      readonly user_can_edit?: string
    }
    StructuralVariantAcmgRating: {
      /**
       * Format: uuid
       * @description Annotation UUID
       */
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly case?: string
      release: string
      chromosome: string
      start: number
      end: number
      sv_type: string
      sv_sub_type: string
      /** @description Use this field to override the auto-computed class assignment */
      class_override?: number | null
    }
    StructuralVariantAcmgRatingProject: {
      /**
       * Format: uuid
       * @description Annotation UUID
       */
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly case?: string
      release: string
      chromosome: string
      start: number
      end: number
      sv_type: string
      sv_sub_type: string
      /** @description Use this field to override the auto-computed class assignment */
      class_override?: number | null
    }
    SODARUser: {
      /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
      username: string
      name?: string
      /** Format: email */
      email?: string
      /** @description Designates that this user has all permissions without explicitly assigning them. */
      is_superuser?: boolean
      readonly sodar_uuid?: string
    }
    Project: {
      /** @description Project title */
      title: string
      /**
       * @description Type of project ("CATEGORY", "PROJECT")
       * @enum {string}
       */
      type?: 'CATEGORY' | 'PROJECT'
      parent: string | null
      /** @description Short project description */
      description?: string | null
      readme?: string
      /** @description Allow public guest access for the project, also including unauthenticated users if allowed on the site */
      public_guest_access?: boolean
      readonly archive?: boolean
      owner?: string
      readonly roles?: {
        role: string
        readonly user?: {
          /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
          username: string
          name?: string
          /** Format: email */
          email?: string
          /** @description Designates that this user has all permissions without explicitly assigning them. */
          is_superuser?: boolean
          readonly sodar_uuid?: string
        }
        readonly sodar_uuid?: string
      }[]
      readonly sodar_uuid?: string
    }
    ProjectInvite: {
      /**
       * Format: email
       * @description Email address of the person to be invited
       */
      email: string
      readonly project?: string
      role: string
      readonly issuer?: {
        /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
        username: string
        name?: string
        /** Format: email */
        email?: string
        /** @description Designates that this user has all permissions without explicitly assigning them. */
        is_superuser?: boolean
        readonly sodar_uuid?: string
      }
      /**
       * Format: date-time
       * @description DateTime of invite creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description Expiration of invite as DateTime
       */
      readonly date_expire?: string
      /** @description Message to be included in the invite email (optional) */
      message?: string
      readonly sodar_uuid?: string
    }
    AppSetting: {
      readonly app_name?: string
      readonly project?: string
      readonly user?: {
        /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
        username: string
        name?: string
        /** Format: email */
        email?: string
        /** @description Designates that this user has all permissions without explicitly assigning them. */
        is_superuser?: boolean
        readonly sodar_uuid?: string
      }
      /** @description Name of the setting */
      readonly name?: string
      /** @description Type of the setting */
      readonly type?: string
      /** @description Value of the setting */
      readonly value?: string | null
      /** @description Setting visibility in forms */
      readonly user_modifiable?: boolean
    }
    Cohort: {
      readonly sodar_uuid?: string
      readonly project?: string
      readonly user?: {
        /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
        username: string
        name?: string
        /** Format: email */
        email?: string
        /** @description Designates that this user has all permissions without explicitly assigning them. */
        is_superuser?: boolean
        readonly sodar_uuid?: string
      }
      readonly inaccessible_cases?: string
      readonly cases?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      name: string
    }
    CohortCase: {
      case: string
      cohort: string
      /**
       * Format: uuid
       * @description CohortCase SODAR UUID
       */
      readonly sodar_uuid?: string
    }
    ProjectCases: {
      /** @description Project title */
      title: string
      /**
       * @description Type of project ("CATEGORY", "PROJECT")
       * @enum {string}
       */
      type?: 'CATEGORY' | 'PROJECT'
      parent: string | null
      /** @description Short project description */
      description?: string | null
      readme?: string
      /** @description Allow public guest access for the project, also including unauthenticated users if allowed on the site */
      public_guest_access?: boolean
      readonly archive?: boolean
      owner?: string
      readonly roles?: {
        role: string
        readonly user?: {
          /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
          username: string
          name?: string
          /** Format: email */
          email?: string
          /** @description Designates that this user has all permissions without explicitly assigning them. */
          is_superuser?: boolean
          readonly sodar_uuid?: string
        }
        readonly sodar_uuid?: string
      }[]
      readonly sodar_uuid?: string
      readonly case_set?: string
    }
    GenePanelCategory: {
      /** @description Title of the category */
      readonly title?: string
      /** @description Optional description of the category */
      readonly description?: string | null
      readonly genepanel_set?: string
    }
    /**
     * GenePanel
     * @description Representation of a gene panel to use in the query.
     */
    GenePanel: {
      source: components['schemas']['GenePanelSource']
      /** Panel Id */
      panel_id: string
      /** Name */
      name: string
      /** Version */
      version: string
    }
    CaseNg: {
      readonly sodar_uuid?: string
      readonly project?: string
      readonly presetset?: string
      readonly sex_errors?: string
      readonly smallvariantqueryresultset?: string
      readonly svqueryresultset?: string
      readonly caseqc?: string
      readonly release?: string | null
      name: string
      index: string
      pedigree: Record<string, never>
      notes?: string | null
      /** @enum {string} */
      status?:
        | 'initial'
        | 'active'
        | 'closed-unsolved'
        | 'closed-uncertain'
        | 'closed-solved'
      tags?: string[] | null
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      case_version?: number
      /** @enum {string|null} */
      readonly state?: 'importing' | 'updating' | 'active' | 'deleting' | null
      /** @description Number of small variants, empty if no small variants have been imported */
      readonly num_small_vars?: number | null
      /** @description Number of structural variants, empty if no structural variants have been imported */
      readonly num_svs?: number | null
    }
    CaseComment: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly case?: string
      readonly user?: string
      comment: string
    }
    CasePhenotypeTerms: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly case?: string
      /** @description Individual */
      individual: string
      terms: Record<string, never>
    }
    AnnotationReleaseInfo: {
      readonly genomebuild?: string
      readonly table?: string
      /** Format: date-time */
      readonly timestamp?: string
      readonly release?: string
    }
    SvAnnotationReleaseInfo: {
      readonly genomebuild?: string
      readonly table?: string
      /** Format: date-time */
      readonly timestamp?: string
      readonly release?: string
    }
    VarAnnoSet: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly project?: string
      /**
       * @description Genome build of the variant annotation set.
       * @enum {string}
       */
      release: 'GRCh37' | 'GRCh38'
      /** @description The variant annotation set's title. */
      title: string
      /** @description An optional description for the variant annotation set. */
      description?: string | null
      /** @description The allowed fields in the entries. */
      fields: string[]
    }
    VarAnnoSetEntry: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly varannoset?: string
      release: string
      chromosome: string
      reference: string
      alternative: string
      start: number
      end: number
      /** @description The annotation's data with fields defined in the variant annotation set. */
      payload: Record<string, never>
    }
    EnrichmentKit: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      /** @description Identifier of the enrichment kit, e.g., 'agilent-all-exon-v4'. */
      identifier: string
      /** @description Title of the enrichment kit */
      title: string
      /** @description Optional description of the enrichment kit */
      description?: string | null
    }
    TargetBedFile: {
      readonly sodar_uuid?: string
      /**
       * Format: date-time
       * @description DateTime of creation
       */
      readonly date_created?: string
      /**
       * Format: date-time
       * @description DateTime of last modification
       */
      readonly date_modified?: string
      readonly enrichmentkit?: string
      /** @description The file's URI. */
      file_uri: string
      /**
       * @description The file's reference genome.
       * @default grch37
       * @enum {string}
       */
      genome_release: 'grch37' | 'grch38'
    }
    CaseImportAction: {
      readonly sodar_uuid?: string
      readonly project?: string
      /** @enum {string} */
      state: 'draft' | 'submitted'
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @enum {string} */
      action?: 'create' | 'update' | 'delete'
      payload: Record<string, never>
      overwrite_terms?: boolean
    }
    CaseQc: {
      readonly sodar_uuid?: string
      readonly case?: string
      readonly dragen_cnvmetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
      }[]
      readonly dragen_fragmentlengthhistograms?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
        keys: number[]
        values: number[]
      }[]
      readonly dragen_mappingmetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
      }[]
      readonly dragen_ploidyestimationmetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
      }[]
      readonly dragen_rohmetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
      }[]
      readonly dragen_vchethomratiometrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
      }[]
      readonly dragen_vcmetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
      }[]
      readonly dragen_svmetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
      }[]
      readonly dragen_timemetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
      }[]
      readonly dragen_trimmermetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
      }[]
      readonly dragen_wgscoveragemetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
      }[]
      readonly dragen_wgscontigmeancovmetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
      }[]
      readonly dragen_wgsoverallmeancov?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
      }[]
      readonly dragen_wgsfinehist?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
        keys: number[]
        values: number[]
      }[]
      readonly dragen_wgshist?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
        keys: string[]
        values: number[]
      }[]
      readonly dragen_regioncoveragemetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
        region_name: string
      }[]
      readonly dragen_regionfinehist?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
        keys: number[]
        values: number[]
        region_name: string
      }[]
      readonly dragen_regionhist?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
        region_name: string
      }[]
      readonly dragen_regionoverallmeancov?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        metrics: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
        region_name: string
      }[]
      readonly bcftools_statsmetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        sn: string
        tstv: string
        sis: string
        af: string
        qual: string
        idd: string
        st: string
        dp: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
      }[]
      readonly samtools_statsmainmetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        sn: string
        chk: string
        isize: string
        cov: string
        gcd: string
        frl: string
        lrl: string
        idd: string
        ffq: string
        lfq: string
        fbc: string
        lbc: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
      }[]
      readonly samtools_statssupplementarymetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        gcf: string
        gcl: string
        gcc: string
        gct: string
        rl: string
        mapq: string
        ic: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
      }[]
      readonly samtools_flagstatmetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        qc_pass: string
        qc_fail: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
      }[]
      readonly samtools_idxstatsmetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        records: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
      }[]
      readonly cramino_metrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        summary: string
        chrom_counts: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
      }[]
      readonly ngsbits_mappingqcmetrics?: {
        readonly sodar_uuid?: string
        readonly caseqc?: string
        records: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        sample: string
        region_name: string
      }[]
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @enum {string} */
      state?: 'DRAFT' | 'ACTIVE'
    }
    VarfishStats: {
      samples: string
      readstats: string
      alignmentstats: string
      seqvarstats: string
      strucvarstats: string
    }
    CaseAnalysis: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      readonly case?: string
    }
    CaseAnalysisSession: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      readonly caseanalysis?: string
      readonly case?: string
      readonly user?: string
    }
    QueryPresetsSet: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @default 1 */
      rank: number
      label: string
      description?: string | null
      readonly project?: string
    }
    QueryPresetsSetVersion: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      readonly presetsset?: string
      /** @default 1 */
      version_major: number
      /** @default 0 */
      version_minor: number
      /** @default draft */
      status: string
      readonly signed_off_by?: {
        /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
        username: string
        name?: string
        /** Format: email */
        email?: string
        /** @description Designates that this user has all permissions without explicitly assigning them. */
        is_superuser?: boolean
        readonly sodar_uuid?: string
      }
    }
    QueryPresetsSetVersionDetails: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      readonly presetsset?: {
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        /** @default 1 */
        rank: number
        label: string
        description?: string | null
        readonly project?: string
      }
      /** @default 1 */
      version_major: number
      /** @default 0 */
      version_minor: number
      /** @default draft */
      status: string
      readonly signed_off_by?: {
        /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
        username: string
        name?: string
        /** Format: email */
        email?: string
        /** @description Designates that this user has all permissions without explicitly assigning them. */
        is_superuser?: boolean
        readonly sodar_uuid?: string
      }
      readonly querypresetsquality_set?: {
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        /** @default 1 */
        rank: number
        label: string
        description?: string | null
        readonly presetssetversion?: string
        /** @default false */
        filter_active: boolean
        min_dp_het?: number | null
        min_dp_hom?: number | null
        min_ab_het?: number | null
        min_gq?: number | null
        min_ad?: number | null
        max_ad?: number | null
      }[]
      readonly querypresetsfrequency_set?: {
        /** @default false */
        gnomad_exomes_enabled: boolean
        gnomad_exomes_frequency?: number | null
        gnomad_exomes_homozygous?: number | null
        gnomad_exomes_heterozygous?: number | null
        gnomad_exomes_hemizygous?: boolean | null
        /** @default false */
        gnomad_genomes_enabled: boolean
        gnomad_genomes_frequency?: number | null
        gnomad_genomes_homozygous?: number | null
        gnomad_genomes_heterozygous?: number | null
        gnomad_genomes_hemizygous?: boolean | null
        /** @default false */
        helixmtdb_enabled: boolean
        helixmtdb_heteroplasmic?: number | null
        helixmtdb_homoplasmic?: number | null
        helixmtdb_frequency?: number | null
        /** @default false */
        inhouse_enabled: boolean
        inhouse_carriers?: number | null
        inhouse_homozygous?: number | null
        inhouse_heterozygous?: number | null
        inhouse_hemizygous?: number | null
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        /** @default 1 */
        rank: number
        label: string
        description?: string | null
        readonly presetssetversion?: string
      }[]
      readonly querypresetsconsequence_set?: {
        variant_types?: components['schemas']['VariantTypeChoice'][]
        transcript_types?: components['schemas']['TranscriptTypeChoice'][]
        variant_consequences?: components['schemas']['VariantConsequenceChoice'][]
        max_distance_to_exon?: number | null
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        /** @default 1 */
        rank: number
        label: string
        description?: string | null
        readonly presetssetversion?: string
      }[]
      readonly querypresetslocus_set?: {
        genes?: components['schemas']['Gene'][]
        gene_panels?: components['schemas']['GenePanel'][]
        genome_regions?: components['schemas']['GenomeRegion'][]
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        /** @default 1 */
        rank: number
        label: string
        description?: string | null
        readonly presetssetversion?: string
      }[]
      readonly querypresetsphenotypeprio_set?: {
        /** @default false */
        phenotype_prio_enabled: boolean
        phenotype_prio_algorithm?: string | null
        terms?: components['schemas']['TermPresence'][]
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        /** @default 1 */
        rank: number
        label: string
        description?: string | null
        readonly presetssetversion?: string
      }[]
      readonly querypresetsvariantprio_set?: {
        /** @default false */
        variant_prio_enabled: boolean
        services?: components['schemas']['VariantPrioService'][]
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        /** @default 1 */
        rank: number
        label: string
        description?: string | null
        readonly presetssetversion?: string
      }[]
      readonly querypresetsclinvar_set?: {
        /** @default false */
        clinvar_presence_required: boolean
        clinvar_germline_aggregate_description?: components['schemas']['ClinvarGermlineAggregateDescription'][]
        /** @default false */
        allow_conflicting_interpretations: boolean
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        /** @default 1 */
        rank: number
        label: string
        description?: string | null
        readonly presetssetversion?: string
      }[]
      readonly querypresetscolumns_set?: {
        column_settings?: components['schemas']['ColumnConfig'][]
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        /** @default 1 */
        rank: number
        label: string
        description?: string | null
        readonly presetssetversion?: string
      }[]
      readonly predefinedquery_set?: {
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        /** @default 1 */
        rank: number
        label: string
        description?: string | null
        readonly presetssetversion?: string
        /** @default false */
        included_in_sop: boolean
        genotype?: components['schemas']['GenotypePresets'] | null
        quality?: string | null
        frequency?: string | null
        consequence?: string | null
        locus?: string | null
        phenotypeprio?: string | null
        variantprio?: string | null
        clinvar?: string | null
        columns?: string | null
      }[]
    }
    /**
     * TranscriptTypeChoice
     * @description The type of a transcript.
     * @enum {string}
     */
    TranscriptTypeChoice: 'coding' | 'non_coding'
    /**
     * VariantConsequenceChoice
     * @description The variant consequence.
     * @enum {string}
     */
    VariantConsequenceChoice:
      | 'frameshift_variant'
      | 'rare_amino_acid_variant'
      | 'splice_acceptor_variant'
      | 'splice_donor_variant'
      | 'start_lost'
      | 'stop_gained'
      | 'stop_lost'
      | '3_prime_UTR_truncation'
      | '5_prime_UTR_truncation'
      | 'conservative_inframe_deletion'
      | 'conservative_inframe_insertion'
      | 'disruptive_inframe_deletion'
      | 'disruptive_inframe_insertion'
      | 'missense_variant'
      | 'splice_region_variant'
      | 'initiator_codon_variant'
      | 'start_retained'
      | 'stop_retained_variant'
      | 'synonymous_variant'
      | 'downstream_gene_variant'
      | 'intron_variant'
      | 'non_coding_transcript_exon_variant'
      | 'non_coding_transcript_intron_variant'
      | '5_prime_UTR_variant'
      | 'coding_sequence_variant'
      | 'upstream_gene_variant'
      | '3_prime_UTR_variant-exon_variant'
      | '5_prime_UTR_variant-exon_variant'
      | '3_prime_UTR_variant-intron_variant'
      | '5_prime_UTR_variant-intron_variant'
    /**
     * VariantTypeChoice
     * @description The type of a variant.
     * @enum {string}
     */
    VariantTypeChoice: 'snv' | 'indel' | 'mnv' | 'complex_substitution'
    /**
     * Gene
     * @description Representation of a gene to query for.
     */
    Gene: {
      /** Hgnc Id */
      hgnc_id: string
      /** Symbol */
      symbol: string
      /**
       * Name
       * @default null
       */
      name: string | null
      /**
       * Entrez Id
       * @default null
       */
      entrez_id: number | null
      /**
       * Ensembl Id
       * @default null
       */
      ensembl_id: string | null
    }
    /**
     * GenePanelSource
     * @description The source of a gene panel.
     * @enum {string}
     */
    GenePanelSource: 'panelapp' | 'internal'
    /**
     * GenomeRegion
     * @description Representation of a genomic region to query for.
     */
    GenomeRegion: {
      /** Chromosome */
      chromosome: string
      /** @default null */
      range: components['schemas']['OneBasedRange'] | null
    }
    /**
     * OneBasedRange
     * @description Representation of a 1-based range.
     */
    OneBasedRange: {
      /** Start */
      start: number
      /** End */
      end: number
    }
    /**
     * Term
     * @description Representation of a condition (phenotype / disease) term.
     */
    Term: {
      /** Term Id */
      term_id: string
      /** Label */
      label: string | null
    }
    /**
     * TermPresence
     * @description Representation of a term with optional presence (default is not excluded).
     */
    TermPresence: {
      term: components['schemas']['Term']
      /**
       * Excluded
       * @default null
       */
      excluded: boolean | null
    }
    /**
     * VariantPrioService
     * @description Representation of a variant pathogenicity service.
     */
    VariantPrioService: {
      /** Name */
      name: string
      /** Version */
      version: string
    }
    /**
     * ClinvarGermlineAggregateDescription
     * @description The aggregate description for germline variants in ClinVar.
     * @enum {string}
     */
    ClinvarGermlineAggregateDescription:
      | 'pathogenic'
      | 'likely_pathogenic'
      | 'uncertain_significance'
      | 'likely_benign'
      | 'benign'
    /**
     * ColumnConfig
     * @description Configuration for a single column in the result table.
     */
    ColumnConfig: {
      /** Name */
      name: string
      /** Label */
      label: string
      /**
       * Description
       * @default null
       */
      description: string | null
      /** Width */
      width: number
      /** Visible */
      visible: boolean
    }
    /**
     * GenotypePresetChoice
     * @description Presets value for the chosen genotype.
     * @enum {string}
     */
    GenotypePresetChoice:
      | 'any'
      | 'de_novo'
      | 'dominant'
      | 'homozygous_recessive'
      | 'compound_heterozygous_recessive'
      | 'recessive'
      | 'x_recessive'
      | 'affected_carriers'
    /**
     * GenotypePresets
     * @description Configuration for a single column in the result table.
     */
    GenotypePresets: {
      /** @default null */
      choice: components['schemas']['GenotypePresetChoice'] | null
    }
    QueryPresetsQuality: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @default 1 */
      rank: number
      label: string
      description?: string | null
      readonly presetssetversion?: string
      /** @default false */
      filter_active: boolean
      min_dp_het?: number | null
      min_dp_hom?: number | null
      min_ab_het?: number | null
      min_gq?: number | null
      min_ad?: number | null
      max_ad?: number | null
    }
    QueryPresetsFrequency: {
      /** @default false */
      gnomad_exomes_enabled: boolean
      gnomad_exomes_frequency?: number | null
      gnomad_exomes_homozygous?: number | null
      gnomad_exomes_heterozygous?: number | null
      gnomad_exomes_hemizygous?: boolean | null
      /** @default false */
      gnomad_genomes_enabled: boolean
      gnomad_genomes_frequency?: number | null
      gnomad_genomes_homozygous?: number | null
      gnomad_genomes_heterozygous?: number | null
      gnomad_genomes_hemizygous?: boolean | null
      /** @default false */
      helixmtdb_enabled: boolean
      helixmtdb_heteroplasmic?: number | null
      helixmtdb_homoplasmic?: number | null
      helixmtdb_frequency?: number | null
      /** @default false */
      inhouse_enabled: boolean
      inhouse_carriers?: number | null
      inhouse_homozygous?: number | null
      inhouse_heterozygous?: number | null
      inhouse_hemizygous?: number | null
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @default 1 */
      rank: number
      label: string
      description?: string | null
      readonly presetssetversion?: string
    }
    QueryPresetsConsequence: {
      variant_types?: components['schemas']['VariantTypeChoice'][]
      transcript_types?: components['schemas']['TranscriptTypeChoice'][]
      variant_consequences?: components['schemas']['VariantConsequenceChoice'][]
      max_distance_to_exon?: number | null
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @default 1 */
      rank: number
      label: string
      description?: string | null
      readonly presetssetversion?: string
    }
    QueryPresetsLocus: {
      genes?: components['schemas']['Gene'][]
      gene_panels?: components['schemas']['GenePanel'][]
      genome_regions?: components['schemas']['GenomeRegion'][]
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @default 1 */
      rank: number
      label: string
      description?: string | null
      readonly presetssetversion?: string
    }
    QueryPresetsPhenotypePrio: {
      /** @default false */
      phenotype_prio_enabled: boolean
      phenotype_prio_algorithm?: string | null
      terms?: components['schemas']['TermPresence'][]
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @default 1 */
      rank: number
      label: string
      description?: string | null
      readonly presetssetversion?: string
    }
    QueryPresetsVariantPrio: {
      /** @default false */
      variant_prio_enabled: boolean
      services?: components['schemas']['VariantPrioService'][]
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @default 1 */
      rank: number
      label: string
      description?: string | null
      readonly presetssetversion?: string
    }
    QueryPresetsClinvar: {
      /** @default false */
      clinvar_presence_required: boolean
      clinvar_germline_aggregate_description?: components['schemas']['ClinvarGermlineAggregateDescription'][]
      /** @default false */
      allow_conflicting_interpretations: boolean
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @default 1 */
      rank: number
      label: string
      description?: string | null
      readonly presetssetversion?: string
    }
    QueryPresetsColumns: {
      column_settings?: components['schemas']['ColumnConfig'][]
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @default 1 */
      rank: number
      label: string
      description?: string | null
      readonly presetssetversion?: string
    }
    PredefinedQuery: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @default 1 */
      rank: number
      label: string
      description?: string | null
      readonly presetssetversion?: string
      /** @default false */
      included_in_sop: boolean
      genotype?: components['schemas']['GenotypePresets'] | null
      quality?: string | null
      frequency?: string | null
      consequence?: string | null
      locus?: string | null
      phenotypeprio?: string | null
      variantprio?: string | null
      clinvar?: string | null
      columns?: string | null
    }
    QuerySettings: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      readonly session?: string
      readonly presetssetversion?: string
      readonly genotype?: string
      readonly quality?: string
      readonly consequence?: string
      readonly locus?: string
      readonly frequency?: string
      readonly phenotypeprio?: string
      readonly variantprio?: string
      readonly clinvar?: string
    }
    QuerySettingsDetails: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      readonly session?: string
      readonly presetssetversion?: string
      genotype: {
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        readonly querysettings?: string
        sample_genotype_choices?: components['schemas']['SampleGenotypeChoice'][]
      }
      quality: {
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        readonly querysettings?: string
        sample_quality_filters?: components['schemas']['SampleQualityFilter'][]
      }
      consequence: {
        variant_types?: components['schemas']['VariantTypeChoice'][]
        transcript_types?: components['schemas']['TranscriptTypeChoice'][]
        variant_consequences?: components['schemas']['VariantConsequenceChoice'][]
        max_distance_to_exon?: number | null
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        readonly querysettings?: string
      }
      locus: {
        genes?: components['schemas']['Gene'][]
        gene_panels?: components['schemas']['GenePanel'][]
        genome_regions?: components['schemas']['GenomeRegion'][]
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        readonly querysettings?: string
      }
      frequency: {
        /** @default false */
        gnomad_exomes_enabled: boolean
        gnomad_exomes_frequency?: number | null
        gnomad_exomes_homozygous?: number | null
        gnomad_exomes_heterozygous?: number | null
        gnomad_exomes_hemizygous?: boolean | null
        /** @default false */
        gnomad_genomes_enabled: boolean
        gnomad_genomes_frequency?: number | null
        gnomad_genomes_homozygous?: number | null
        gnomad_genomes_heterozygous?: number | null
        gnomad_genomes_hemizygous?: boolean | null
        /** @default false */
        helixmtdb_enabled: boolean
        helixmtdb_heteroplasmic?: number | null
        helixmtdb_homoplasmic?: number | null
        helixmtdb_frequency?: number | null
        /** @default false */
        inhouse_enabled: boolean
        inhouse_carriers?: number | null
        inhouse_homozygous?: number | null
        inhouse_heterozygous?: number | null
        inhouse_hemizygous?: number | null
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        readonly querysettings?: string
      }
      phenotypeprio: {
        /** @default false */
        phenotype_prio_enabled: boolean
        phenotype_prio_algorithm?: string | null
        terms?: components['schemas']['TermPresence'][]
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        readonly querysettings?: string
      }
      variantprio: {
        /** @default false */
        variant_prio_enabled: boolean
        services?: components['schemas']['VariantPrioService'][]
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        readonly querysettings?: string
      }
      clinvar: {
        /** @default false */
        clinvar_presence_required: boolean
        clinvar_germline_aggregate_description?: components['schemas']['ClinvarGermlineAggregateDescription'][]
        /** @default false */
        allow_conflicting_interpretations: boolean
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        readonly querysettings?: string
      }
    }
    /**
     * GenotypeChoice
     * @description Store genotype choice of a ``SampleGenotype``.
     * @enum {string}
     */
    GenotypeChoice:
      | 'any'
      | 'ref'
      | 'het'
      | 'hom'
      | 'non-hom'
      | 'variant'
      | 'comphet_index'
      | 'recessive_index'
      | 'recessive_parent'
    /**
     * SampleGenotypeChoice
     * @description Store the genotype of a sample.
     */
    SampleGenotypeChoice: {
      /** Sample */
      sample: string
      genotype: components['schemas']['GenotypeChoice']
    }
    /**
     * SampleQualityFilter
     * @description Stores per-sample quality filter settings for a particular query.
     */
    SampleQualityFilter: {
      /** Sample */
      sample: string
      /**
       * Filter Active
       * @default false
       */
      filter_active: boolean
      /**
       * Min Dp Het
       * @default null
       */
      min_dp_het: number | null
      /**
       * Min Dp Hom
       * @default null
       */
      min_dp_hom: number | null
      /**
       * Min Ab Het
       * @default null
       */
      min_ab_het: number | null
      /**
       * Min Gq
       * @default null
       */
      min_gq: number | null
      /**
       * Min Ad
       * @default null
       */
      min_ad: number | null
      /**
       * Max Ad
       * @default null
       */
      max_ad: number | null
    }
    Query: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @default 1 */
      rank: number
      label: string
      readonly session?: string
      readonly settings?: string
      readonly columnsconfig?: string
    }
    QueryDetails: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @default 1 */
      rank: number
      label: string
      readonly session?: string
      settings: {
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        readonly session?: string
        readonly presetssetversion?: string
        genotype: {
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
          sample_genotype_choices?: components['schemas']['SampleGenotypeChoice'][]
        }
        quality: {
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
          sample_quality_filters?: components['schemas']['SampleQualityFilter'][]
        }
        consequence: {
          variant_types?: components['schemas']['VariantTypeChoice'][]
          transcript_types?: components['schemas']['TranscriptTypeChoice'][]
          variant_consequences?: components['schemas']['VariantConsequenceChoice'][]
          max_distance_to_exon?: number | null
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
        }
        locus: {
          genes?: components['schemas']['Gene'][]
          gene_panels?: components['schemas']['GenePanel'][]
          genome_regions?: components['schemas']['GenomeRegion'][]
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
        }
        frequency: {
          /** @default false */
          gnomad_exomes_enabled: boolean
          gnomad_exomes_frequency?: number | null
          gnomad_exomes_homozygous?: number | null
          gnomad_exomes_heterozygous?: number | null
          gnomad_exomes_hemizygous?: boolean | null
          /** @default false */
          gnomad_genomes_enabled: boolean
          gnomad_genomes_frequency?: number | null
          gnomad_genomes_homozygous?: number | null
          gnomad_genomes_heterozygous?: number | null
          gnomad_genomes_hemizygous?: boolean | null
          /** @default false */
          helixmtdb_enabled: boolean
          helixmtdb_heteroplasmic?: number | null
          helixmtdb_homoplasmic?: number | null
          helixmtdb_frequency?: number | null
          /** @default false */
          inhouse_enabled: boolean
          inhouse_carriers?: number | null
          inhouse_homozygous?: number | null
          inhouse_heterozygous?: number | null
          inhouse_hemizygous?: number | null
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
        }
        phenotypeprio: {
          /** @default false */
          phenotype_prio_enabled: boolean
          phenotype_prio_algorithm?: string | null
          terms?: components['schemas']['TermPresence'][]
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
        }
        variantprio: {
          /** @default false */
          variant_prio_enabled: boolean
          services?: components['schemas']['VariantPrioService'][]
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
        }
        clinvar: {
          /** @default false */
          clinvar_presence_required: boolean
          clinvar_germline_aggregate_description?: components['schemas']['ClinvarGermlineAggregateDescription'][]
          /** @default false */
          allow_conflicting_interpretations: boolean
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
        }
      }
      columnsconfig: {
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        column_settings?: components['schemas']['ColumnConfig'][]
      }
    }
    QueryExecution: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @enum {string} */
      readonly state?:
        | 'initial'
        | 'queued'
        | 'running'
        | 'failed'
        | 'canceled'
        | 'done'
      readonly complete_percent?: number | null
      /** Format: date-time */
      readonly start_time?: string | null
      /** Format: date-time */
      readonly end_time?: string | null
      readonly elapsed_seconds?: number | null
      readonly query?: string
      readonly querysettings?: string
    }
    QueryExecutionDetails: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      /** @enum {string} */
      readonly state?:
        | 'initial'
        | 'queued'
        | 'running'
        | 'failed'
        | 'canceled'
        | 'done'
      readonly complete_percent?: number | null
      /** Format: date-time */
      readonly start_time?: string | null
      /** Format: date-time */
      readonly end_time?: string | null
      readonly elapsed_seconds?: number | null
      readonly query?: string
      querysettings: {
        /** Format: uuid */
        readonly sodar_uuid?: string
        /** Format: date-time */
        readonly date_created?: string
        /** Format: date-time */
        readonly date_modified?: string
        readonly session?: string
        readonly presetssetversion?: string
        genotype: {
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
          sample_genotype_choices?: components['schemas']['SampleGenotypeChoice'][]
        }
        quality: {
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
          sample_quality_filters?: components['schemas']['SampleQualityFilter'][]
        }
        consequence: {
          variant_types?: components['schemas']['VariantTypeChoice'][]
          transcript_types?: components['schemas']['TranscriptTypeChoice'][]
          variant_consequences?: components['schemas']['VariantConsequenceChoice'][]
          max_distance_to_exon?: number | null
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
        }
        locus: {
          genes?: components['schemas']['Gene'][]
          gene_panels?: components['schemas']['GenePanel'][]
          genome_regions?: components['schemas']['GenomeRegion'][]
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
        }
        frequency: {
          /** @default false */
          gnomad_exomes_enabled: boolean
          gnomad_exomes_frequency?: number | null
          gnomad_exomes_homozygous?: number | null
          gnomad_exomes_heterozygous?: number | null
          gnomad_exomes_hemizygous?: boolean | null
          /** @default false */
          gnomad_genomes_enabled: boolean
          gnomad_genomes_frequency?: number | null
          gnomad_genomes_homozygous?: number | null
          gnomad_genomes_heterozygous?: number | null
          gnomad_genomes_hemizygous?: boolean | null
          /** @default false */
          helixmtdb_enabled: boolean
          helixmtdb_heteroplasmic?: number | null
          helixmtdb_homoplasmic?: number | null
          helixmtdb_frequency?: number | null
          /** @default false */
          inhouse_enabled: boolean
          inhouse_carriers?: number | null
          inhouse_homozygous?: number | null
          inhouse_heterozygous?: number | null
          inhouse_hemizygous?: number | null
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
        }
        phenotypeprio: {
          /** @default false */
          phenotype_prio_enabled: boolean
          phenotype_prio_algorithm?: string | null
          terms?: components['schemas']['TermPresence'][]
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
        }
        variantprio: {
          /** @default false */
          variant_prio_enabled: boolean
          services?: components['schemas']['VariantPrioService'][]
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
        }
        clinvar: {
          /** @default false */
          clinvar_presence_required: boolean
          clinvar_germline_aggregate_description?: components['schemas']['ClinvarGermlineAggregateDescription'][]
          /** @default false */
          allow_conflicting_interpretations: boolean
          /** Format: uuid */
          readonly sodar_uuid?: string
          /** Format: date-time */
          readonly date_created?: string
          /** Format: date-time */
          readonly date_modified?: string
          readonly querysettings?: string
        }
      }
    }
    ResultSet: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      /** Format: date-time */
      readonly date_created?: string
      /** Format: date-time */
      readonly date_modified?: string
      readonly queryexecution?: string
      datasource_infos: components['schemas']['DataSourceInfos']
    }
    /**
     * DataSourceInfo
     * @description Describes the version version of a given datasource.
     */
    DataSourceInfo: {
      /** Name */
      name: string
      /** Version */
      version: string
    }
    /**
     * DataSourceInfos
     * @description Container for ``DataSourceInfo`` records.
     */
    DataSourceInfos: {
      /** Infos */
      infos: components['schemas']['DataSourceInfo'][]
    }
    ResultRow: {
      /** Format: uuid */
      readonly sodar_uuid?: string
      readonly resultset?: string
      readonly release?: string
      readonly chromosome?: string
      readonly chromosome_no?: number
      readonly start?: number
      readonly stop?: number
      readonly reference?: string
      readonly alternative?: string
      payload: components['schemas']['ResultRowPayload']
    }
    /**
     * ResultRowPayload
     * @description Payload for one result row of a seqvar query.
     */
    ResultRowPayload: {
      /** Foo */
      foo: number
    }
    RoleAssignment: {
      readonly project?: string
      role: string
      user: string
      readonly sodar_uuid?: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  listExtraAnnoFields: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['ExtraAnnoField'][]
        }
      }
    }
  }
  retrieveCaseListQcStats: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseListQcStats']
        }
      }
    }
  }
  retrieveCase: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['Case']
        }
      }
    }
  }
  retrieveSmallVariantQuery: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantQuery']
        }
      }
    }
  }
  retrieveSmallVariantQuery: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantQuery']
        }
      }
    }
  }
  createSmallVariantQuery: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SmallVariantQuery']
        'application/x-www-form-urlencoded': components['schemas']['SmallVariantQuery']
        'multipart/form-data': components['schemas']['SmallVariantQuery']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantQuery']
        }
      }
    }
  }
  retrieveSmallVariantQueryWithLogs: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantquery: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantQueryWithLogs']
        }
      }
    }
  }
  updateSmallVariantQueryWithLogs: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantquery: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SmallVariantQueryWithLogs']
        'application/x-www-form-urlencoded': components['schemas']['SmallVariantQueryWithLogs']
        'multipart/form-data': components['schemas']['SmallVariantQueryWithLogs']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantQueryWithLogs']
        }
      }
    }
  }
  destroySmallVariantQueryWithLogs: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantquery: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateSmallVariantQueryWithLogs: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantquery: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SmallVariantQueryWithLogs']
        'application/x-www-form-urlencoded': components['schemas']['SmallVariantQueryWithLogs']
        'multipart/form-data': components['schemas']['SmallVariantQueryWithLogs']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantQueryWithLogs']
        }
      }
    }
  }
  retrieveSmallVariantQueryResultSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantquery: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantQueryResultSet']
        }
      }
    }
  }
  retrieveSmallVariantQueryResultSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantqueryresultset: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantQueryResultSet']
        }
      }
    }
  }
  retrieveSmallVariantQueryResultRow: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantqueryresultset: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantQueryResultRow']
        }
      }
    }
  }
  retrieveSmallVariantQueryResultRow: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantqueryresultrow: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantQueryResultRow']
        }
      }
    }
  }
  retrieveSettingsShortcuts: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SettingsShortcuts']
        }
      }
    }
  }
  listSmallVariantQuickPresetsApis: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': unknown[]
        }
      }
    }
  }
  retrieveSmallVariantCategoryPresetsApi: {
    parameters: {
      query?: never
      header?: never
      path: {
        category: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': unknown
        }
      }
    }
  }
  retrieveSmallVariantInheritancePresetsApi: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': unknown
        }
      }
    }
  }
  retrieveSmallVariantQueryDownloadGenerateApi: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantquery: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': unknown
        }
      }
    }
  }
  retrieveSmallVariantQueryDownloadGenerateApi: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantquery: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': unknown
        }
      }
    }
  }
  retrieveSmallVariantQueryDownloadGenerateApi: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantquery: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': unknown
        }
      }
    }
  }
  retrieveSmallVariantQueryDownloadServeApi: {
    parameters: {
      query?: never
      header?: never
      path: {
        exportfilebgjob: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': unknown
        }
      }
    }
  }
  retrieveExportFileBgJob: {
    parameters: {
      query?: never
      header?: never
      path: {
        exportfilebgjob: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['ExportFileBgJob']
        }
      }
    }
  }
  retrieveSmallVariantComment: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantComment']
        }
      }
    }
  }
  createSmallVariantComment: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SmallVariantComment']
        'application/x-www-form-urlencoded': components['schemas']['SmallVariantComment']
        'multipart/form-data': components['schemas']['SmallVariantComment']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantComment']
        }
      }
    }
  }
  retrieveSmallVariantCommentProject: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantCommentProject']
        }
      }
    }
  }
  retrieveSmallVariantFlags: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantFlags']
        }
      }
    }
  }
  createSmallVariantFlags: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SmallVariantFlags']
        'application/x-www-form-urlencoded': components['schemas']['SmallVariantFlags']
        'multipart/form-data': components['schemas']['SmallVariantFlags']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantFlags']
        }
      }
    }
  }
  retrieveSmallVariantFlagsProject: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantFlagsProject']
        }
      }
    }
  }
  retrieveAcmgCriteriaRating: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['AcmgCriteriaRating']
        }
      }
    }
  }
  createAcmgCriteriaRating: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['AcmgCriteriaRating']
        'application/x-www-form-urlencoded': components['schemas']['AcmgCriteriaRating']
        'multipart/form-data': components['schemas']['AcmgCriteriaRating']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['AcmgCriteriaRating']
        }
      }
    }
  }
  listExtraAnnoFields: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['ExtraAnnoField'][]
        }
      }
    }
  }
  retrieveProjectSettings: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['ProjectSettings']
        }
      }
    }
  }
  retrieveCaseImportInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseImportInfo']
        }
      }
    }
  }
  createCaseImportInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CaseImportInfo']
        'application/x-www-form-urlencoded': components['schemas']['CaseImportInfo']
        'multipart/form-data': components['schemas']['CaseImportInfo']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseImportInfo']
        }
      }
    }
  }
  retrieveCaseImportInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
        caseimportinfo: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseImportInfo']
        }
      }
    }
  }
  updateCaseImportInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
        caseimportinfo: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CaseImportInfo']
        'application/x-www-form-urlencoded': components['schemas']['CaseImportInfo']
        'multipart/form-data': components['schemas']['CaseImportInfo']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseImportInfo']
        }
      }
    }
  }
  destroyCaseImportInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
        caseimportinfo: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateCaseImportInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
        caseimportinfo: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CaseImportInfo']
        'application/x-www-form-urlencoded': components['schemas']['CaseImportInfo']
        'multipart/form-data': components['schemas']['CaseImportInfo']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseImportInfo']
        }
      }
    }
  }
  retrieveVariantSetImportInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VariantSetImportInfo']
        }
      }
    }
  }
  createVariantSetImportInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['VariantSetImportInfo']
        'application/x-www-form-urlencoded': components['schemas']['VariantSetImportInfo']
        'multipart/form-data': components['schemas']['VariantSetImportInfo']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VariantSetImportInfo']
        }
      }
    }
  }
  retrieveVariantSetImportInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
        variantsetimportinfo: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VariantSetImportInfo']
        }
      }
    }
  }
  updateVariantSetImportInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
        variantsetimportinfo: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['VariantSetImportInfo']
        'application/x-www-form-urlencoded': components['schemas']['VariantSetImportInfo']
        'multipart/form-data': components['schemas']['VariantSetImportInfo']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VariantSetImportInfo']
        }
      }
    }
  }
  destroyVariantSetImportInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
        variantsetimportinfo: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateVariantSetImportInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
        variantsetimportinfo: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['VariantSetImportInfo']
        'application/x-www-form-urlencoded': components['schemas']['VariantSetImportInfo']
        'multipart/form-data': components['schemas']['VariantSetImportInfo']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VariantSetImportInfo']
        }
      }
    }
  }
  retrieveBamQcFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['BamQcFile']
        }
      }
    }
  }
  createBamQcFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['BamQcFile']
        'application/x-www-form-urlencoded': components['schemas']['BamQcFile']
        'multipart/form-data': components['schemas']['BamQcFile']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['BamQcFile']
        }
      }
    }
  }
  retrieveBamQcFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
        bamqcfile: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['BamQcFile']
        }
      }
    }
  }
  destroyBamQcFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
        bamqcfile: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  retrieveCaseGeneAnnotationFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseGeneAnnotationFile']
        }
      }
    }
  }
  createCaseGeneAnnotationFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CaseGeneAnnotationFile']
        'application/x-www-form-urlencoded': components['schemas']['CaseGeneAnnotationFile']
        'multipart/form-data': components['schemas']['CaseGeneAnnotationFile']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseGeneAnnotationFile']
        }
      }
    }
  }
  retrieveCaseGeneAnnotationFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
        casegeneannotationfile: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseGeneAnnotationFile']
        }
      }
    }
  }
  destroyCaseGeneAnnotationFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportinfo: string
        casegeneannotationfile: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  retrieveGenotypeFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        variantsetimportinfo: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['GenotypeFile']
        }
      }
    }
  }
  createGenotypeFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        variantsetimportinfo: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['GenotypeFile']
        'application/x-www-form-urlencoded': components['schemas']['GenotypeFile']
        'multipart/form-data': components['schemas']['GenotypeFile']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['GenotypeFile']
        }
      }
    }
  }
  retrieveGenotypeFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        variantsetimportinfo: string
        genotypefile: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['GenotypeFile']
        }
      }
    }
  }
  destroyGenotypeFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        variantsetimportinfo: string
        genotypefile: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  retrieveEffectFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        variantsetimportinfo: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['EffectFile']
        }
      }
    }
  }
  createEffectFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        variantsetimportinfo: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['EffectFile']
        'application/x-www-form-urlencoded': components['schemas']['EffectFile']
        'multipart/form-data': components['schemas']['EffectFile']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['EffectFile']
        }
      }
    }
  }
  retrieveEffectFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        variantsetimportinfo: string
        effectsfile: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['EffectFile']
        }
      }
    }
  }
  destroyEffectFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        variantsetimportinfo: string
        effectsfile: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  retrieveDatabaseInfoFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        variantsetimportinfo: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['DatabaseInfoFile']
        }
      }
    }
  }
  createDatabaseInfoFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        variantsetimportinfo: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['DatabaseInfoFile']
        'application/x-www-form-urlencoded': components['schemas']['DatabaseInfoFile']
        'multipart/form-data': components['schemas']['DatabaseInfoFile']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['DatabaseInfoFile']
        }
      }
    }
  }
  retrieveDatabaseInfoFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        variantsetimportinfo: string
        databaseinfofile: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['DatabaseInfoFile']
        }
      }
    }
  }
  destroyDatabaseInfoFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        variantsetimportinfo: string
        databaseinfofile: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  retrieveSvFetchVariantsAjax: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': unknown
        }
      }
    }
  }
  listSvQuickPresetsAjaxs: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': unknown[]
        }
      }
    }
  }
  retrieveSvCategoryPresetsApi: {
    parameters: {
      query?: never
      header?: never
      path: {
        category: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': unknown
        }
      }
    }
  }
  retrieveSvInheritancePresetsApi: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': unknown
        }
      }
    }
  }
  retrieveSvQuerySettingsShortcuts: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SvQuerySettingsShortcuts']
        }
      }
    }
  }
  retrieveSvQuery: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SvQuery']
        }
      }
    }
  }
  createSvQuery: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SvQuery']
        'application/x-www-form-urlencoded': components['schemas']['SvQuery']
        'multipart/form-data': components['schemas']['SvQuery']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SvQuery']
        }
      }
    }
  }
  retrieveSvQueryWithLogs: {
    parameters: {
      query?: never
      header?: never
      path: {
        svquery: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SvQueryWithLogs']
        }
      }
    }
  }
  updateSvQueryWithLogs: {
    parameters: {
      query?: never
      header?: never
      path: {
        svquery: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SvQueryWithLogs']
        'application/x-www-form-urlencoded': components['schemas']['SvQueryWithLogs']
        'multipart/form-data': components['schemas']['SvQueryWithLogs']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SvQueryWithLogs']
        }
      }
    }
  }
  destroySvQueryWithLogs: {
    parameters: {
      query?: never
      header?: never
      path: {
        svquery: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateSvQueryWithLogs: {
    parameters: {
      query?: never
      header?: never
      path: {
        svquery: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SvQueryWithLogs']
        'application/x-www-form-urlencoded': components['schemas']['SvQueryWithLogs']
        'multipart/form-data': components['schemas']['SvQueryWithLogs']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SvQueryWithLogs']
        }
      }
    }
  }
  retrieveSvQueryResultSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        svquery: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SvQueryResultSet']
        }
      }
    }
  }
  retrieveSvQueryResultSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        svqueryresultset: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SvQueryResultSet']
        }
      }
    }
  }
  retrieveSvQueryResultRow: {
    parameters: {
      query?: never
      header?: never
      path: {
        svqueryresultset: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SvQueryResultRow']
        }
      }
    }
  }
  retrieveSvQueryResultRow: {
    parameters: {
      query?: never
      header?: never
      path: {
        svqueryresultrow: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SvQueryResultRow']
        }
      }
    }
  }
  retrieveStructuralVariantFlags: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantFlags']
        }
      }
    }
  }
  createStructuralVariantFlags: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['StructuralVariantFlags']
        'application/x-www-form-urlencoded': components['schemas']['StructuralVariantFlags']
        'multipart/form-data': components['schemas']['StructuralVariantFlags']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantFlags']
        }
      }
    }
  }
  retrieveStructuralVariantFlagsProject: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantFlagsProject']
        }
      }
    }
  }
  retrieveStructuralVariantFlags: {
    parameters: {
      query?: never
      header?: never
      path: {
        structuralvariantflags: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantFlags']
        }
      }
    }
  }
  updateStructuralVariantFlags: {
    parameters: {
      query?: never
      header?: never
      path: {
        structuralvariantflags: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['StructuralVariantFlags']
        'application/x-www-form-urlencoded': components['schemas']['StructuralVariantFlags']
        'multipart/form-data': components['schemas']['StructuralVariantFlags']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantFlags']
        }
      }
    }
  }
  destroyStructuralVariantFlags: {
    parameters: {
      query?: never
      header?: never
      path: {
        structuralvariantflags: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateStructuralVariantFlags: {
    parameters: {
      query?: never
      header?: never
      path: {
        structuralvariantflags: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['StructuralVariantFlags']
        'application/x-www-form-urlencoded': components['schemas']['StructuralVariantFlags']
        'multipart/form-data': components['schemas']['StructuralVariantFlags']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantFlags']
        }
      }
    }
  }
  retrieveStructuralVariantComment: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantComment']
        }
      }
    }
  }
  createStructuralVariantComment: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['StructuralVariantComment']
        'application/x-www-form-urlencoded': components['schemas']['StructuralVariantComment']
        'multipart/form-data': components['schemas']['StructuralVariantComment']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantComment']
        }
      }
    }
  }
  retrieveStructuralVariantCommentProject: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantCommentProject']
        }
      }
    }
  }
  retrieveStructuralVariantComment: {
    parameters: {
      query?: never
      header?: never
      path: {
        structuralvariantcomment: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantComment']
        }
      }
    }
  }
  updateStructuralVariantComment: {
    parameters: {
      query?: never
      header?: never
      path: {
        structuralvariantcomment: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['StructuralVariantComment']
        'application/x-www-form-urlencoded': components['schemas']['StructuralVariantComment']
        'multipart/form-data': components['schemas']['StructuralVariantComment']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantComment']
        }
      }
    }
  }
  destroyStructuralVariantComment: {
    parameters: {
      query?: never
      header?: never
      path: {
        structuralvariantcomment: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateStructuralVariantComment: {
    parameters: {
      query?: never
      header?: never
      path: {
        structuralvariantcomment: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['StructuralVariantComment']
        'application/x-www-form-urlencoded': components['schemas']['StructuralVariantComment']
        'multipart/form-data': components['schemas']['StructuralVariantComment']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantComment']
        }
      }
    }
  }
  retrieveStructuralVariantAcmgRating: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantAcmgRating']
        }
      }
    }
  }
  createStructuralVariantAcmgRating: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['StructuralVariantAcmgRating']
        'application/x-www-form-urlencoded': components['schemas']['StructuralVariantAcmgRating']
        'multipart/form-data': components['schemas']['StructuralVariantAcmgRating']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantAcmgRating']
        }
      }
    }
  }
  retrieveStructuralVariantAcmgRatingProject: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantAcmgRatingProject']
        }
      }
    }
  }
  retrieveStructuralVariantAcmgRating: {
    parameters: {
      query?: never
      header?: never
      path: {
        structuralvariantacmgrating: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantAcmgRating']
        }
      }
    }
  }
  updateStructuralVariantAcmgRating: {
    parameters: {
      query?: never
      header?: never
      path: {
        structuralvariantacmgrating: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['StructuralVariantAcmgRating']
        'application/x-www-form-urlencoded': components['schemas']['StructuralVariantAcmgRating']
        'multipart/form-data': components['schemas']['StructuralVariantAcmgRating']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantAcmgRating']
        }
      }
    }
  }
  destroyStructuralVariantAcmgRating: {
    parameters: {
      query?: never
      header?: never
      path: {
        structuralvariantacmgrating: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateStructuralVariantAcmgRating: {
    parameters: {
      query?: never
      header?: never
      path: {
        structuralvariantacmgrating: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['StructuralVariantAcmgRating']
        'application/x-www-form-urlencoded': components['schemas']['StructuralVariantAcmgRating']
        'multipart/form-data': components['schemas']['StructuralVariantAcmgRating']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['StructuralVariantAcmgRating']
        }
      }
    }
  }
  listProjectListAjaxs: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown[]
        }
      }
    }
  }
  retrieveSODARUser: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SODARUser']
        }
      }
    }
  }
  listProjects: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': unknown[]
        }
      }
    }
  }
  retrieveProject: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': components['schemas']['Project']
        }
      }
    }
  }
  retrieveProjectInvite: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': components['schemas']['ProjectInvite']
        }
      }
    }
  }
  retrieveAppSetting: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': components['schemas']['AppSetting']
        }
      }
    }
  }
  retrieveAppSetting: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': components['schemas']['AppSetting']
        }
      }
    }
  }
  listSODARUsers: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': components['schemas']['SODARUser'][]
        }
      }
    }
  }
  retrieveSODARUser: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': components['schemas']['SODARUser']
        }
      }
    }
  }
  retrieveRemoteProjectGet: {
    parameters: {
      query?: never
      header?: never
      path: {
        secret: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': unknown
        }
      }
    }
  }
  retrieveProjectEventDetailAjax: {
    parameters: {
      query?: never
      header?: never
      path: {
        projectevent: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  retrieveSiteEventDetailAjax: {
    parameters: {
      query?: never
      header?: never
      path: {
        projectevent: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  retrieveProjectEventExtraAjax: {
    parameters: {
      query?: never
      header?: never
      path: {
        projectevent: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  retrieveSiteEventExtraAjax: {
    parameters: {
      query?: never
      header?: never
      path: {
        projectevent: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  retrieveEventStatusExtraAjax: {
    parameters: {
      query?: never
      header?: never
      path: {
        eventstatus: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  listAppAlertStatusAjaxs: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown[]
        }
      }
    }
  }
  retrieveProjectUserPermissionsAjax: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': unknown
        }
      }
    }
  }
  retrieveCohort: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['Cohort']
        }
      }
    }
  }
  createCohort: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['Cohort']
        'application/x-www-form-urlencoded': components['schemas']['Cohort']
        'multipart/form-data': components['schemas']['Cohort']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['Cohort']
        }
      }
    }
  }
  retrieveCohort: {
    parameters: {
      query?: never
      header?: never
      path: {
        cohort: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['Cohort']
        }
      }
    }
  }
  updateCohort: {
    parameters: {
      query?: never
      header?: never
      path: {
        cohort: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['Cohort']
        'application/x-www-form-urlencoded': components['schemas']['Cohort']
        'multipart/form-data': components['schemas']['Cohort']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['Cohort']
        }
      }
    }
  }
  destroyCohort: {
    parameters: {
      query?: never
      header?: never
      path: {
        cohort: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateCohort: {
    parameters: {
      query?: never
      header?: never
      path: {
        cohort: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['Cohort']
        'application/x-www-form-urlencoded': components['schemas']['Cohort']
        'multipart/form-data': components['schemas']['Cohort']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['Cohort']
        }
      }
    }
  }
  retrieveCohortCase: {
    parameters: {
      query?: never
      header?: never
      path: {
        cohort: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CohortCase']
        }
      }
    }
  }
  retrieveProjectCases: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['ProjectCases']
        }
      }
    }
  }
  listBeaconInfoApis: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown[]
        }
      }
    }
  }
  listBeaconQueryApis: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown[]
        }
      }
    }
  }
  createBeaconQueryApi: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  listGenePanelCategorys: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['GenePanelCategory'][]
        }
      }
    }
  }
  retrieveGenePanel: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['GenePanel']
        }
      }
    }
  }
  retrieveProjectUserPermissionsAjax: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': unknown
        }
      }
    }
  }
  retrieveCaseSerializerNg: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseNg']
        }
      }
    }
  }
  retrieveCaseSerializerNg: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseNg']
        }
      }
    }
  }
  updateCaseSerializerNg: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CaseNg']
        'application/x-www-form-urlencoded': components['schemas']['CaseNg']
        'multipart/form-data': components['schemas']['CaseNg']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseNg']
        }
      }
    }
  }
  destroyCaseSerializerNg: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateCaseSerializerNg: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CaseNg']
        'application/x-www-form-urlencoded': components['schemas']['CaseNg']
        'multipart/form-data': components['schemas']['CaseNg']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseNg']
        }
      }
    }
  }
  retrieveCaseComment: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseComment']
        }
      }
    }
  }
  createCaseComment: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CaseComment']
        'application/x-www-form-urlencoded': components['schemas']['CaseComment']
        'multipart/form-data': components['schemas']['CaseComment']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseComment']
        }
      }
    }
  }
  retrieveCaseComments: {
    parameters: {
      query?: never
      header?: never
      path: {
        casecomment: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseComment']
        }
      }
    }
  }
  updateCaseComments: {
    parameters: {
      query?: never
      header?: never
      path: {
        casecomment: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CaseComment']
        'application/x-www-form-urlencoded': components['schemas']['CaseComment']
        'multipart/form-data': components['schemas']['CaseComment']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseComment']
        }
      }
    }
  }
  destroyCaseComments: {
    parameters: {
      query?: never
      header?: never
      path: {
        casecomment: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateCaseComments: {
    parameters: {
      query?: never
      header?: never
      path: {
        casecomment: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CaseComment']
        'application/x-www-form-urlencoded': components['schemas']['CaseComment']
        'multipart/form-data': components['schemas']['CaseComment']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseComment']
        }
      }
    }
  }
  retrieveCasePhenotypeTerms: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CasePhenotypeTerms']
        }
      }
    }
  }
  createCasePhenotypeTerms: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CasePhenotypeTerms']
        'application/x-www-form-urlencoded': components['schemas']['CasePhenotypeTerms']
        'multipart/form-data': components['schemas']['CasePhenotypeTerms']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CasePhenotypeTerms']
        }
      }
    }
  }
  retrieveCasePhenotypeTerms: {
    parameters: {
      query?: never
      header?: never
      path: {
        casephenotypeterms: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CasePhenotypeTerms']
        }
      }
    }
  }
  updateCasePhenotypeTerms: {
    parameters: {
      query?: never
      header?: never
      path: {
        casephenotypeterms: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CasePhenotypeTerms']
        'application/x-www-form-urlencoded': components['schemas']['CasePhenotypeTerms']
        'multipart/form-data': components['schemas']['CasePhenotypeTerms']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CasePhenotypeTerms']
        }
      }
    }
  }
  destroyCasePhenotypeTerms: {
    parameters: {
      query?: never
      header?: never
      path: {
        casephenotypeterms: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateCasePhenotypeTerms: {
    parameters: {
      query?: never
      header?: never
      path: {
        casephenotypeterms: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CasePhenotypeTerms']
        'application/x-www-form-urlencoded': components['schemas']['CasePhenotypeTerms']
        'multipart/form-data': components['schemas']['CasePhenotypeTerms']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CasePhenotypeTerms']
        }
      }
    }
  }
  retrieveAnnotationReleaseInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['AnnotationReleaseInfo']
        }
      }
    }
  }
  retrieveSvAnnotationReleaseInfo: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SvAnnotationReleaseInfo']
        }
      }
    }
  }
  retrieveVarAnnoSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VarAnnoSet']
        }
      }
    }
  }
  createVarAnnoSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['VarAnnoSet']
        'application/x-www-form-urlencoded': components['schemas']['VarAnnoSet']
        'multipart/form-data': components['schemas']['VarAnnoSet']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VarAnnoSet']
        }
      }
    }
  }
  retrieveVarAnnoSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        varannoset: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VarAnnoSet']
        }
      }
    }
  }
  updateVarAnnoSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        varannoset: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['VarAnnoSet']
        'application/x-www-form-urlencoded': components['schemas']['VarAnnoSet']
        'multipart/form-data': components['schemas']['VarAnnoSet']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VarAnnoSet']
        }
      }
    }
  }
  destroyVarAnnoSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        varannoset: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateVarAnnoSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        varannoset: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['VarAnnoSet']
        'application/x-www-form-urlencoded': components['schemas']['VarAnnoSet']
        'multipart/form-data': components['schemas']['VarAnnoSet']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VarAnnoSet']
        }
      }
    }
  }
  retrieveVarAnnoSetEntry: {
    parameters: {
      query?: never
      header?: never
      path: {
        varannoset: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VarAnnoSetEntry']
        }
      }
    }
  }
  createVarAnnoSetEntry: {
    parameters: {
      query?: never
      header?: never
      path: {
        varannoset: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['VarAnnoSetEntry']
        'application/x-www-form-urlencoded': components['schemas']['VarAnnoSetEntry']
        'multipart/form-data': components['schemas']['VarAnnoSetEntry']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VarAnnoSetEntry']
        }
      }
    }
  }
  retrieveVarAnnoSetEntry: {
    parameters: {
      query?: never
      header?: never
      path: {
        varannosetentry: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VarAnnoSetEntry']
        }
      }
    }
  }
  updateVarAnnoSetEntry: {
    parameters: {
      query?: never
      header?: never
      path: {
        varannosetentry: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['VarAnnoSetEntry']
        'application/x-www-form-urlencoded': components['schemas']['VarAnnoSetEntry']
        'multipart/form-data': components['schemas']['VarAnnoSetEntry']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VarAnnoSetEntry']
        }
      }
    }
  }
  destroyVarAnnoSetEntry: {
    parameters: {
      query?: never
      header?: never
      path: {
        varannosetentry: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateVarAnnoSetEntry: {
    parameters: {
      query?: never
      header?: never
      path: {
        varannosetentry: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['VarAnnoSetEntry']
        'application/x-www-form-urlencoded': components['schemas']['VarAnnoSetEntry']
        'multipart/form-data': components['schemas']['VarAnnoSetEntry']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VarAnnoSetEntry']
        }
      }
    }
  }
  listEnrichmentKits: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['EnrichmentKit'][]
        }
      }
    }
  }
  createEnrichmentKit: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['EnrichmentKit']
        'application/x-www-form-urlencoded': components['schemas']['EnrichmentKit']
        'multipart/form-data': components['schemas']['EnrichmentKit']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['EnrichmentKit']
        }
      }
    }
  }
  retrieveEnrichmentKit: {
    parameters: {
      query?: never
      header?: never
      path: {
        enrichmentkit: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['EnrichmentKit']
        }
      }
    }
  }
  updateEnrichmentKit: {
    parameters: {
      query?: never
      header?: never
      path: {
        enrichmentkit: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['EnrichmentKit']
        'application/x-www-form-urlencoded': components['schemas']['EnrichmentKit']
        'multipart/form-data': components['schemas']['EnrichmentKit']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['EnrichmentKit']
        }
      }
    }
  }
  destroyEnrichmentKit: {
    parameters: {
      query?: never
      header?: never
      path: {
        enrichmentkit: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateEnrichmentKit: {
    parameters: {
      query?: never
      header?: never
      path: {
        enrichmentkit: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['EnrichmentKit']
        'application/x-www-form-urlencoded': components['schemas']['EnrichmentKit']
        'multipart/form-data': components['schemas']['EnrichmentKit']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['EnrichmentKit']
        }
      }
    }
  }
  retrieveTargetBedFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        enrichmentkit: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['TargetBedFile']
        }
      }
    }
  }
  createTargetBedFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        enrichmentkit: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['TargetBedFile']
        'application/x-www-form-urlencoded': components['schemas']['TargetBedFile']
        'multipart/form-data': components['schemas']['TargetBedFile']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['TargetBedFile']
        }
      }
    }
  }
  retrieveTargetBedFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        targetbedfile: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['TargetBedFile']
        }
      }
    }
  }
  updateTargetBedFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        targetbedfile: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['TargetBedFile']
        'application/x-www-form-urlencoded': components['schemas']['TargetBedFile']
        'multipart/form-data': components['schemas']['TargetBedFile']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['TargetBedFile']
        }
      }
    }
  }
  destroyTargetBedFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        targetbedfile: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateTargetBedFile: {
    parameters: {
      query?: never
      header?: never
      path: {
        targetbedfile: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['TargetBedFile']
        'application/x-www-form-urlencoded': components['schemas']['TargetBedFile']
        'multipart/form-data': components['schemas']['TargetBedFile']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['TargetBedFile']
        }
      }
    }
  }
  retrieveCaseImportAction: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseImportAction']
        }
      }
    }
  }
  createCaseImportAction: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CaseImportAction']
        'application/x-www-form-urlencoded': components['schemas']['CaseImportAction']
        'multipart/form-data': components['schemas']['CaseImportAction']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseImportAction']
        }
      }
    }
  }
  retrieveCaseImportAction: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportaction: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseImportAction']
        }
      }
    }
  }
  updateCaseImportAction: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportaction: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CaseImportAction']
        'application/x-www-form-urlencoded': components['schemas']['CaseImportAction']
        'multipart/form-data': components['schemas']['CaseImportAction']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseImportAction']
        }
      }
    }
  }
  destroyCaseImportAction: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportaction: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateCaseImportAction: {
    parameters: {
      query?: never
      header?: never
      path: {
        caseimportaction: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CaseImportAction']
        'application/x-www-form-urlencoded': components['schemas']['CaseImportAction']
        'multipart/form-data': components['schemas']['CaseImportAction']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseImportAction']
        }
      }
    }
  }
  retrieveCaseQc: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CaseQc']
        }
      }
    }
  }
  retrieveVarfishStats: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['VarfishStats']
        }
      }
    }
  }
  listCaseAnalysis: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveCaseAnalysis: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
        caseanalysis: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listCaseAnalysisSessions: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        case: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveCaseAnalysisSession: {
    parameters: {
      query?: never
      header?: never
      path: {
        case: string
        caseanalysissession: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listQueryPresetsSets: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createQueryPresetsSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsSet']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsSet']
        'multipart/form-data': components['schemas']['QueryPresetsSet']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveQueryPresetsSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
        querypresetsset: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  updateQueryPresetsSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
        querypresetsset: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsSet']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsSet']
        'multipart/form-data': components['schemas']['QueryPresetsSet']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  destroyQueryPresetsSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
        querypresetsset: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateQueryPresetsSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
        querypresetsset: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsSet']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsSet']
        'multipart/form-data': components['schemas']['QueryPresetsSet']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  copyFromQueryPresetsSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
        querypresetsset: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listQueryPresetsSetVersions: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        querypresetsset: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createQueryPresetsSetVersion: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetsset: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsSetVersion']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsSetVersion']
        'multipart/form-data': components['schemas']['QueryPresetsSetVersion']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveQueryPresetsSetVersionDetails: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetsset: string
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  updateQueryPresetsSetVersion: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetsset: string
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsSetVersion']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsSetVersion']
        'multipart/form-data': components['schemas']['QueryPresetsSetVersion']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  destroyQueryPresetsSetVersion: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetsset: string
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateQueryPresetsSetVersion: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetsset: string
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsSetVersion']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsSetVersion']
        'multipart/form-data': components['schemas']['QueryPresetsSetVersion']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listQueryPresetsQualitys: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createQueryPresetsQuality: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsQuality']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsQuality']
        'multipart/form-data': components['schemas']['QueryPresetsQuality']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveQueryPresetsQuality: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsquality: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  updateQueryPresetsQuality: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsquality: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsQuality']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsQuality']
        'multipart/form-data': components['schemas']['QueryPresetsQuality']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  destroyQueryPresetsQuality: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsquality: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateQueryPresetsQuality: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsquality: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsQuality']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsQuality']
        'multipart/form-data': components['schemas']['QueryPresetsQuality']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listQueryPresetsFrequencys: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createQueryPresetsFrequency: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsFrequency']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsFrequency']
        'multipart/form-data': components['schemas']['QueryPresetsFrequency']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveQueryPresetsFrequency: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsfrequency: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  updateQueryPresetsFrequency: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsfrequency: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsFrequency']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsFrequency']
        'multipart/form-data': components['schemas']['QueryPresetsFrequency']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  destroyQueryPresetsFrequency: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsfrequency: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateQueryPresetsFrequency: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsfrequency: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsFrequency']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsFrequency']
        'multipart/form-data': components['schemas']['QueryPresetsFrequency']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listQueryPresetsConsequences: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createQueryPresetsConsequence: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsConsequence']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsConsequence']
        'multipart/form-data': components['schemas']['QueryPresetsConsequence']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveQueryPresetsConsequence: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsconsequence: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  updateQueryPresetsConsequence: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsconsequence: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsConsequence']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsConsequence']
        'multipart/form-data': components['schemas']['QueryPresetsConsequence']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  destroyQueryPresetsConsequence: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsconsequence: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateQueryPresetsConsequence: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsconsequence: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsConsequence']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsConsequence']
        'multipart/form-data': components['schemas']['QueryPresetsConsequence']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listQueryPresetsLocus: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createQueryPresetsLocus: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsLocus']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsLocus']
        'multipart/form-data': components['schemas']['QueryPresetsLocus']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveQueryPresetsLocus: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetslocus: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  updateQueryPresetsLocus: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetslocus: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsLocus']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsLocus']
        'multipart/form-data': components['schemas']['QueryPresetsLocus']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  destroyQueryPresetsLocus: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetslocus: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateQueryPresetsLocus: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetslocus: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsLocus']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsLocus']
        'multipart/form-data': components['schemas']['QueryPresetsLocus']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listQueryPresetsPhenotypePrios: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createQueryPresetsPhenotypePrio: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsPhenotypePrio']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsPhenotypePrio']
        'multipart/form-data': components['schemas']['QueryPresetsPhenotypePrio']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveQueryPresetsPhenotypePrio: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsphenotypeprio: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  updateQueryPresetsPhenotypePrio: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsphenotypeprio: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsPhenotypePrio']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsPhenotypePrio']
        'multipart/form-data': components['schemas']['QueryPresetsPhenotypePrio']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  destroyQueryPresetsPhenotypePrio: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsphenotypeprio: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateQueryPresetsPhenotypePrio: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsphenotypeprio: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsPhenotypePrio']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsPhenotypePrio']
        'multipart/form-data': components['schemas']['QueryPresetsPhenotypePrio']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listQueryPresetsVariantPrios: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createQueryPresetsVariantPrio: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsVariantPrio']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsVariantPrio']
        'multipart/form-data': components['schemas']['QueryPresetsVariantPrio']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveQueryPresetsVariantPrio: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsvariantprio: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  updateQueryPresetsVariantPrio: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsvariantprio: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsVariantPrio']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsVariantPrio']
        'multipart/form-data': components['schemas']['QueryPresetsVariantPrio']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  destroyQueryPresetsVariantPrio: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsvariantprio: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateQueryPresetsVariantPrio: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsvariantprio: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsVariantPrio']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsVariantPrio']
        'multipart/form-data': components['schemas']['QueryPresetsVariantPrio']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listQueryPresetsClinvars: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createQueryPresetsClinvar: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsClinvar']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsClinvar']
        'multipart/form-data': components['schemas']['QueryPresetsClinvar']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveQueryPresetsClinvar: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsclinvar: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  updateQueryPresetsClinvar: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsclinvar: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsClinvar']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsClinvar']
        'multipart/form-data': components['schemas']['QueryPresetsClinvar']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  destroyQueryPresetsClinvar: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsclinvar: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateQueryPresetsClinvar: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetsclinvar: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsClinvar']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsClinvar']
        'multipart/form-data': components['schemas']['QueryPresetsClinvar']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listQueryPresetsColumns: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createQueryPresetsColumns: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsColumns']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsColumns']
        'multipart/form-data': components['schemas']['QueryPresetsColumns']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveQueryPresetsColumns: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetscolumns: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  updateQueryPresetsColumns: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetscolumns: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsColumns']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsColumns']
        'multipart/form-data': components['schemas']['QueryPresetsColumns']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  destroyQueryPresetsColumns: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetscolumns: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateQueryPresetsColumns: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        querypresetscolumns: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryPresetsColumns']
        'application/x-www-form-urlencoded': components['schemas']['QueryPresetsColumns']
        'multipart/form-data': components['schemas']['QueryPresetsColumns']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listPredefinedQuerys: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createPredefinedQuery: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['PredefinedQuery']
        'application/x-www-form-urlencoded': components['schemas']['PredefinedQuery']
        'multipart/form-data': components['schemas']['PredefinedQuery']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrievePredefinedQuery: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        predefinedquery: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  updatePredefinedQuery: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        predefinedquery: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['PredefinedQuery']
        'application/x-www-form-urlencoded': components['schemas']['PredefinedQuery']
        'multipart/form-data': components['schemas']['PredefinedQuery']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  destroyPredefinedQuery: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        predefinedquery: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdatePredefinedQuery: {
    parameters: {
      query?: never
      header?: never
      path: {
        querypresetssetversion: string
        predefinedquery: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['PredefinedQuery']
        'application/x-www-form-urlencoded': components['schemas']['PredefinedQuery']
        'multipart/form-data': components['schemas']['PredefinedQuery']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listQuerySettings: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        session: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createQuerySettingsDetails: {
    parameters: {
      query?: never
      header?: never
      path: {
        session: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QuerySettingsDetails']
        'application/x-www-form-urlencoded': components['schemas']['QuerySettingsDetails']
        'multipart/form-data': components['schemas']['QuerySettingsDetails']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveQuerySettingsDetails: {
    parameters: {
      query?: never
      header?: never
      path: {
        session: string
        querysettings: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  updateQuerySettingsDetails: {
    parameters: {
      query?: never
      header?: never
      path: {
        session: string
        querysettings: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QuerySettingsDetails']
        'application/x-www-form-urlencoded': components['schemas']['QuerySettingsDetails']
        'multipart/form-data': components['schemas']['QuerySettingsDetails']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  destroyQuerySettings: {
    parameters: {
      query?: never
      header?: never
      path: {
        session: string
        querysettings: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateQuerySettingsDetails: {
    parameters: {
      query?: never
      header?: never
      path: {
        session: string
        querysettings: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QuerySettingsDetails']
        'application/x-www-form-urlencoded': components['schemas']['QuerySettingsDetails']
        'multipart/form-data': components['schemas']['QuerySettingsDetails']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listQuerys: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        session: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createQueryDetails: {
    parameters: {
      query?: never
      header?: never
      path: {
        session: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryDetails']
        'application/x-www-form-urlencoded': components['schemas']['QueryDetails']
        'multipart/form-data': components['schemas']['QueryDetails']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveQueryDetails: {
    parameters: {
      query?: never
      header?: never
      path: {
        session: string
        query: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  updateQueryDetails: {
    parameters: {
      query?: never
      header?: never
      path: {
        session: string
        query: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryDetails']
        'application/x-www-form-urlencoded': components['schemas']['QueryDetails']
        'multipart/form-data': components['schemas']['QueryDetails']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  destroyQuery: {
    parameters: {
      query?: never
      header?: never
      path: {
        session: string
        query: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  partialUpdateQueryDetails: {
    parameters: {
      query?: never
      header?: never
      path: {
        session: string
        query: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['QueryDetails']
        'application/x-www-form-urlencoded': components['schemas']['QueryDetails']
        'multipart/form-data': components['schemas']['QueryDetails']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listQueryExecutions: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        query: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveQueryExecutionDetails: {
    parameters: {
      query?: never
      header?: never
      path: {
        query: string
        queryexecution: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listResultSets: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        query: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveResultSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        query: string
        resultset: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  listResultRows: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path: {
        resultset: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  retrieveResultRow: {
    parameters: {
      query?: never
      header?: never
      path: {
        resultset: string
        seqvarresultrow: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
          'text/html': unknown
        }
      }
    }
  }
  createLogin: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  createLogout: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  createLogoutAll: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  createProjectListColumnAjax: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  createProjectListRoleAjax: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  createProjectStarringAjax: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  createProject: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['Project']
        'application/x-www-form-urlencoded': components['schemas']['Project']
        'multipart/form-data': components['schemas']['Project']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': components['schemas']['Project']
        }
      }
    }
  }
  createRoleAssignment: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['RoleAssignment']
        'application/x-www-form-urlencoded': components['schemas']['RoleAssignment']
        'multipart/form-data': components['schemas']['RoleAssignment']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': components['schemas']['RoleAssignment']
        }
      }
    }
  }
  createRoleAssignmentOwnerTransfer: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': unknown
        }
      }
    }
  }
  createProjectInvite: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['ProjectInvite']
        'application/x-www-form-urlencoded': components['schemas']['ProjectInvite']
        'multipart/form-data': components['schemas']['ProjectInvite']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': components['schemas']['ProjectInvite']
        }
      }
    }
  }
  createProjectInviteRevoke: {
    parameters: {
      query?: never
      header?: never
      path: {
        projectinvite: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': unknown
        }
      }
    }
  }
  createProjectInviteResend: {
    parameters: {
      query?: never
      header?: never
      path: {
        projectinvite: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': unknown
        }
      }
    }
  }
  createProjectSettingSet: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': unknown
        }
      }
    }
  }
  createUserSettingSet: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': unknown
        }
      }
    }
  }
  createAdminAlertActiveToggleAjax: {
    parameters: {
      query?: never
      header?: never
      path: {
        adminalert: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  createAppAlertDismissAjax: {
    parameters: {
      query?: never
      header?: never
      path: {
        appalert: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  createAppAlertDismissAjax: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': unknown
        'application/x-www-form-urlencoded': unknown
        'multipart/form-data': unknown
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  createCohortCase: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['CohortCase']
        'application/x-www-form-urlencoded': components['schemas']['CohortCase']
        'multipart/form-data': components['schemas']['CohortCase']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['CohortCase']
        }
      }
    }
  }
  updateSmallVariantComment: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantcomment: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SmallVariantComment']
        'application/x-www-form-urlencoded': components['schemas']['SmallVariantComment']
        'multipart/form-data': components['schemas']['SmallVariantComment']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantComment']
        }
      }
    }
  }
  partialUpdateSmallVariantComment: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantcomment: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SmallVariantComment']
        'application/x-www-form-urlencoded': components['schemas']['SmallVariantComment']
        'multipart/form-data': components['schemas']['SmallVariantComment']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantComment']
        }
      }
    }
  }
  updateSmallVariantFlags: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantflags: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SmallVariantFlags']
        'application/x-www-form-urlencoded': components['schemas']['SmallVariantFlags']
        'multipart/form-data': components['schemas']['SmallVariantFlags']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantFlags']
        }
      }
    }
  }
  partialUpdateSmallVariantFlags: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantflags: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SmallVariantFlags']
        'application/x-www-form-urlencoded': components['schemas']['SmallVariantFlags']
        'multipart/form-data': components['schemas']['SmallVariantFlags']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['SmallVariantFlags']
        }
      }
    }
  }
  updateAcmgCriteriaRating: {
    parameters: {
      query?: never
      header?: never
      path: {
        acmgcriteriarating: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['AcmgCriteriaRating']
        'application/x-www-form-urlencoded': components['schemas']['AcmgCriteriaRating']
        'multipart/form-data': components['schemas']['AcmgCriteriaRating']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['AcmgCriteriaRating']
        }
      }
    }
  }
  partialUpdateAcmgCriteriaRating: {
    parameters: {
      query?: never
      header?: never
      path: {
        acmgcriteriarating: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['AcmgCriteriaRating']
        'application/x-www-form-urlencoded': components['schemas']['AcmgCriteriaRating']
        'multipart/form-data': components['schemas']['AcmgCriteriaRating']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.varfish+json': components['schemas']['AcmgCriteriaRating']
        }
      }
    }
  }
  updateProject: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['Project']
        'application/x-www-form-urlencoded': components['schemas']['Project']
        'multipart/form-data': components['schemas']['Project']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': components['schemas']['Project']
        }
      }
    }
  }
  partialUpdateProject: {
    parameters: {
      query?: never
      header?: never
      path: {
        project: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['Project']
        'application/x-www-form-urlencoded': components['schemas']['Project']
        'multipart/form-data': components['schemas']['Project']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': components['schemas']['Project']
        }
      }
    }
  }
  updateRoleAssignment: {
    parameters: {
      query?: never
      header?: never
      path: {
        roleassignment: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['RoleAssignment']
        'application/x-www-form-urlencoded': components['schemas']['RoleAssignment']
        'multipart/form-data': components['schemas']['RoleAssignment']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': components['schemas']['RoleAssignment']
        }
      }
    }
  }
  partialUpdateRoleAssignment: {
    parameters: {
      query?: never
      header?: never
      path: {
        roleassignment: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['RoleAssignment']
        'application/x-www-form-urlencoded': components['schemas']['RoleAssignment']
        'multipart/form-data': components['schemas']['RoleAssignment']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/vnd.bihealth.sodar-core+json': components['schemas']['RoleAssignment']
        }
      }
    }
  }
  destroySmallVariantComment: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantcomment: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  destroySmallVariantFlags: {
    parameters: {
      query?: never
      header?: never
      path: {
        smallvariantflags: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  destroyAcmgCriteriaRating: {
    parameters: {
      query?: never
      header?: never
      path: {
        acmgcriteriarating: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  destroyRoleAssignment: {
    parameters: {
      query?: never
      header?: never
      path: {
        roleassignment: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  destroyCohortCase: {
    parameters: {
      query?: never
      header?: never
      path: {
        cohortcase: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
}
