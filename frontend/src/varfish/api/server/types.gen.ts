// This file is auto-generated by @hey-api/openapi-ts

/**
 * * `create` - create
 * * `update` - update
 * * `delete` - delete
 */
export type ActionEnum = 'create' | 'update' | 'delete'

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type AnnotationReleaseInfo = {
  readonly genomebuild: string
  readonly table: string
  readonly timestamp: string
  readonly release: string
}

export type BcftoolsStatsAfRecordList = Array<{
  af: number
  snps: number
  ts: number
  tv: number
  indels: number
  repeat_consistent: number
  repeat_inconsistent: number
  na: number
}>

export type BcftoolsStatsDpRecordList = Array<{
  bin: number
  gts: number
  gts_frac: number
  sites: number
  sites_frac: number
}>

export type BcftoolsStatsIddRecordList = Array<{
  length: number
  sites: number
  gts: number
  mean_vaf: number | null
}>

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type BcftoolsStatsMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  sn: BcftoolsStatsSnRecordList
  tstv: BcftoolsStatsTstvRecordList
  sis: BcftoolsStatsSisRecordList
  af: BcftoolsStatsAfRecordList
  qual: BcftoolsStatsQualRecordList
  idd: BcftoolsStatsIddRecordList
  st: BcftoolsStatsStRecordList
  dp: BcftoolsStatsDpRecordList
  readonly date_created: string
  readonly date_modified: string
}

export type BcftoolsStatsQualRecordList = Array<{
  qual: number | null
  snps: number
  ts: number
  tv: number
  indels: number
}>

export type BcftoolsStatsSisRecordList = Array<{
  total: number
  snps: number
  ts: number
  tv: number
  indels: number
  repeat_consistent: number
  repeat_inconsistent: number
}>

export type BcftoolsStatsSnRecordList = Array<{
  key: string
  value: number | string | null
}>

export type BcftoolsStatsStRecordList = Array<{
  type: string
  count: number
}>

export type BcftoolsStatsTstvRecordList = Array<{
  ts: number
  tv: number
  tstv: number
  ts_1st_alt: number
  tv_1st_alt: number
  tstv_1st_alt: number
}>

/**
 * Serializer for ``CaseComments``.
 */
export type CaseComment = {
  readonly sodar_uuid: string
  /**
   * DateTime of creation
   */
  readonly date_created: string
  /**
   * DateTime of last modification
   */
  readonly date_modified: string
  /**
   * Case SODAR UUID
   */
  readonly case: string
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  readonly user: string
  comment: string
}

/**
 * Serializer for the ``CaseImportAction`` model.
 */
export type CaseImportAction = {
  readonly sodar_uuid: string
  /**
   * Project SODAR UUID
   */
  readonly project: string
  state: CaseImportActionStateEnum
  readonly date_created: string
  readonly date_modified: string
  action?: ActionEnum
  payload: unknown
  overwrite_terms?: boolean
}

/**
 * * `draft` - draft
 * * `submitted` - submitted
 */
export type CaseImportActionStateEnum = 'draft' | 'submitted'

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type CasePhenotypeTerms = {
  readonly sodar_uuid: string
  /**
   * DateTime of creation
   */
  readonly date_created: string
  /**
   * DateTime of last modification
   */
  readonly date_modified: string
  /**
   * Case SODAR UUID
   */
  readonly case: string
  /**
   * Individual
   */
  individual: string
  terms: unknown
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type CaseQc = {
  readonly sodar_uuid: string
  /**
   * Case SODAR UUID
   */
  readonly case: string
  readonly dragen_cnvmetrics: Array<DragenCnvMetrics>
  readonly dragen_fragmentlengthhistograms: Array<DragenFragmentLengthHistogram>
  readonly dragen_mappingmetrics: Array<DragenMappingMetrics>
  readonly dragen_ploidyestimationmetrics: Array<DragenPloidyEstimationMetrics>
  readonly dragen_rohmetrics: Array<DragenRohMetrics>
  readonly dragen_vchethomratiometrics: Array<DragenVcHethomRatioMetrics>
  readonly dragen_vcmetrics: Array<DragenVcMetrics>
  readonly dragen_svmetrics: Array<DragenSvMetrics>
  readonly dragen_timemetrics: Array<DragenTimeMetrics>
  readonly dragen_trimmermetrics: Array<DragenTrimmerMetrics>
  readonly dragen_wgscoveragemetrics: Array<DragenWgsCoverageMetrics>
  readonly dragen_wgscontigmeancovmetrics: Array<DragenWgsContigMeanCovMetrics>
  readonly dragen_wgsoverallmeancov: Array<DragenWgsOverallMeanCov>
  readonly dragen_wgsfinehist: Array<DragenWgsFineHist>
  readonly dragen_wgshist: Array<DragenWgsHist>
  readonly dragen_regioncoveragemetrics: Array<DragenRegionCoverageMetrics>
  readonly dragen_regionfinehist: Array<DragenRegionFineHist>
  readonly dragen_regionhist: Array<DragenRegionHist>
  readonly dragen_regionoverallmeancov: Array<DragenRegionOverallMeanCov>
  readonly bcftools_statsmetrics: Array<BcftoolsStatsMetrics>
  readonly samtools_statsmainmetrics: Array<SamtoolsStatsMainMetrics>
  readonly samtools_statssupplementarymetrics: Array<SamtoolsStatsSupplementaryMetrics>
  readonly samtools_flagstatmetrics: Array<SamtoolsFlagstatMetrics>
  readonly samtools_idxstatsmetrics: Array<SamtoolsIdxstatsMetrics>
  readonly cramino_metrics: Array<CraminoMetrics>
  readonly ngsbits_mappingqcmetrics: Array<NgsbitsMappingqcMetrics>
  readonly date_created: string
  readonly date_modified: string
  state?: CaseQcStateEnum
}

/**
 * * `DRAFT` - DRAFT
 * * `ACTIVE` - ACTIVE
 */
export type CaseQcStateEnum = 'DRAFT' | 'ACTIVE'

/**
 * Serializer for the ``Case`` model.
 *
 * In contrast to the old (legacy) ``CaseSerializer`` from ``variants.serializers.case``, this class does not
 * perform serialization of nested attributes and thus does not trigger a large query cascade.
 */
export type CaseSerializerNg = {
  readonly sodar_uuid: string
  /**
   * Project SODAR UUID
   */
  readonly project: string
  /**
   * Cohort SODAR UUID
   */
  readonly presetset: string
  readonly sex_errors: {
    [key: string]: Array<string>
  }
  readonly smallvariantqueryresultset: {
    [key: string]: number | string | null
  }
  readonly svqueryresultset: {
    [key: string]: number | string | null
  }
  /**
   * Obtain the latest CaseQC for this in active state and serialize it.
   *
   * If there is no such record then return ``None``.
   */
  readonly caseqc: {
    [key: string]: number | string | null
  } | null
  readonly release: string | null
  name: string
  index: string
  pedigree: unknown
  notes?: string | null
  status?: CaseStatusEnum
  tags?: Array<string> | null
  /**
   * DateTime of creation
   */
  readonly date_created: string
  /**
   * DateTime of last modification
   */
  readonly date_modified: string
  case_version?: number
  readonly state: CaseSerializerNgStateEnum | NullEnum | null
  /**
   * Number of small variants, empty if no small variants have been imported
   */
  readonly num_small_vars: number | null
  /**
   * Number of structural variants, empty if no structural variants have been imported
   */
  readonly num_svs: number | null
}

/**
 * * `importing` - importing
 * * `updating` - updating
 * * `active` - active
 * * `deleting` - deleting
 */
export type CaseSerializerNgStateEnum =
  | 'importing'
  | 'updating'
  | 'active'
  | 'deleting'

/**
 * * `initial` - initial
 * * `active` - active
 * * `closed-unsolved` - closed as unsolved
 * * `closed-uncertain` - closed as uncertain
 * * `closed-solved` - closed as solved
 */
export type CaseStatusEnum =
  | 'initial'
  | 'active'
  | 'closed-unsolved'
  | 'closed-uncertain'
  | 'closed-solved'

export type CraminoChromNormalizedCountsRecordList = Array<{
  chrom_name: string
  normalized_counts: number
}>

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type CraminoMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  summary: CraminoSummaryRecordList
  chrom_counts: CraminoChromNormalizedCountsRecordList
  readonly date_created: string
  readonly date_modified: string
  sample: string
}

export type CraminoSummaryRecordList = Array<{
  key: string
  value: number | string
}>

/**
 * Detailed alignment counts
 */
export type DetailedAlignmentCounts = {
  primary: number
  secondary: number
  supplementary: number
  duplicates: number
  mapped: number
  properly_paired: number
  with_itself_and_mate_mapped: number
  singletons: number
  with_mate_mapped_to_different_chr: number
  with_mate_mapped_to_different_chr_mapq: number
  mismatch_rate: number
  mapq: Array<Array<number>>
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenCnvMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenFragmentLengthHistogram = {
  readonly sodar_uuid: string
  readonly caseqc: string
  readonly date_created: string
  readonly date_modified: string
  sample: string
  keys: Array<number>
  values: Array<number>
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenMappingMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
  sample: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenPloidyEstimationMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
  sample: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenRegionCoverageMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
  sample: string
  region_name: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenRegionFineHist = {
  readonly sodar_uuid: string
  readonly caseqc: string
  readonly date_created: string
  readonly date_modified: string
  sample: string
  keys: Array<number>
  values: Array<number>
  region_name: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenRegionHist = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
  sample: string
  region_name: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenRegionOverallMeanCov = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
  sample: string
  region_name: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenRohMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
  sample: string
}

export type DragenStyleCoverageList = Array<{
  contig_name: string
  contig_len: number
  cov: number
}>

export type DragenStyleMetricList = Array<{
  section: string | null
  entry: string | null
  name: string | null
  value: number | string | null
  value_float?: number | null
}>

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenSvMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenTimeMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
  sample: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenTrimmerMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
  sample: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenVcHethomRatioMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenVcMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenWgsContigMeanCovMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleCoverageList
  readonly date_created: string
  readonly date_modified: string
  sample: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenWgsCoverageMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
  sample: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenWgsFineHist = {
  readonly sodar_uuid: string
  readonly caseqc: string
  readonly date_created: string
  readonly date_modified: string
  sample: string
  keys: Array<number>
  values: Array<number>
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenWgsHist = {
  readonly sodar_uuid: string
  readonly caseqc: string
  readonly date_created: string
  readonly date_modified: string
  sample: string
  keys: Array<string>
  values: Array<number>
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type DragenWgsOverallMeanCov = {
  readonly sodar_uuid: string
  readonly caseqc: string
  metrics: DragenStyleMetricList
  readonly date_created: string
  readonly date_modified: string
  sample: string
}

/**
 * Serializer for ``EnrichmentKit``.
 */
export type EnrichmentKit = {
  readonly sodar_uuid: string
  /**
   * DateTime of creation
   */
  readonly date_created: string
  /**
   * DateTime of last modification
   */
  readonly date_modified: string
  /**
   * Identifier of the enrichment kit, e.g., 'agilent-all-exon-v4'.
   */
  identifier: string
  /**
   * Title of the enrichment kit
   */
  title: string
  /**
   * Optional description of the enrichment kit
   */
  description?: string | null
}

/**
 * Serializer that serializes ``GenePanel``.
 */
export type GenePanel = {
  /**
   * Identifier of the gene panel, e.g., 'osteoporosis.basic' or 'osteoporosis.extended'
   */
  readonly identifier: string
  /**
   * State of teh gene panel version
   *
   * * `draft` - draft
   * * `active` - active
   * * `retired` - retired
   */
  readonly state: GenePanelStateEnum
  /**
   * Major version of the gene panel (by identifier)
   */
  readonly version_major: number
  /**
   * Minor version of the gene panel (by identifier)
   */
  readonly version_minor: number
  /**
   * Title of the gene panel, only used for informative purposes
   */
  readonly title: string
  /**
   * Description of the panel
   */
  readonly description: string | null
}

/**
 * Serializer that serializes ``GenePanelCategory``.
 */
export type GenePanelCategory = {
  /**
   * Title of the category
   */
  readonly title: string
  /**
   * Optional description of the category
   */
  readonly description: string | null
  readonly genepanel_set: GenePanel
}

/**
 * * `draft` - draft
 * * `active` - active
 * * `retired` - retired
 */
export type GenePanelStateEnum = 'draft' | 'active' | 'retired'

/**
 * * `grch37` - GRCh37
 * * `grch38` - GRCh38
 */
export type GenomeReleaseEnum = 'grch37' | 'grch38'

/**
 * Per-sample QC stats for insert sizes.
 */
export type InsertSizeStats = {
  insert_size_mean: number
  insert_size_median: number | null
  insert_size_stddev: number
  insert_size_histogram: Array<Array<number>>
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type NgsbitsMappingqcMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  records: NgsbitsMappingqcRecordList
  readonly date_created: string
  readonly date_modified: string
  sample: string
  region_name: string
}

export type NgsbitsMappingqcRecordList = Array<{
  key: string
  value: number | string | null
}>

export type NullEnum = unknown

export type PaginatedCaseImportActionList = {
  count?: number
  next?: string | null
  previous?: string | null
  results?: Array<CaseImportAction>
}

export type PaginatedCaseSerializerNgList = {
  count?: number
  next?: string | null
  previous?: string | null
  results?: Array<CaseSerializerNg>
}

/**
 * Serializer for the ``CaseImportAction`` model.
 */
export type PatchedCaseImportAction = {
  readonly sodar_uuid?: string
  /**
   * Project SODAR UUID
   */
  readonly project?: string
  state?: CaseImportActionStateEnum
  readonly date_created?: string
  readonly date_modified?: string
  action?: ActionEnum
  payload?: unknown
  overwrite_terms?: boolean
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type PatchedCasePhenotypeTerms = {
  readonly sodar_uuid?: string
  /**
   * DateTime of creation
   */
  readonly date_created?: string
  /**
   * DateTime of last modification
   */
  readonly date_modified?: string
  /**
   * Case SODAR UUID
   */
  readonly case?: string
  /**
   * Individual
   */
  individual?: string
  terms?: unknown
}

/**
 * Serializer for the ``Case`` model.
 *
 * In contrast to the old (legacy) ``CaseSerializer`` from ``variants.serializers.case``, this class does not
 * perform serialization of nested attributes and thus does not trigger a large query cascade.
 */
export type PatchedCaseSerializerNg = {
  readonly sodar_uuid?: string
  /**
   * Project SODAR UUID
   */
  readonly project?: string
  /**
   * Cohort SODAR UUID
   */
  readonly presetset?: string
  readonly sex_errors?: {
    [key: string]: Array<string>
  }
  readonly smallvariantqueryresultset?: {
    [key: string]: number | string | null
  }
  readonly svqueryresultset?: {
    [key: string]: number | string | null
  }
  /**
   * Obtain the latest CaseQC for this in active state and serialize it.
   *
   * If there is no such record then return ``None``.
   */
  readonly caseqc?: {
    [key: string]: number | string | null
  } | null
  readonly release?: string | null
  name?: string
  index?: string
  pedigree?: unknown
  notes?: string | null
  status?: CaseStatusEnum
  tags?: Array<string> | null
  /**
   * DateTime of creation
   */
  readonly date_created?: string
  /**
   * DateTime of last modification
   */
  readonly date_modified?: string
  case_version?: number
  readonly state?: CaseSerializerNgStateEnum | NullEnum | null
  /**
   * Number of small variants, empty if no small variants have been imported
   */
  readonly num_small_vars?: number | null
  /**
   * Number of structural variants, empty if no structural variants have been imported
   */
  readonly num_svs?: number | null
}

/**
 * Serializer for ``EnrichmentKit``.
 */
export type PatchedEnrichmentKit = {
  readonly sodar_uuid?: string
  /**
   * DateTime of creation
   */
  readonly date_created?: string
  /**
   * DateTime of last modification
   */
  readonly date_modified?: string
  /**
   * Identifier of the enrichment kit, e.g., 'agilent-all-exon-v4'.
   */
  identifier?: string
  /**
   * Title of the enrichment kit
   */
  title?: string
  /**
   * Optional description of the enrichment kit
   */
  description?: string | null
}

/**
 * Serializer for ``TargetBedFile``.
 */
export type PatchedTargetBedFile = {
  readonly sodar_uuid?: string
  /**
   * DateTime of creation
   */
  readonly date_created?: string
  /**
   * DateTime of last modification
   */
  readonly date_modified?: string
  /**
   * Record SODAR UUID
   */
  readonly enrichmentkit?: string
  /**
   * The file's URI.
   */
  file_uri?: string
  /**
   * The file's reference genome.
   *
   * * `grch37` - GRCh37
   * * `grch38` - GRCh38
   */
  genome_release?: GenomeReleaseEnum
}

/**
 * Per-region QC stats for alignment.
 */
export type RegionCoverageStats = {
  region_name: string
  mean_rd: number
  min_rd_fraction: Array<Array<number>>
}

/**
 * Per-region sequence variant statistics.
 */
export type RegionVariantStats = {
  region_name: string
  snv_count: number
  indel_count: number
  multiallelic_count: number
  transition_count: number
  transversion_count: number
  tstv_ratio: number
}

export type SampleAlignmentStatsList = Array<{
  sample: string
  detailed_counts: DetailedAlignmentCounts
  per_chromosome_counts: Array<Array<string | number>>
  insert_size_stats: InsertSizeStats
  region_coverage_stats: Array<RegionCoverageStats>
}>

export type SampleReadStatsList = Array<{
  sample: string
  read_length_n50: number
  read_length_histogram: Array<Array<number>>
  total_reads: number
  total_yield: number
  fragment_first: number | null
  fragment_last: number | null
}>

export type SampleSeqvarStatsList = Array<{
  sample: string
  genome_wide: RegionVariantStats
  per_region: Array<RegionVariantStats>
}>

export type SampleStrucvarStatsList = Array<{
  sample: string
  deletion_count: number
  duplication_count: number
  insertion_count: number
  inversion_count: number
  breakend_count: number
}>

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type SamtoolsFlagstatMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  qc_pass: SchemaField
  qc_fail: SchemaField
  readonly date_created: string
  readonly date_modified: string
  sample: string
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type SamtoolsIdxstatsMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  records: SamtoolsIdxstatsRecordList
  readonly date_created: string
  readonly date_modified: string
  sample: string
}

export type SamtoolsIdxstatsRecordList = Array<{
  contig_name: string
  contig_len: number
  mapped: number
  unmapped: number
}>

export type SamtoolsStatsBasePercentagesRecordList = Array<{
  cycle: number
  percentages: Array<number>
}>

export type SamtoolsStatsChkRecordList = Array<{
  read_names_crc32: string
  sequences_crc32: string
  qualities_crc32: string
}>

export type SamtoolsStatsFqRecordList = Array<{
  cycle: number
  counts: Array<number>
}>

export type SamtoolsStatsGcRecordList = Array<{
  gc_content: number
  count: number
}>

export type SamtoolsStatsGcdRecordList = Array<{
  gc_content: number
  unique_seq_percentiles: number
  dp_percentile_10: number
  dp_percentile_25: number
  dp_percentile_50: number
  dp_percentile_75: number
  dp_percentile_90: number
}>

export type SamtoolsStatsHistoRecordList = Array<{
  value: number
  count: number
}>

export type SamtoolsStatsIcRecordList = Array<{
  cycle: number
  ins_fwd: number
  dels_fwd: number
  ins_rev: number
  dels_rev: number
}>

export type SamtoolsStatsIdRecordList = Array<{
  length: number
  ins: number
  dels: number
}>

export type SamtoolsStatsIsRecordList = Array<{
  insert_size: number
  pairs_total: number
  pairs_inward: number
  pairs_outward: number
  pairs_other: number
}>

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type SamtoolsStatsMainMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  sn: SamtoolsStatsSnRecordList
  chk: SamtoolsStatsChkRecordList
  isize: SamtoolsStatsIsRecordList
  cov: SamtoolsStatsHistoRecordList
  gcd: SamtoolsStatsGcdRecordList
  frl: SamtoolsStatsHistoRecordList
  lrl: SamtoolsStatsHistoRecordList
  idd: SamtoolsStatsIdRecordList
  ffq: SamtoolsStatsFqRecordList
  lfq: SamtoolsStatsFqRecordList
  fbc: SamtoolsStatsBasePercentagesRecordList
  lbc: SamtoolsStatsBasePercentagesRecordList
  readonly date_created: string
  readonly date_modified: string
  sample: string
}

export type SamtoolsStatsSnRecordList = Array<{
  key: string
  value: number | string | null
}>

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type SamtoolsStatsSupplementaryMetrics = {
  readonly sodar_uuid: string
  readonly caseqc: string
  gcf: SamtoolsStatsGcRecordList
  gcl: SamtoolsStatsGcRecordList
  gcc: SamtoolsStatsBasePercentagesRecordList
  gct: SamtoolsStatsBasePercentagesRecordList
  rl: SamtoolsStatsHistoRecordList
  mapq: SamtoolsStatsHistoRecordList
  ic: SamtoolsStatsIcRecordList
  readonly date_created: string
  readonly date_modified: string
  sample: string
}

/**
 * A record for the ``flagstat`` lines in ``samtools stats`` output.
 */
export type SchemaField = {
  total?: number
  primary?: number
  secondary?: number
  supplementary?: number
  duplicates?: number
  duplicates_primary?: number
  mapped?: number
  mapped_primary?: number
  paired?: number
  fragment_first?: number
  fragment_last?: number
  properly_paired?: number
  with_itself_and_mate_mapped?: number
  singletons?: number
  with_mate_mapped_to_different_chr?: number
  with_mate_mapped_to_different_chr_mapq5?: number
}

/**
 * Base serializer for any SODAR model with a sodar_uuid field
 */
export type SvAnnotationReleaseInfo = {
  readonly genomebuild: string
  readonly table: string
  readonly timestamp: string
  readonly release: string
}

/**
 * Serializer for ``TargetBedFile``.
 */
export type TargetBedFile = {
  readonly sodar_uuid: string
  /**
   * DateTime of creation
   */
  readonly date_created: string
  /**
   * DateTime of last modification
   */
  readonly date_modified: string
  /**
   * Record SODAR UUID
   */
  readonly enrichmentkit: string
  /**
   * The file's URI.
   */
  file_uri: string
  /**
   * The file's reference genome.
   *
   * * `grch37` - GRCh37
   * * `grch38` - GRCh38
   */
  genome_release?: GenomeReleaseEnum
}

/**
 * Serializer for common-denominator stats objects
 */
export type VarfishStats = {
  samples: strList
  readstats: SampleReadStatsList
  alignmentstats: SampleAlignmentStatsList
  seqvarstats: SampleSeqvarStatsList
  strucvarstats: SampleStrucvarStatsList
}

export type strList = Array<string>

export type CasesImportApiCaseImportActionListCreateListData = {
  path: {
    project: string
  }
  query?: {
    /**
     * A page number within the paginated result set.
     */
    page?: number
    /**
     * Number of results to return per page.
     */
    page_size?: number
  }
}

export type CasesImportApiCaseImportActionListCreateListResponse =
  PaginatedCaseImportActionList

export type CasesImportApiCaseImportActionListCreateListError = unknown

export type CasesImportApiCaseImportActionListCreateCreateData = {
  body: CaseImportAction
  path: {
    project: string
  }
}

export type CasesImportApiCaseImportActionListCreateCreateResponse =
  CaseImportAction

export type CasesImportApiCaseImportActionListCreateCreateError = unknown

export type CasesImportApiCaseImportActionRetrieveUpdateDestroyRetrieveData = {
  path: {
    caseimportaction: string
  }
}

export type CasesImportApiCaseImportActionRetrieveUpdateDestroyRetrieveResponse =
  CaseImportAction

export type CasesImportApiCaseImportActionRetrieveUpdateDestroyRetrieveError =
  unknown

export type CasesImportApiCaseImportActionRetrieveUpdateDestroyUpdateData = {
  body: CaseImportAction
  path: {
    caseimportaction: string
  }
}

export type CasesImportApiCaseImportActionRetrieveUpdateDestroyUpdateResponse =
  CaseImportAction

export type CasesImportApiCaseImportActionRetrieveUpdateDestroyUpdateError =
  unknown

export type CasesImportApiCaseImportActionRetrieveUpdateDestroyPartialUpdateData =
  {
    body?: PatchedCaseImportAction
    path: {
      caseimportaction: string
    }
  }

export type CasesImportApiCaseImportActionRetrieveUpdateDestroyPartialUpdateResponse =
  CaseImportAction

export type CasesImportApiCaseImportActionRetrieveUpdateDestroyPartialUpdateError =
  unknown

export type CasesImportApiCaseImportActionRetrieveUpdateDestroyDestroyData = {
  path: {
    caseimportaction: string
  }
}

export type CasesImportApiCaseImportActionRetrieveUpdateDestroyDestroyResponse =
  void

export type CasesImportApiCaseImportActionRetrieveUpdateDestroyDestroyError =
  unknown

export type CasesQcApiCaseqcRetrieveRetrieveData = {
  path: {
    case: string
  }
}

export type CasesQcApiCaseqcRetrieveRetrieveResponse = CaseQc

export type CasesQcApiCaseqcRetrieveRetrieveError = unknown

export type CasesQcApiVarfishstatsRetrieveRetrieveData = {
  path: {
    case: string
  }
}

export type CasesQcApiVarfishstatsRetrieveRetrieveResponse = VarfishStats

export type CasesQcApiVarfishstatsRetrieveRetrieveError = unknown

export type CasesApiAnnotationReleaseInfoListListData = {
  path: {
    case: string
  }
}

export type CasesApiAnnotationReleaseInfoListListResponse =
  Array<AnnotationReleaseInfo>

export type CasesApiAnnotationReleaseInfoListListError = unknown

export type CasesApiCaseCommentListCreateListData = {
  path: {
    case: string
  }
}

export type CasesApiCaseCommentListCreateListResponse = Array<CaseComment>

export type CasesApiCaseCommentListCreateListError = unknown

export type CasesApiCaseCommentListCreateCreateData = {
  body: CaseComment
  path: {
    case: string
  }
}

export type CasesApiCaseCommentListCreateCreateResponse = CaseComment

export type CasesApiCaseCommentListCreateCreateError = unknown

export type CasesApiCasePhenotypeTermsListCreateListData = {
  path: {
    case: string
  }
}

export type CasesApiCasePhenotypeTermsListCreateListResponse =
  Array<CasePhenotypeTerms>

export type CasesApiCasePhenotypeTermsListCreateListError = unknown

export type CasesApiCasePhenotypeTermsListCreateCreateData = {
  body: CasePhenotypeTerms
  path: {
    case: string
  }
}

export type CasesApiCasePhenotypeTermsListCreateCreateResponse =
  CasePhenotypeTerms

export type CasesApiCasePhenotypeTermsListCreateCreateError = unknown

export type CasesApiCasePhenotypeTermsRetrieveUpdateDestroyRetrieveData = {
  path: {
    casephenotypeterms: string
  }
}

export type CasesApiCasePhenotypeTermsRetrieveUpdateDestroyRetrieveResponse =
  CasePhenotypeTerms

export type CasesApiCasePhenotypeTermsRetrieveUpdateDestroyRetrieveError =
  unknown

export type CasesApiCasePhenotypeTermsRetrieveUpdateDestroyUpdateData = {
  body: CasePhenotypeTerms
  path: {
    casephenotypeterms: string
  }
}

export type CasesApiCasePhenotypeTermsRetrieveUpdateDestroyUpdateResponse =
  CasePhenotypeTerms

export type CasesApiCasePhenotypeTermsRetrieveUpdateDestroyUpdateError = unknown

export type CasesApiCasePhenotypeTermsRetrieveUpdateDestroyPartialUpdateData = {
  body?: PatchedCasePhenotypeTerms
  path: {
    casephenotypeterms: string
  }
}

export type CasesApiCasePhenotypeTermsRetrieveUpdateDestroyPartialUpdateResponse =
  CasePhenotypeTerms

export type CasesApiCasePhenotypeTermsRetrieveUpdateDestroyPartialUpdateError =
  unknown

export type CasesApiCasePhenotypeTermsRetrieveUpdateDestroyDestroyData = {
  path: {
    casephenotypeterms: string
  }
}

export type CasesApiCasePhenotypeTermsRetrieveUpdateDestroyDestroyResponse =
  void

export type CasesApiCasePhenotypeTermsRetrieveUpdateDestroyDestroyError =
  unknown

export type CasesApiCaseListListData = {
  path: {
    project: string
  }
  query?: {
    /**
     * A page number within the paginated result set.
     */
    page?: number
    /**
     * Number of results to return per page.
     */
    page_size?: number
  }
}

export type CasesApiCaseListListResponse = PaginatedCaseSerializerNgList

export type CasesApiCaseListListError = unknown

export type CasesApiCaseRetrieveUpdateDestroyRetrieveData = {
  path: {
    case: string
  }
}

export type CasesApiCaseRetrieveUpdateDestroyRetrieveResponse = CaseSerializerNg

export type CasesApiCaseRetrieveUpdateDestroyRetrieveError = unknown

export type CasesApiCaseRetrieveUpdateDestroyUpdateData = {
  body: CaseSerializerNg
  path: {
    case: string
  }
}

export type CasesApiCaseRetrieveUpdateDestroyUpdateResponse = CaseSerializerNg

export type CasesApiCaseRetrieveUpdateDestroyUpdateError = unknown

export type CasesApiCaseRetrieveUpdateDestroyPartialUpdateData = {
  body?: PatchedCaseSerializerNg
  path: {
    case: string
  }
}

export type CasesApiCaseRetrieveUpdateDestroyPartialUpdateResponse =
  CaseSerializerNg

export type CasesApiCaseRetrieveUpdateDestroyPartialUpdateError = unknown

export type CasesApiCaseRetrieveUpdateDestroyDestroyData = {
  path: {
    case: string
  }
}

export type CasesApiCaseRetrieveUpdateDestroyDestroyResponse = void

export type CasesApiCaseRetrieveUpdateDestroyDestroyError = unknown

export type CasesApiSvAnnotationReleaseInfoListListData = {
  path: {
    case: string
  }
}

export type CasesApiSvAnnotationReleaseInfoListListResponse =
  Array<SvAnnotationReleaseInfo>

export type CasesApiSvAnnotationReleaseInfoListListError = unknown

export type GenepanelsApiGenepanelCategoryListListResponse =
  Array<GenePanelCategory>

export type GenepanelsApiGenepanelCategoryListListError = unknown

export type GenepanelsApiLookupGenepanelRetrieveResponse = GenePanel

export type GenepanelsApiLookupGenepanelRetrieveError = unknown

export type SeqmetaApiEnrichmentkitListCreateListResponse = Array<EnrichmentKit>

export type SeqmetaApiEnrichmentkitListCreateListError = unknown

export type SeqmetaApiEnrichmentkitListCreateCreateData = {
  body: EnrichmentKit
}

export type SeqmetaApiEnrichmentkitListCreateCreateResponse = EnrichmentKit

export type SeqmetaApiEnrichmentkitListCreateCreateError = unknown

export type SeqmetaApiEnrichmentkitRetrieveUpdateDestroyRetrieveData = {
  path: {
    enrichmentkit: string
  }
}

export type SeqmetaApiEnrichmentkitRetrieveUpdateDestroyRetrieveResponse =
  EnrichmentKit

export type SeqmetaApiEnrichmentkitRetrieveUpdateDestroyRetrieveError = unknown

export type SeqmetaApiEnrichmentkitRetrieveUpdateDestroyUpdateData = {
  body: EnrichmentKit
  path: {
    enrichmentkit: string
  }
}

export type SeqmetaApiEnrichmentkitRetrieveUpdateDestroyUpdateResponse =
  EnrichmentKit

export type SeqmetaApiEnrichmentkitRetrieveUpdateDestroyUpdateError = unknown

export type SeqmetaApiEnrichmentkitRetrieveUpdateDestroyPartialUpdateData = {
  body?: PatchedEnrichmentKit
  path: {
    enrichmentkit: string
  }
}

export type SeqmetaApiEnrichmentkitRetrieveUpdateDestroyPartialUpdateResponse =
  EnrichmentKit

export type SeqmetaApiEnrichmentkitRetrieveUpdateDestroyPartialUpdateError =
  unknown

export type SeqmetaApiEnrichmentkitRetrieveUpdateDestroyDestroyData = {
  path: {
    enrichmentkit: string
  }
}

export type SeqmetaApiEnrichmentkitRetrieveUpdateDestroyDestroyResponse = void

export type SeqmetaApiEnrichmentkitRetrieveUpdateDestroyDestroyError = unknown

export type SeqmetaApiTargetbedfileListCreateListData = {
  path: {
    enrichmentkit: string
  }
}

export type SeqmetaApiTargetbedfileListCreateListResponse = Array<TargetBedFile>

export type SeqmetaApiTargetbedfileListCreateListError = unknown

export type SeqmetaApiTargetbedfileListCreateCreateData = {
  body: TargetBedFile
  path: {
    enrichmentkit: string
  }
}

export type SeqmetaApiTargetbedfileListCreateCreateResponse = TargetBedFile

export type SeqmetaApiTargetbedfileListCreateCreateError = unknown

export type SeqmetaApiTargetbedfileRetrieveUpdateDestroyRetrieveData = {
  path: {
    targetbedfile: string
  }
}

export type SeqmetaApiTargetbedfileRetrieveUpdateDestroyRetrieveResponse =
  TargetBedFile

export type SeqmetaApiTargetbedfileRetrieveUpdateDestroyRetrieveError = unknown

export type SeqmetaApiTargetbedfileRetrieveUpdateDestroyUpdateData = {
  body: TargetBedFile
  path: {
    targetbedfile: string
  }
}

export type SeqmetaApiTargetbedfileRetrieveUpdateDestroyUpdateResponse =
  TargetBedFile

export type SeqmetaApiTargetbedfileRetrieveUpdateDestroyUpdateError = unknown

export type SeqmetaApiTargetbedfileRetrieveUpdateDestroyPartialUpdateData = {
  body?: PatchedTargetBedFile
  path: {
    targetbedfile: string
  }
}

export type SeqmetaApiTargetbedfileRetrieveUpdateDestroyPartialUpdateResponse =
  TargetBedFile

export type SeqmetaApiTargetbedfileRetrieveUpdateDestroyPartialUpdateError =
  unknown

export type SeqmetaApiTargetbedfileRetrieveUpdateDestroyDestroyData = {
  path: {
    targetbedfile: string
  }
}

export type SeqmetaApiTargetbedfileRetrieveUpdateDestroyDestroyResponse = void

export type SeqmetaApiTargetbedfileRetrieveUpdateDestroyDestroyError = unknown

export type $OpenApiTs = {
  '/cases-import/api/case-import-action/list-create/{project}/': {
    get: {
      req: CasesImportApiCaseImportActionListCreateListData
      res: {
        '200': PaginatedCaseImportActionList
      }
    }
    post: {
      req: CasesImportApiCaseImportActionListCreateCreateData
      res: {
        '201': CaseImportAction
      }
    }
  }
  '/cases-import/api/case-import-action/retrieve-update-destroy/{caseimportaction}/': {
    get: {
      req: CasesImportApiCaseImportActionRetrieveUpdateDestroyRetrieveData
      res: {
        '200': CaseImportAction
      }
    }
    put: {
      req: CasesImportApiCaseImportActionRetrieveUpdateDestroyUpdateData
      res: {
        '200': CaseImportAction
      }
    }
    patch: {
      req: CasesImportApiCaseImportActionRetrieveUpdateDestroyPartialUpdateData
      res: {
        '200': CaseImportAction
      }
    }
    delete: {
      req: CasesImportApiCaseImportActionRetrieveUpdateDestroyDestroyData
      res: {
        /**
         * No response body
         */
        '204': void
      }
    }
  }
  '/cases-qc/api/caseqc/retrieve/{case}/': {
    get: {
      req: CasesQcApiCaseqcRetrieveRetrieveData
      res: {
        '200': CaseQc
      }
    }
  }
  '/cases-qc/api/varfishstats/retrieve/{case}/': {
    get: {
      req: CasesQcApiVarfishstatsRetrieveRetrieveData
      res: {
        '200': VarfishStats
      }
    }
  }
  '/cases/api/annotation-release-info/list/{case}/': {
    get: {
      req: CasesApiAnnotationReleaseInfoListListData
      res: {
        '200': Array<AnnotationReleaseInfo>
      }
    }
  }
  '/cases/api/case-comment/list-create/{case}/': {
    get: {
      req: CasesApiCaseCommentListCreateListData
      res: {
        '200': Array<CaseComment>
      }
    }
    post: {
      req: CasesApiCaseCommentListCreateCreateData
      res: {
        '201': CaseComment
      }
    }
  }
  '/cases/api/case-phenotype-terms/list-create/{case}/': {
    get: {
      req: CasesApiCasePhenotypeTermsListCreateListData
      res: {
        '200': Array<CasePhenotypeTerms>
      }
    }
    post: {
      req: CasesApiCasePhenotypeTermsListCreateCreateData
      res: {
        '201': CasePhenotypeTerms
      }
    }
  }
  '/cases/api/case-phenotype-terms/retrieve-update-destroy/{casephenotypeterms}/': {
    get: {
      req: CasesApiCasePhenotypeTermsRetrieveUpdateDestroyRetrieveData
      res: {
        '200': CasePhenotypeTerms
      }
    }
    put: {
      req: CasesApiCasePhenotypeTermsRetrieveUpdateDestroyUpdateData
      res: {
        '200': CasePhenotypeTerms
      }
    }
    patch: {
      req: CasesApiCasePhenotypeTermsRetrieveUpdateDestroyPartialUpdateData
      res: {
        '200': CasePhenotypeTerms
      }
    }
    delete: {
      req: CasesApiCasePhenotypeTermsRetrieveUpdateDestroyDestroyData
      res: {
        /**
         * No response body
         */
        '204': void
      }
    }
  }
  '/cases/api/case/list/{project}/': {
    get: {
      req: CasesApiCaseListListData
      res: {
        '200': PaginatedCaseSerializerNgList
      }
    }
  }
  '/cases/api/case/retrieve-update-destroy/{case}/': {
    get: {
      req: CasesApiCaseRetrieveUpdateDestroyRetrieveData
      res: {
        '200': CaseSerializerNg
      }
    }
    put: {
      req: CasesApiCaseRetrieveUpdateDestroyUpdateData
      res: {
        '200': CaseSerializerNg
      }
    }
    patch: {
      req: CasesApiCaseRetrieveUpdateDestroyPartialUpdateData
      res: {
        '200': CaseSerializerNg
      }
    }
    delete: {
      req: CasesApiCaseRetrieveUpdateDestroyDestroyData
      res: {
        /**
         * No response body
         */
        '204': void
      }
    }
  }
  '/cases/api/sv-annotation-release-info/list/{case}/': {
    get: {
      req: CasesApiSvAnnotationReleaseInfoListListData
      res: {
        '200': Array<SvAnnotationReleaseInfo>
      }
    }
  }
  '/genepanels/api/genepanel-category/list/': {
    get: {
      res: {
        '200': Array<GenePanelCategory>
      }
    }
  }
  '/genepanels/api/lookup-genepanel/': {
    get: {
      res: {
        '200': GenePanel
      }
    }
  }
  '/seqmeta/api/enrichmentkit/list-create/': {
    get: {
      res: {
        '200': Array<EnrichmentKit>
      }
    }
    post: {
      req: SeqmetaApiEnrichmentkitListCreateCreateData
      res: {
        '201': EnrichmentKit
      }
    }
  }
  '/seqmeta/api/enrichmentkit/retrieve-update-destroy/{enrichmentkit}/': {
    get: {
      req: SeqmetaApiEnrichmentkitRetrieveUpdateDestroyRetrieveData
      res: {
        '200': EnrichmentKit
      }
    }
    put: {
      req: SeqmetaApiEnrichmentkitRetrieveUpdateDestroyUpdateData
      res: {
        '200': EnrichmentKit
      }
    }
    patch: {
      req: SeqmetaApiEnrichmentkitRetrieveUpdateDestroyPartialUpdateData
      res: {
        '200': EnrichmentKit
      }
    }
    delete: {
      req: SeqmetaApiEnrichmentkitRetrieveUpdateDestroyDestroyData
      res: {
        /**
         * No response body
         */
        '204': void
      }
    }
  }
  '/seqmeta/api/targetbedfile/list-create/{enrichmentkit}/': {
    get: {
      req: SeqmetaApiTargetbedfileListCreateListData
      res: {
        '200': Array<TargetBedFile>
      }
    }
    post: {
      req: SeqmetaApiTargetbedfileListCreateCreateData
      res: {
        '201': TargetBedFile
      }
    }
  }
  '/seqmeta/api/targetbedfile/retrieve-update-destroy/{targetbedfile}/': {
    get: {
      req: SeqmetaApiTargetbedfileRetrieveUpdateDestroyRetrieveData
      res: {
        '200': TargetBedFile
      }
    }
    put: {
      req: SeqmetaApiTargetbedfileRetrieveUpdateDestroyUpdateData
      res: {
        '200': TargetBedFile
      }
    }
    patch: {
      req: SeqmetaApiTargetbedfileRetrieveUpdateDestroyPartialUpdateData
      res: {
        '200': TargetBedFile
      }
    }
    delete: {
      req: SeqmetaApiTargetbedfileRetrieveUpdateDestroyDestroyData
      res: {
        /**
         * No response body
         */
        '204': void
      }
    }
  }
}
