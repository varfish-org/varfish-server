[tool.poetry]
name = "varfish-server"
version = "1.2.3"
description = "The open platform for genetic variant analysis"
authors = [
    "Manuel Holtgrewe <manuel.holtgrewe@bih-charite.de>",
    "Oliver Stolpe <oliver.stolpe@bih-charite.de>",
]
license = "MIT"
readme = "README.md"
include = [
    "LICENSE",
    "README.md",
    "CHANGELOG.md",
]
packages = [
    { include = "beaconsite" },
    { include = "cases" },
    { include = "clinvar" },
    { include = "clinvar_export" },
    { include = "cohorts" },
    { include = "config" },
    { include = "conservation" },
    { include = "dbsnp" },
    { include = "extra_annos" },
    { include = "frequencies" },
    { include = "geneinfo" },
    { include = "genepanels" },
    { include = "genomicfeatures" },
    { include = "hgmd" },
    { include = "importer" },
    { include = "maintenance" },
    { include = "pathways" },
    { include = "regmaps" },
    { include = "svdbs" },
    { include = "svs" },
    { include = "templatetags" },
    { include = "var_stats_qc" },
    { include = "varannos" },
    { include = "varfish" },
    { include = "variants" },
]

[tool.poetry.dependencies]
python = "^3.10"
aldjemy = ">=2.2,<2.3"
altamisa = "<0.3,>=0.2.8"
argon2-cffi = ">=21.3.0,<21.4"
attrs = ">=21.2.0,<22"
awesome-slugify = ">=1.6.5,<1.7"
beautifulsoup4 = ">=4.9.3,<4.10"
cattrs = "<1.8,>=1.7.1"
celery = "<5.3,>=5.2.7"
cryptography = "<3.5,>=3.4.7"
django = "<3.3,>=3.2.12"
django-autocomplete-light = "<3.10,>=3.9.4"
django-clone = ">=4.0.1"
django-crispy-forms = "<1.15,>=1.14"
django-cryptographic-fields = {git = "https://github.com/bihealth/django-cryptographic-fields.git", develop = true, rev = "django3"}
django-docs = ">=0.3.1,<0.4"
django-environ = "<0.10,>=0.9.0"
django-markupfield = "<2.1,>=2.0.1"
django-model-utils = "<4.3,>=4.2"
django-pagedown = ">=2.2.1,<2.3"
django-plugins = {git = "https://github.com/mikkonie/django-plugins.git", develop = true, rev = "42e86e7904e5c09f1da32173862b26843eda5dd8"}
django-postgres-copy = "==2.3.5"
django-rest-knox = "<4.3,>=4.2.0"
django-saml2-auth-ai = ">=2.1.6,<2.2"
django-sodar-core = "<0.12,>=0.11.0"
django-su = ">=0.9.0,<0.9.1"
djangorestframework = ">=3.13.1,<3.14"
djangorestframework-httpsignature = ">=1.0.0,<1.1"
djproxy = ">=2.3,<2.4"
drf-keyed-list = {git = "https://github.com/mikkonie/drf-keyed-list.git", develop = true, rev = "b03607b866c5706b0e1ea46a7eeaab6527030734"}
httpsig = "<1.4,>=1.3.0"
interval-binning = ">=1.0.0,<1.1"
intervaltree = "<4.0.0,>=3.1.0"
iterable-orm = "<0.5,>=0.4"
jsonschema = ">=4.4,<4.5"
lxml = ">=4.6.3,<4.7"
markdown = "<3.5,>=3.4.1"
mistune = ">=2.0.4,<2.1"
nltk = ">=3.6.2,<3.7"
numpy = "<1.23,>=1.22.1"
pandas = "<1.5,>=1.4.0"
prettytable = "<4.0,>=3.3.0"
psutil = "<6.0,>=5.9.0"
psycopg2 = "==2.9.1"
pysam = ">=0.18,<0.19"
python-dateutil = "<2.9,>=2.8.1"
python-dotenv = ">=0.17,<0.18"
pytz = ">=2021.3"
pyyaml = "<5.5,>=5.4.1"
redis = ">=3.5.3,<3.6"
requests = "==2.31.0"
requests-http-signature = "<0.3,>=0.2.0"
rules = ">=3.3,<3.4"
sentry-sdk = ">=1.1.0,<1.2"
simplejson = ">=3.17.2"
sphinx = "<6,>=5.1.1"
sphinx-jsonschema = ">=1.17"
sphinx-rtd-theme = ">=1.0,<1.1"
sqlalchemy = ">=1.4.18,<1.5"
sqlparse = "<0.5,>=0.4.1"
tqdm = "*"
vcfpy = "<0.14,>=0.13.3"
versioneer = ">=0.21"
wrapt = ">=1.14.1,<2.0"
xlsxwriter = ">=1.4.3,<1.5"

[tool.poetry.group.dev.dependencies]
# packages for testing
black = "==22.8.0"
click = ">=8.0,<8.1"
coveralls = "*"
django-coverage-plugin = "<1.9,>=1.8.0"
django-test-plus = "<1.5,>=1.4.0"
factory-boy = "<3.3,>=3.2.0"
flake8 = ">=5.0,<6"
flake8-import-order = "*"
flake8-pyproject = "*"
freezegun = ">=1.2.2"
isort = "==5.10.1"
jsonmatch = "<0.5,>=0.4"
openpyxl = ">=3.0.7,<3.1"
parameterized = "<0.9,>=0.8.1"
requests-mock = ">=1.9.3,<1.10"
selenium = "<3.142,>=3.141.0"
tblib = "<1.8,>=1.7.0"
# packages for local development
django-debug-toolbar = "<3.3,>=3.2.1"
django-extensions = "<3.2,>=3.1.3"
ipdb = "<0.14,>=0.13.9"
jedi = "==0.17.2"
werkzeug = "<2.1,>=2.0.1"

# Dependencies for enabling LDAP support.  You will need the system library
# named `libldap` (or similar).
[tool.poetry.group.ldap.dependencies]
django-auth-ldap = ">=2.4.0,<2.5"
python-ldap = ">=3.3.1, <3.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
relative_files = true
omit = [
    "varfish/_version.py",
    "*migrations*",
    "*tests*",
]

[tool.coverage.report]
exclude_lines = [
    # Re-enable standard pragma
    "pragma: no cover",
    # Ignore repr() builtin definition, mostly useful for debug code anway
    "def __repr__",
    # Ignore the __main__ entry points
    "if __name__ == '__main__':",
    # Ignore abstract function bodies
    "raise NotImplementedError",
]

[tool.flake8]
exclude = [
    "docs",
    "tests",
    ".*.py",
    "wrapper.py",
    "versioneer.py",
    "docs_manual/src",
    "src",
    "varfish/vueapp/node_modules",
]
max-complexity = 18
select = ["B","C","E","F","W","T4","B9"]
ignore = ["E203","E266","E501","W503"]
max-line-length = 100
per-file-ignores = [
    "tests/**/*.py:E501",
    "docs/conf.py:ALL",
    "config/settings/*.py:F401,F403,F405",
]
import-order-style = "google"

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100

[tool.pytest.ini_options]
env = [
    "DJANGO_SETTINGS_MODULE=config.settings.test",
]
