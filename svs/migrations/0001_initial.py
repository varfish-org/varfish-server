# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-04-23 09:40
from __future__ import unicode_literals

import uuid

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("variants", "0035_auto_20190403_0911"),
    ]

    operations = [
        migrations.CreateModel(
            name="StructuralVariant",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("release", models.CharField(max_length=32)),
                ("chromosome", models.CharField(max_length=32)),
                ("start", models.IntegerField()),
                ("end", models.IntegerField()),
                ("bin", models.IntegerField()),
                (
                    "containing_bins",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), size=None
                    ),
                ),
                ("start_ci_left", models.IntegerField()),
                ("start_ci_right", models.IntegerField()),
                ("end_ci_left", models.IntegerField()),
                ("end_ci_right", models.IntegerField()),
                ("case_id", models.IntegerField()),
                (
                    "sv_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, help_text="Structural variant UUID", unique=True
                    ),
                ),
                ("caller", models.CharField(max_length=128)),
                (
                    "sv_type",
                    models.CharField(
                        choices=[
                            ("DEL", "deletion"),
                            ("DUP", "duplication"),
                            ("INS", "insertion"),
                            ("INV", "inversion"),
                            ("BND", "breakend"),
                            ("CNV", "copy number variation"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "sv_sub_type",
                    models.CharField(
                        choices=[
                            ("DEL", "deletion"),
                            ("DEL:ME", "mobile element deletion"),
                            ("DEL:ME:SVA", "mobile element deletion (SVA)"),
                            ("DEL:ME:L1", "mobile element deletion (LINE1)"),
                            ("DEL:ME:ALU", "mobile element deletion (ALU)"),
                            ("DUP", "duplication"),
                            ("DUP:TANDEM", "tandem duplication"),
                            ("INV", "inversion"),
                            ("INS", "insertion"),
                            ("INS:ME", "mobile_element insertion"),
                            ("INS:ME:SVA", "mobile element deletion (SVA)"),
                            ("INS:ME:L1", "mobile element deletion (LINE1)"),
                            ("INS:ME:ALU", "mobile element deletion (ALU)"),
                            ("INV", "inversion"),
                            ("BND", "breakend"),
                            ("CNV", "copy number variation"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "info",
                    models.JSONField(
                        default={}, help_text="Further information of the structural variant"
                    ),
                ),
                ("genotype", models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="StructuralVariantComment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Annotation UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, help_text="DateTime of last modification"),
                ),
                ("bin", models.IntegerField()),
                (
                    "containing_bins",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), size=None
                    ),
                ),
                ("release", models.CharField(max_length=32)),
                ("chromosome", models.CharField(max_length=32)),
                ("start", models.IntegerField()),
                ("end", models.IntegerField()),
                ("sv_type", models.CharField(max_length=32)),
                ("sv_sub_type", models.CharField(max_length=32)),
                ("text", models.TextField(help_text="The comment text")),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="StructuralVariantFlags",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Annotation UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, help_text="DateTime of last modification"),
                ),
                ("bin", models.IntegerField()),
                (
                    "containing_bins",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), size=None
                    ),
                ),
                ("release", models.CharField(max_length=32)),
                ("chromosome", models.CharField(max_length=32)),
                ("start", models.IntegerField()),
                ("end", models.IntegerField()),
                ("sv_type", models.CharField(max_length=32)),
                ("sv_sub_type", models.CharField(max_length=32)),
                ("flag_bookmarked", models.BooleanField(default=False)),
                ("flag_candidate", models.BooleanField(default=False)),
                ("flag_final_causative", models.BooleanField(default=False)),
                ("flag_for_validation", models.BooleanField(default=False)),
                (
                    "flag_visual",
                    models.CharField(
                        choices=[
                            ("positive", "positive"),
                            ("uncertain", "uncertain"),
                            ("negative", "negative"),
                            ("empty", "empty"),
                        ],
                        default="empty",
                        max_length=32,
                    ),
                ),
                (
                    "flag_validation",
                    models.CharField(
                        choices=[
                            ("positive", "positive"),
                            ("uncertain", "uncertain"),
                            ("negative", "negative"),
                            ("empty", "empty"),
                        ],
                        default="empty",
                        max_length=32,
                    ),
                ),
                (
                    "flag_phenotype_match",
                    models.CharField(
                        choices=[
                            ("positive", "positive"),
                            ("uncertain", "uncertain"),
                            ("negative", "negative"),
                            ("empty", "empty"),
                        ],
                        default="empty",
                        max_length=32,
                    ),
                ),
                (
                    "flag_summary",
                    models.CharField(
                        choices=[
                            ("positive", "positive"),
                            ("uncertain", "uncertain"),
                            ("negative", "negative"),
                            ("empty", "empty"),
                        ],
                        default="empty",
                        max_length=32,
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="StructuralVariantGeneAnnotation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sv_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, help_text="Structural variant UUID foreign key"
                    ),
                ),
                ("refseq_gene_id", models.CharField(max_length=16, null=True)),
                ("refseq_transcript_id", models.CharField(max_length=16, null=True)),
                ("refseq_transcript_coding", models.NullBooleanField()),
                (
                    "refseq_effect",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=64), null=True, size=None
                    ),
                ),
                ("ensembl_gene_id", models.CharField(max_length=16, null=True)),
                ("ensembl_transcript_id", models.CharField(max_length=32, null=True)),
                ("ensembl_transcript_coding", models.NullBooleanField()),
                (
                    "ensembl_effect",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=64, null=True), size=None
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="structuralvariantgeneannotation",
            index=models.Index(fields=["sv_uuid"], name="svs_structu_sv_uuid_09c0c4_idx"),
        ),
        migrations.AddField(
            model_name="structuralvariantflags",
            name="case",
            field=models.ForeignKey(
                help_text="Case that this SV is flagged in",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="structural_variant_flags",
                to="variants.Case",
            ),
        ),
        migrations.AddField(
            model_name="structuralvariantcomment",
            name="case",
            field=models.ForeignKey(
                help_text="Case that this SV is commented on",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="structural_variant_comments",
                to="variants.Case",
            ),
        ),
        migrations.AddField(
            model_name="structuralvariantcomment",
            name="user",
            field=models.ForeignKey(
                blank=True,
                help_text="User who created the comment",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="structural_variant_comments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="structuralvariant",
            index=models.Index(fields=["case_id"], name="svs_structu_case_id_988c93_idx"),
        ),
        migrations.AddIndex(
            model_name="structuralvariant",
            index=models.Index(
                fields=["case_id", "release", "chromosome", "bin"],
                name="svs_structu_case_id_cd8553_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="structuralvariant",
            index=models.Index(
                fields=["case_id", "release", "chromosome", "bin", "sv_type", "sv_sub_type"],
                name="svs_structu_case_id_aa8632_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="structuralvariantflags",
            index=models.Index(
                fields=["case", "release", "bin"], name="svs_structu_case_id_94fcb3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="structuralvariantcomment",
            index=models.Index(
                fields=["case", "release", "bin"], name="svs_structu_case_id_7fdf69_idx"
            ),
        ),
    ]
