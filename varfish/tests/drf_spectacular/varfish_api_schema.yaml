openapi: 3.0.3
info:
  title: VarFish
  version: VERSION
  description: VarFish API
paths:
  /cases-import/api/case-import-action/list-create/{project}/:
    get:
      operationId: cases_import_api_case_import_action_list_create_list
      description: |-
        API view mixin for generic DRF API views with serializers, SODAR project
        context and permission checkin.

        Unless overriding ``permission_classes`` with their own implementation, the
        user MUST supply a ``permission_required`` attribute.

        Replace ``lookup_url_kwarg`` with your view's url kwarg (SODAR project
        compatible model name in lowercase).

        If the lookup is done via a foreign key, change the ``lookup_field``
        attribute of your class into ``foreignkey__sodar_uuid``, e.g.
        ``project__sodar_uuid`` for lists.

        If your object(s) don't have a direct ``project`` relation, update the
        ``queryset_project_field`` to point to the field, e.g.
        ``someothermodel__project``.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - cases-import
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PaginatedCaseImportActionList'
          description: ''
    post:
      operationId: cases_import_api_case_import_action_list_create_create
      description: |-
        API view mixin for generic DRF API views with serializers, SODAR project
        context and permission checkin.

        Unless overriding ``permission_classes`` with their own implementation, the
        user MUST supply a ``permission_required`` attribute.

        Replace ``lookup_url_kwarg`` with your view's url kwarg (SODAR project
        compatible model name in lowercase).

        If the lookup is done via a foreign key, change the ``lookup_field``
        attribute of your class into ``foreignkey__sodar_uuid``, e.g.
        ``project__sodar_uuid`` for lists.

        If your object(s) don't have a direct ``project`` relation, update the
        ``queryset_project_field`` to point to the field, e.g.
        ``someothermodel__project``.
      parameters:
      - in: path
        name: project
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - cases-import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseImportAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseImportAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseImportAction'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseImportAction'
          description: ''
  /cases-import/api/case-import-action/retrieve-update-destroy/{caseimportaction}/:
    get:
      operationId: cases_import_api_case_import_action_retrieve_update_destroy_retrieve
      description: |-
        API view mixin for generic DRF API views with serializers, SODAR project
        context and permission checkin.

        Unless overriding ``permission_classes`` with their own implementation, the
        user MUST supply a ``permission_required`` attribute.

        Replace ``lookup_url_kwarg`` with your view's url kwarg (SODAR project
        compatible model name in lowercase).

        If the lookup is done via a foreign key, change the ``lookup_field``
        attribute of your class into ``foreignkey__sodar_uuid``, e.g.
        ``project__sodar_uuid`` for lists.

        If your object(s) don't have a direct ``project`` relation, update the
        ``queryset_project_field`` to point to the field, e.g.
        ``someothermodel__project``.
      parameters:
      - in: path
        name: caseimportaction
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - cases-import
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseImportAction'
          description: ''
    put:
      operationId: cases_import_api_case_import_action_retrieve_update_destroy_update
      description: |-
        API view mixin for generic DRF API views with serializers, SODAR project
        context and permission checkin.

        Unless overriding ``permission_classes`` with their own implementation, the
        user MUST supply a ``permission_required`` attribute.

        Replace ``lookup_url_kwarg`` with your view's url kwarg (SODAR project
        compatible model name in lowercase).

        If the lookup is done via a foreign key, change the ``lookup_field``
        attribute of your class into ``foreignkey__sodar_uuid``, e.g.
        ``project__sodar_uuid`` for lists.

        If your object(s) don't have a direct ``project`` relation, update the
        ``queryset_project_field`` to point to the field, e.g.
        ``someothermodel__project``.
      parameters:
      - in: path
        name: caseimportaction
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - cases-import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseImportAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseImportAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseImportAction'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseImportAction'
          description: ''
    patch:
      operationId: cases_import_api_case_import_action_retrieve_update_destroy_partial_update
      description: |-
        API view mixin for generic DRF API views with serializers, SODAR project
        context and permission checkin.

        Unless overriding ``permission_classes`` with their own implementation, the
        user MUST supply a ``permission_required`` attribute.

        Replace ``lookup_url_kwarg`` with your view's url kwarg (SODAR project
        compatible model name in lowercase).

        If the lookup is done via a foreign key, change the ``lookup_field``
        attribute of your class into ``foreignkey__sodar_uuid``, e.g.
        ``project__sodar_uuid`` for lists.

        If your object(s) don't have a direct ``project`` relation, update the
        ``queryset_project_field`` to point to the field, e.g.
        ``someothermodel__project``.
      parameters:
      - in: path
        name: caseimportaction
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - cases-import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCaseImportAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCaseImportAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCaseImportAction'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseImportAction'
          description: ''
    delete:
      operationId: cases_import_api_case_import_action_retrieve_update_destroy_destroy
      description: |-
        API view mixin for generic DRF API views with serializers, SODAR project
        context and permission checkin.

        Unless overriding ``permission_classes`` with their own implementation, the
        user MUST supply a ``permission_required`` attribute.

        Replace ``lookup_url_kwarg`` with your view's url kwarg (SODAR project
        compatible model name in lowercase).

        If the lookup is done via a foreign key, change the ``lookup_field``
        attribute of your class into ``foreignkey__sodar_uuid``, e.g.
        ``project__sodar_uuid`` for lists.

        If your object(s) don't have a direct ``project`` relation, update the
        ``queryset_project_field`` to point to the field, e.g.
        ``someothermodel__project``.
      parameters:
      - in: path
        name: caseimportaction
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - cases-import
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /cases-qc/api/caseqc/retrieve/{case}/:
    get:
      operationId: cases_qc_api_caseqc_retrieve_retrieve
      description: |-
        Retrieve the latest ``CaseQc`` for the given case.

        This corresponds to the raw QC values imported into VarFish.  See
        ``VarfishStatsRetrieveApiView`` for the information used by the UI.

        **URL:** ``/cases_qc/api/caseqc/retrieve/{case.sodar_uuid}/``

        **Methods:** ``GET``

        **Returns:** serialized ``CaseQc`` if any, HTTP 404 if not found
      parameters:
      - in: path
        name: case
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - cases-qc
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseQc'
          description: ''
  /cases-qc/api/varfishstats/retrieve/{case}/:
    get:
      operationId: cases_qc_api_varfishstats_retrieve_retrieve
      description: |-
        Retrieve the latest statistics to display in the UI for a case.

        **URL:** ``/cases_qc/api/varfishstats/retrieve/{case.sodar_uuid}/``

        **Methods:** ``GET``

        **Returns:** serialized ``CaseQc`` if any, HTTP 404 if not found
      parameters:
      - in: path
        name: case
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - cases-qc
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/VarfishStats'
          description: ''
  /cases/ajax/annotation-release-info/list/{case}/:
    get:
      operationId: cases_ajax_annotation_release_info_list_list
      description: |-
        List annotation release infos for a given case.

        **URL:** ``/cases/api/annotation-release-info/list/{case.sodar_uuid}``

        **Methods:** ``GET``
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnnotationReleaseInfo'
          description: ''
  /cases/ajax/case-alignment-stats/list/{case}/:
    get:
      operationId: cases_ajax_case_alignment_stats_list_list
      description: |-
        Retrieve alignment statistics for the given case.

        **URL:** ``/cases/ajax/case-alignment-stats/list/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseAlignmentStats'
          description: ''
  /cases/ajax/case-comment/list-create/{case}/:
    get:
      operationId: cases_ajax_case_comment_list_create_list
      description: |-
        Retrieve list of case comments for the given case.

        **URL:** ``/cases/ajax/case-comment/list-create/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseComment'
          description: ''
    post:
      operationId: cases_ajax_case_comment_list_create_create
      description: |-
        Retrieve list of case comments for the given case.

        **URL:** ``/cases/ajax/case-comment/list-create/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseComment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseComment'
          description: ''
  /cases/ajax/case-comment/retrieve-update-destroy/{casecomment}/:
    get:
      operationId: cases_ajax_case_comment_retrieve_update_destroy_retrieve
      description: |-
        Retrieve list of case comments for the given case.

        **URL:** ``/cases/ajax/case-comment/retrieve-update-destroy/{case_comment.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: casecomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseComment'
          description: ''
    put:
      operationId: cases_ajax_case_comment_retrieve_update_destroy_update
      description: |-
        Retrieve list of case comments for the given case.

        **URL:** ``/cases/ajax/case-comment/retrieve-update-destroy/{case_comment.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: casecomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseComment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseComment'
          description: ''
    patch:
      operationId: cases_ajax_case_comment_retrieve_update_destroy_partial_update
      description: |-
        Retrieve list of case comments for the given case.

        **URL:** ``/cases/ajax/case-comment/retrieve-update-destroy/{case_comment.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: casecomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCaseComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCaseComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCaseComment'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseComment'
          description: ''
    delete:
      operationId: cases_ajax_case_comment_retrieve_update_destroy_destroy
      description: |-
        Retrieve list of case comments for the given case.

        **URL:** ``/cases/ajax/case-comment/retrieve-update-destroy/{case_comment.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: casecomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /cases/ajax/case-gene-annotation/list/{case}/:
    get:
      operationId: cases_ajax_case_gene_annotation_list_list
      description: |-
        Retrieve list of case gene annotations for the given case.

        **URL:** ``/cases/ajax/case-gene-annotation/list/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseGeneAnnotation'
          description: ''
  /cases/ajax/case-phenotype-terms/list-create/{case}/:
    get:
      operationId: cases_ajax_case_phenotype_terms_list_create_list
      description: |-
        Retrieve list of case phenotype terms for the given case.

        **URL:** ``/cases/ajax/case-phenotype-terms/list-create/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CasePhenotypeTerms'
          description: ''
    post:
      operationId: cases_ajax_case_phenotype_terms_list_create_create
      description: |-
        Retrieve list of case phenotype terms for the given case.

        **URL:** ``/cases/ajax/case-phenotype-terms/list-create/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CasePhenotypeTerms'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CasePhenotypeTerms'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CasePhenotypeTerms'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CasePhenotypeTerms'
          description: ''
  /cases/ajax/case-phenotype-terms/retrieve-update-destroy/{casephenotypeterms}/:
    get:
      operationId: cases_ajax_case_phenotype_terms_retrieve_update_destroy_retrieve
      description: |-
        Retrieve list of case phenotype terms for the given case.

        **URL:** ``/cases/ajax/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: casephenotypeterms
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CasePhenotypeTerms'
          description: ''
    put:
      operationId: cases_ajax_case_phenotype_terms_retrieve_update_destroy_update
      description: |-
        Retrieve list of case phenotype terms for the given case.

        **URL:** ``/cases/ajax/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: casephenotypeterms
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CasePhenotypeTerms'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CasePhenotypeTerms'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CasePhenotypeTerms'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CasePhenotypeTerms'
          description: ''
    patch:
      operationId: cases_ajax_case_phenotype_terms_retrieve_update_destroy_partial_update
      description: |-
        Retrieve list of case phenotype terms for the given case.

        **URL:** ``/cases/ajax/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: casephenotypeterms
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCasePhenotypeTerms'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCasePhenotypeTerms'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCasePhenotypeTerms'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CasePhenotypeTerms'
          description: ''
    delete:
      operationId: cases_ajax_case_phenotype_terms_retrieve_update_destroy_destroy
      description: |-
        Retrieve list of case phenotype terms for the given case.

        **URL:** ``/cases/ajax/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: casephenotypeterms
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /cases/ajax/case-relatedness/list/{case}/:
    get:
      operationId: cases_ajax_case_relatedness_list_list
      description: |-
        Retrieve relatedness information from the given case.

        **URL:** ``/cases/ajax/case-relatedness/list/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedigreeRelatedness'
          description: ''
  /cases/ajax/case-variant-stats/list/{case}/:
    get:
      operationId: cases_ajax_case_variant_stats_list_list
      description: |-
        Retrieve case variant statistics for the given case.

        **URL:** ``/cases/ajax/case-variant-stats/list/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleVariantStatistics'
          description: ''
  /cases/ajax/case/list/{project}/:
    get:
      operationId: cases_ajax_case_list_list
      description: |-
        Retrieve detail of the specified case.

        **URL:** ``/cases/ajax/case/list/{project.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PaginatedCaseSerializerNgList'
          description: ''
  /cases/ajax/case/retrieve-update-destroy/{case}/:
    get:
      operationId: cases_ajax_case_retrieve_update_destroy_retrieve
      description: |-
        Update details of the specified case.

        **URL:** ``/cases/ajax/case/retrieve-update-destroy/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseSerializerNg'
          description: ''
    put:
      operationId: cases_ajax_case_retrieve_update_destroy_update
      description: |-
        Update details of the specified case.

        **URL:** ``/cases/ajax/case/retrieve-update-destroy/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseSerializerNg'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseSerializerNg'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseSerializerNg'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseSerializerNg'
          description: ''
    patch:
      operationId: cases_ajax_case_retrieve_update_destroy_partial_update
      description: |-
        Update details of the specified case.

        **URL:** ``/cases/ajax/case/retrieve-update-destroy/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCaseSerializerNg'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCaseSerializerNg'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCaseSerializerNg'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseSerializerNg'
          description: ''
    delete:
      operationId: cases_ajax_case_retrieve_update_destroy_destroy
      description: |-
        Update details of the specified case.

        **URL:** ``/cases/ajax/case/retrieve-update-destroy/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /cases/ajax/sv-annotation-release-info/list/{case}/:
    get:
      operationId: cases_ajax_sv_annotation_release_info_list_list
      description: |-
        List SVannotation release infos for a given case.

        **URL:** ``/cases/api/sv-annotation-release-info/list/{case.sodar_uuid}``

        **Methods:** ``GET``
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SvAnnotationReleaseInfo'
          description: ''
  /cases/api/annotation-release-info/list/{case}/:
    get:
      operationId: cases_api_annotation_release_info_list_list
      description: |-
        List annotation release infos for a given case.

        **URL:** ``/cases/api/annotation-release-info/list/{case.sodar_uuid}``

        **Methods:** ``GET``
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnnotationReleaseInfo'
          description: ''
  /cases/api/case-alignment-stats/list/{case}/:
    get:
      operationId: cases_api_case_alignment_stats_list_list
      description: |-
        Retrieve alignment statistics for the given case.

        **URL:** ``/cases/ajax/case-alignment-stats/list/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseAlignmentStats'
          description: ''
  /cases/api/case-comment/list-create/{case}/:
    get:
      operationId: cases_api_case_comment_list_create_list
      description: |-
        List/create case comments for the given case.

        **URL:** ``/cases/api/case-comment/list-create/{case.sodar_uuid}``

        **Methods:** ``GET``

        **Parameters:**

        - ``page`` - specify page to return (default/first is ``1``)
        - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)

        **Returns:**

        - ``count`` - number of total elements (``int``)
        - ``next`` - URL to next page (``str`` or ``null``)
        - ``previous`` - URL to next page (``str`` or ``null``)
        - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`)
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseComment'
          description: ''
    post:
      operationId: cases_api_case_comment_list_create_create
      description: |-
        List/create case comments for the given case.

        **URL:** ``/cases/api/case-comment/list-create/{case.sodar_uuid}``

        **Methods:** ``GET``

        **Parameters:**

        - ``page`` - specify page to return (default/first is ``1``)
        - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)

        **Returns:**

        - ``count`` - number of total elements (``int``)
        - ``next`` - URL to next page (``str`` or ``null``)
        - ``previous`` - URL to next page (``str`` or ``null``)
        - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`)
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseComment'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseComment'
          description: ''
  /cases/api/case-gene-annotation/list/{case}/:
    get:
      operationId: cases_api_case_gene_annotation_list_list
      description: |-
        Retrieve list of case gene annotations for the given case.

        **URL:** ``/cases/ajax/case-gene-annotation/list/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseGeneAnnotation'
          description: ''
  /cases/api/case-phenotype-terms/list-create/{case}/:
    get:
      operationId: cases_api_case_phenotype_terms_list_create_list
      description: |-
        List/create case phenotype term annotations.

        **URL:** ``/cases/api/case-phenotype-terms/list-create/{case.sodar_uuid}``

        **Methods:** ``GET``

        **Parameters:**

        - ``page`` - specify page to return (default/first is ``1``)
        - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)

        **Returns:**

        - ``count`` - number of total elements (``int``)
        - ``next`` - URL to next page (``str`` or ``null``)
        - ``previous`` - URL to next page (``str`` or ``null``)
        - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`)
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CasePhenotypeTerms'
          description: ''
    post:
      operationId: cases_api_case_phenotype_terms_list_create_create
      description: |-
        List/create case phenotype term annotations.

        **URL:** ``/cases/api/case-phenotype-terms/list-create/{case.sodar_uuid}``

        **Methods:** ``GET``

        **Parameters:**

        - ``page`` - specify page to return (default/first is ``1``)
        - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)

        **Returns:**

        - ``count`` - number of total elements (``int``)
        - ``next`` - URL to next page (``str`` or ``null``)
        - ``previous`` - URL to next page (``str`` or ``null``)
        - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`)
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CasePhenotypeTerms'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CasePhenotypeTerms'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CasePhenotypeTerms'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CasePhenotypeTerms'
          description: ''
  /cases/api/case-phenotype-terms/retrieve-update-destroy/{casephenotypeterms}/:
    get:
      operationId: cases_api_case_phenotype_terms_retrieve_update_destroy_retrieve
      description: |-
        Retrieve, update, destroy case comments for the given case.

        **URL:** ``/cases/api/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}``

        **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
      parameters:
      - in: path
        name: casephenotypeterms
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CasePhenotypeTerms'
          description: ''
    put:
      operationId: cases_api_case_phenotype_terms_retrieve_update_destroy_update
      description: |-
        Retrieve, update, destroy case comments for the given case.

        **URL:** ``/cases/api/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}``

        **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
      parameters:
      - in: path
        name: casephenotypeterms
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CasePhenotypeTerms'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CasePhenotypeTerms'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CasePhenotypeTerms'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CasePhenotypeTerms'
          description: ''
    patch:
      operationId: cases_api_case_phenotype_terms_retrieve_update_destroy_partial_update
      description: |-
        Retrieve, update, destroy case comments for the given case.

        **URL:** ``/cases/api/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}``

        **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
      parameters:
      - in: path
        name: casephenotypeterms
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCasePhenotypeTerms'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCasePhenotypeTerms'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCasePhenotypeTerms'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CasePhenotypeTerms'
          description: ''
    delete:
      operationId: cases_api_case_phenotype_terms_retrieve_update_destroy_destroy
      description: |-
        Retrieve, update, destroy case comments for the given case.

        **URL:** ``/cases/api/case-phenotype-terms/retrieve-update-destroy/{case_phenotype_terms.sodar_uuid}``

        **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
      parameters:
      - in: path
        name: casephenotypeterms
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /cases/api/case-relatedness/list/{case}/:
    get:
      operationId: cases_api_case_relatedness_list_list
      description: |-
        Retrieve relatedness information from the given case.

        **URL:** ``/cases/ajax/case-relatedness/list/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedigreeRelatedness'
          description: ''
  /cases/api/case-variant-stats/list/{case}/:
    get:
      operationId: cases_api_case_variant_stats_list_list
      description: |-
        Retrieve case variant statistics for the given case.

        **URL:** ``/cases/ajax/case-variant-stats/list/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleVariantStatistics'
          description: ''
  /cases/api/case/list/{project}/:
    get:
      operationId: cases_api_case_list_list
      description: |-
        List all cases in the current project.

        **URL:** ``/cases/api/case/list/{project.sodar_uid}/``

        **Methods:** ``GET``

        **Returns:** List of project details (see :py:class:`CaseRetrieveApiView`)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PaginatedCaseSerializerNgList'
          description: ''
  /cases/api/case/retrieve-update-destroy/{case}/:
    get:
      operationId: cases_api_case_retrieve_update_destroy_retrieve
      description: |-
        Update a given case.

        **URL:** ``/cases/api/case/update/{case.sodar_uid}/``

        **Methods:** ``PATCH``, ``PUT``, ``DELETE``.

        **Returns:** Updated case details.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseSerializerNg'
          description: ''
    put:
      operationId: cases_api_case_retrieve_update_destroy_update
      description: |-
        Update a given case.

        **URL:** ``/cases/api/case/update/{case.sodar_uid}/``

        **Methods:** ``PATCH``, ``PUT``, ``DELETE``.

        **Returns:** Updated case details.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseSerializerNg'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseSerializerNg'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseSerializerNg'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseSerializerNg'
          description: ''
    patch:
      operationId: cases_api_case_retrieve_update_destroy_partial_update
      description: |-
        Update a given case.

        **URL:** ``/cases/api/case/update/{case.sodar_uid}/``

        **Methods:** ``PATCH``, ``PUT``, ``DELETE``.

        **Returns:** Updated case details.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCaseSerializerNg'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCaseSerializerNg'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCaseSerializerNg'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseSerializerNg'
          description: ''
    delete:
      operationId: cases_api_case_retrieve_update_destroy_destroy
      description: |-
        Update a given case.

        **URL:** ``/cases/api/case/update/{case.sodar_uid}/``

        **Methods:** ``PATCH``, ``PUT``, ``DELETE``.

        **Returns:** Updated case details.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /cases/api/sv-annotation-release-info/list/{case}/:
    get:
      operationId: cases_api_sv_annotation_release_info_list_list
      description: |-
        List SVannotation release infos for a given case.

        **URL:** ``/cases/api/sv-annotation-release-info/list/{case.sodar_uuid}``

        **Methods:** ``GET``
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - cases
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SvAnnotationReleaseInfo'
          description: ''
  /importer/api/bam-qc-file/{caseimportinfo}/:
    get:
      operationId: importer_api_bam_qc_file_list
      description: DRF list-create API view the ``BamQcFile`` model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BamQcFile'
          description: ''
    post:
      operationId: importer_api_bam_qc_file_create
      description: DRF list-create API view the ``BamQcFile`` model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BamQcFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BamQcFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BamQcFile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/BamQcFile'
          description: ''
  /importer/api/bam-qc-file/{caseimportinfo}/{bamqcfile}/:
    get:
      operationId: importer_api_bam_qc_file_retrieve
      description: DRF retrieve-update-destroy API view for the ``BamQcFile`` model.
      parameters:
      - in: path
        name: bamqcfile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/BamQcFile'
          description: ''
    delete:
      operationId: importer_api_bam_qc_file_destroy
      description: DRF retrieve-update-destroy API view for the ``BamQcFile`` model.
      parameters:
      - in: path
        name: bamqcfile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /importer/api/case-gene-annotation-file/{caseimportinfo}/:
    get:
      operationId: importer_api_case_gene_annotation_file_list
      description: DRF list-create API view the ``CaseGeneAnnotationFile`` model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseGeneAnnotationFile'
          description: ''
    post:
      operationId: importer_api_case_gene_annotation_file_create
      description: DRF list-create API view the ``CaseGeneAnnotationFile`` model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseGeneAnnotationFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseGeneAnnotationFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseGeneAnnotationFile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseGeneAnnotationFile'
          description: ''
  /importer/api/case-gene-annotation-file/{caseimportinfo}/{casegeneannotationfile}/:
    get:
      operationId: importer_api_case_gene_annotation_file_retrieve
      description: DRF retrieve-update-destroy API view for the ``CaseGeneAnnotationFile``
        model.
      parameters:
      - in: path
        name: casegeneannotationfile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseGeneAnnotationFile'
          description: ''
    delete:
      operationId: importer_api_case_gene_annotation_file_destroy
      description: DRF retrieve-update-destroy API view for the ``CaseGeneAnnotationFile``
        model.
      parameters:
      - in: path
        name: casegeneannotationfile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /importer/api/case-import-info/{project}/:
    get:
      operationId: importer_api_case_import_info_list
      description: DRF list-create API view the ``CaseImportInfo`` model.
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseImportInfo'
          description: ''
    post:
      operationId: importer_api_case_import_info_create
      description: DRF list-create API view the ``CaseImportInfo`` model.
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseImportInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseImportInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseImportInfo'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseImportInfo'
          description: ''
  /importer/api/case-import-info/{project}/{caseimportinfo}/:
    get:
      operationId: importer_api_case_import_info_retrieve
      description: DRF retrieve-update-destroy API view for the ``CaseImportInfo``
        model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseImportInfo'
          description: ''
    put:
      operationId: importer_api_case_import_info_update
      description: DRF retrieve-update-destroy API view for the ``CaseImportInfo``
        model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseImportInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaseImportInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaseImportInfo'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseImportInfo'
          description: ''
    patch:
      operationId: importer_api_case_import_info_partial_update
      description: DRF retrieve-update-destroy API view for the ``CaseImportInfo``
        model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCaseImportInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCaseImportInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCaseImportInfo'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseImportInfo'
          description: ''
    delete:
      operationId: importer_api_case_import_info_destroy
      description: DRF retrieve-update-destroy API view for the ``CaseImportInfo``
        model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /importer/api/database-info-file/{variantsetimportinfo}/:
    get:
      operationId: importer_api_database_info_file_list
      description: DRF list-create API view the ``DatabaseInfoFile`` model.
      parameters:
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatabaseInfoFile'
          description: ''
    post:
      operationId: importer_api_database_info_file_create
      description: DRF list-create API view the ``DatabaseInfoFile`` model.
      parameters:
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseInfoFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DatabaseInfoFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DatabaseInfoFile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/DatabaseInfoFile'
          description: ''
  /importer/api/database-info-file/{variantsetimportinfo}/{databaseinfofile}/:
    get:
      operationId: importer_api_database_info_file_retrieve
      description: DRF retrieve-update-destroy API view for the ``DatabaseInfoFile``
        model.
      parameters:
      - in: path
        name: databaseinfofile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/DatabaseInfoFile'
          description: ''
    delete:
      operationId: importer_api_database_info_file_destroy
      description: DRF retrieve-update-destroy API view for the ``DatabaseInfoFile``
        model.
      parameters:
      - in: path
        name: databaseinfofile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /importer/api/effects-file/{variantsetimportinfo}/:
    get:
      operationId: importer_api_effects_file_list
      description: DRF list-create API view the ``EffectsFile`` model.
      parameters:
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EffectFile'
          description: ''
    post:
      operationId: importer_api_effects_file_create
      description: DRF list-create API view the ``EffectsFile`` model.
      parameters:
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EffectFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EffectFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EffectFile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/EffectFile'
          description: ''
  /importer/api/effects-file/{variantsetimportinfo}/{effectsfile}/:
    get:
      operationId: importer_api_effects_file_retrieve
      description: DRF retrieve-update-destroy API view for the ``EffectsFile`` model.
      parameters:
      - in: path
        name: effectsfile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/EffectFile'
          description: ''
    delete:
      operationId: importer_api_effects_file_destroy
      description: DRF retrieve-update-destroy API view for the ``EffectsFile`` model.
      parameters:
      - in: path
        name: effectsfile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /importer/api/genotype-file/{variantsetimportinfo}/:
    get:
      operationId: importer_api_genotype_file_list
      description: DRF list-create API view the ``GenotypeFile`` model.
      parameters:
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenotypeFile'
          description: ''
    post:
      operationId: importer_api_genotype_file_create
      description: DRF list-create API view the ``GenotypeFile`` model.
      parameters:
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenotypeFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenotypeFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenotypeFile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/GenotypeFile'
          description: ''
  /importer/api/genotype-file/{variantsetimportinfo}/{genotypefile}/:
    get:
      operationId: importer_api_genotype_file_retrieve
      description: DRF retrieve-update-destroy API view for the ``GenotypeFile`` model.
      parameters:
      - in: path
        name: genotypefile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/GenotypeFile'
          description: ''
    delete:
      operationId: importer_api_genotype_file_destroy
      description: DRF retrieve-update-destroy API view for the ``GenotypeFile`` model.
      parameters:
      - in: path
        name: genotypefile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /importer/api/variant-set-import-info/{caseimportinfo}/:
    get:
      operationId: importer_api_variant_set_import_info_list
      description: DRF list-create API view the ``VariantSetImportInfo`` model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VariantSetImportInfo'
          description: ''
    post:
      operationId: importer_api_variant_set_import_info_create
      description: DRF list-create API view the ``VariantSetImportInfo`` model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariantSetImportInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VariantSetImportInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VariantSetImportInfo'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/VariantSetImportInfo'
          description: ''
  /importer/api/variant-set-import-info/{caseimportinfo}/{variantsetimportinfo}/:
    get:
      operationId: importer_api_variant_set_import_info_retrieve
      description: DRF retrieve-update-destroy API view for the ``VariantSetImportInfo``
        model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/VariantSetImportInfo'
          description: ''
    put:
      operationId: importer_api_variant_set_import_info_update
      description: DRF retrieve-update-destroy API view for the ``VariantSetImportInfo``
        model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariantSetImportInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VariantSetImportInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VariantSetImportInfo'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/VariantSetImportInfo'
          description: ''
    patch:
      operationId: importer_api_variant_set_import_info_partial_update
      description: DRF retrieve-update-destroy API view for the ``VariantSetImportInfo``
        model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVariantSetImportInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVariantSetImportInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVariantSetImportInfo'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/VariantSetImportInfo'
          description: ''
    delete:
      operationId: importer_api_variant_set_import_info_destroy
      description: DRF retrieve-update-destroy API view for the ``VariantSetImportInfo``
        model.
      parameters:
      - in: path
        name: caseimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - in: path
        name: variantsetimportinfo
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - importer
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /seqmeta/api/enrichmentkit/list-create/:
    get:
      operationId: seqmeta_api_enrichmentkit_list_create_list
      description: DRF list-create API view the ``EnrichmentKit`` model.
      tags:
      - seqmeta
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnrichmentKit'
          description: ''
    post:
      operationId: seqmeta_api_enrichmentkit_list_create_create
      description: DRF list-create API view the ``EnrichmentKit`` model.
      tags:
      - seqmeta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrichmentKit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnrichmentKit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnrichmentKit'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/EnrichmentKit'
          description: ''
  /seqmeta/api/enrichmentkit/retrieve-update-destroy/{enrichmentkit}/:
    get:
      operationId: seqmeta_api_enrichmentkit_retrieve_update_destroy_retrieve
      description: DRF retrieve-update-destroy API view for the ``EnrichmentKit``
        model.
      parameters:
      - in: path
        name: enrichmentkit
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - seqmeta
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/EnrichmentKit'
          description: ''
    put:
      operationId: seqmeta_api_enrichmentkit_retrieve_update_destroy_update
      description: DRF retrieve-update-destroy API view for the ``EnrichmentKit``
        model.
      parameters:
      - in: path
        name: enrichmentkit
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - seqmeta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrichmentKit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnrichmentKit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnrichmentKit'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/EnrichmentKit'
          description: ''
    patch:
      operationId: seqmeta_api_enrichmentkit_retrieve_update_destroy_partial_update
      description: DRF retrieve-update-destroy API view for the ``EnrichmentKit``
        model.
      parameters:
      - in: path
        name: enrichmentkit
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - seqmeta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEnrichmentKit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEnrichmentKit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEnrichmentKit'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/EnrichmentKit'
          description: ''
    delete:
      operationId: seqmeta_api_enrichmentkit_retrieve_update_destroy_destroy
      description: DRF retrieve-update-destroy API view for the ``EnrichmentKit``
        model.
      parameters:
      - in: path
        name: enrichmentkit
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - seqmeta
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /seqmeta/api/targetbedfile/list-create/{enrichmentkit}/:
    get:
      operationId: seqmeta_api_targetbedfile_list_create_list
      description: DRF list-create API view the ``TargetBedFile`` model.
      parameters:
      - in: path
        name: enrichmentkit
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - seqmeta
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetBedFile'
          description: ''
    post:
      operationId: seqmeta_api_targetbedfile_list_create_create
      description: DRF list-create API view the ``TargetBedFile`` model.
      parameters:
      - in: path
        name: enrichmentkit
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - seqmeta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetBedFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetBedFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetBedFile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/TargetBedFile'
          description: ''
  /seqmeta/api/targetbedfile/retrieve-update-destroy/{targetbedfile}/:
    get:
      operationId: seqmeta_api_targetbedfile_retrieve_update_destroy_retrieve
      description: DRF retrieve-update-destroy API view for the ``TargetBedFile``
        model.
      parameters:
      - in: path
        name: targetbedfile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - seqmeta
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/TargetBedFile'
          description: ''
    put:
      operationId: seqmeta_api_targetbedfile_retrieve_update_destroy_update
      description: DRF retrieve-update-destroy API view for the ``TargetBedFile``
        model.
      parameters:
      - in: path
        name: targetbedfile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - seqmeta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetBedFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TargetBedFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TargetBedFile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/TargetBedFile'
          description: ''
    patch:
      operationId: seqmeta_api_targetbedfile_retrieve_update_destroy_partial_update
      description: DRF retrieve-update-destroy API view for the ``TargetBedFile``
        model.
      parameters:
      - in: path
        name: targetbedfile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - seqmeta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTargetBedFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTargetBedFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTargetBedFile'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/TargetBedFile'
          description: ''
    delete:
      operationId: seqmeta_api_targetbedfile_retrieve_update_destroy_destroy
      description: DRF retrieve-update-destroy API view for the ``TargetBedFile``
        model.
      parameters:
      - in: path
        name: targetbedfile
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - seqmeta
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /svs/ajax/structural-variant-comment/list-create/{case}/:
    get:
      operationId: svs_ajax_structural_variant_comment_list_create_list
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StructuralVariantComment'
          description: ''
    post:
      operationId: svs_ajax_structural_variant_comment_list_create_create
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructuralVariantComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StructuralVariantComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StructuralVariantComment'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/StructuralVariantComment'
          description: ''
  /svs/ajax/structural-variant-comment/list-project/{project}/:
    get:
      operationId: svs_ajax_structural_variant_comment_list_project_list
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StructuralVariantCommentProject'
          description: ''
  /svs/ajax/structural-variant-comment/retrieve-update-destroy/{structuralvariantcomment}/:
    get:
      operationId: svs_ajax_structural_variant_comment_retrieve_update_destroy_retrieve
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: structuralvariantcomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/StructuralVariantComment'
          description: ''
    put:
      operationId: svs_ajax_structural_variant_comment_retrieve_update_destroy_update
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: structuralvariantcomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructuralVariantComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StructuralVariantComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StructuralVariantComment'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/StructuralVariantComment'
          description: ''
    patch:
      operationId: svs_ajax_structural_variant_comment_retrieve_update_destroy_partial_update
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: structuralvariantcomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStructuralVariantComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStructuralVariantComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStructuralVariantComment'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/StructuralVariantComment'
          description: ''
    delete:
      operationId: svs_ajax_structural_variant_comment_retrieve_update_destroy_destroy
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: structuralvariantcomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /svs/ajax/structural-variant-flags/list-create/{case}/:
    get:
      operationId: svs_ajax_structural_variant_flags_list_create_list
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StructuralVariantFlags'
          description: ''
    post:
      operationId: svs_ajax_structural_variant_flags_list_create_create
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructuralVariantFlags'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StructuralVariantFlags'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StructuralVariantFlags'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/StructuralVariantFlags'
          description: ''
  /svs/ajax/structural-variant-flags/list-project/{project}/:
    get:
      operationId: svs_ajax_structural_variant_flags_list_project_list
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StructuralVariantFlagsProject'
          description: ''
  /svs/ajax/structural-variant-flags/retrieve-update-destroy/{structuralvariantflags}/:
    get:
      operationId: svs_ajax_structural_variant_flags_retrieve_update_destroy_retrieve
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: structuralvariantflags
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/StructuralVariantFlags'
          description: ''
    put:
      operationId: svs_ajax_structural_variant_flags_retrieve_update_destroy_update
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: structuralvariantflags
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructuralVariantFlags'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StructuralVariantFlags'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StructuralVariantFlags'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/StructuralVariantFlags'
          description: ''
    patch:
      operationId: svs_ajax_structural_variant_flags_retrieve_update_destroy_partial_update
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: structuralvariantflags
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStructuralVariantFlags'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStructuralVariantFlags'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStructuralVariantFlags'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/StructuralVariantFlags'
          description: ''
    delete:
      operationId: svs_ajax_structural_variant_flags_retrieve_update_destroy_destroy
      description: Mixin to enforce project-based permissions.
      parameters:
      - in: path
        name: structuralvariantflags
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /svs/sv-query-result-row/list/{svqueryresultset}/:
    get:
      operationId: svs_sv_query_result_row_list_list
      description: |-
        AJAX endpoint for listing query result rows for a query.

        **URL:** ``/svs/ajax/sv-query-result-row/list/{svqueryresultset.sodar_uuid}/``

        **Methods:** ``GET``
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: svqueryresultset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PaginatedSvQueryResultRowList'
          description: ''
  /svs/sv-query-result-row/retrieve/{svqueryresultrow}/:
    get:
      operationId: svs_sv_query_result_row_retrieve_retrieve
      description: |-
        AJAX endpoint for retreiving query result row for a query.

        **URL:** ``/svs/ajax/sv-query-result-row/retrieve/{svqueryresultrow.sodar_uuid}/``

        **Methods:** ``GET``
      parameters:
      - in: path
        name: svqueryresultrow
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SvQueryResultRow'
          description: ''
  /svs/sv-query-result-set/list/{svquery}/:
    get:
      operationId: svs_sv_query_result_set_list_list
      description: |-
        AJAX endpoint for listing query result sets for a query.

        **URL:** ``/svs/ajax/sv-query-result-set/list/{svqueryresultset.sodar_uuid}/``

        **Methods:** ``GET``
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: svquery
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PaginatedSvQueryResultSetList'
          description: ''
  /svs/sv-query-result-set/retrieve/{svqueryresultset}/:
    get:
      operationId: svs_sv_query_result_set_retrieve_retrieve
      description: |-
        AJAX endpoint for retrieving query result sets.

        **URL:** ``/svs/ajax/sv-query-result-set/retrieve/{svqueryresultset.sodar_uuid}/``

        **Methods:** ``GET``
      parameters:
      - in: path
        name: svqueryresultset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - svs
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SvQueryResultSet'
          description: ''
  /varannos/api/varannoset/list-create/{project}/:
    get:
      operationId: varannos_api_varannoset_list_create_list
      description: DRF list-create API view the ``VarAnnoSet`` model.
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - varannos
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VarAnnoSet'
          description: ''
    post:
      operationId: varannos_api_varannoset_list_create_create
      description: DRF list-create API view the ``VarAnnoSet`` model.
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - varannos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VarAnnoSet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VarAnnoSet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VarAnnoSet'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/VarAnnoSet'
          description: ''
  /varannos/api/varannoset/retrieve-update-destroy/{varannoset}/:
    get:
      operationId: varannos_api_varannoset_retrieve_update_destroy_retrieve
      description: DRF retrieve-update-destroy API view for the ``VarAnnoSet`` model.
      parameters:
      - in: path
        name: varannoset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - varannos
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/VarAnnoSet'
          description: ''
    put:
      operationId: varannos_api_varannoset_retrieve_update_destroy_update
      description: DRF retrieve-update-destroy API view for the ``VarAnnoSet`` model.
      parameters:
      - in: path
        name: varannoset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - varannos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VarAnnoSet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VarAnnoSet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VarAnnoSet'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/VarAnnoSet'
          description: ''
    patch:
      operationId: varannos_api_varannoset_retrieve_update_destroy_partial_update
      description: DRF retrieve-update-destroy API view for the ``VarAnnoSet`` model.
      parameters:
      - in: path
        name: varannoset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - varannos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVarAnnoSet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVarAnnoSet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVarAnnoSet'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/VarAnnoSet'
          description: ''
    delete:
      operationId: varannos_api_varannoset_retrieve_update_destroy_destroy
      description: DRF retrieve-update-destroy API view for the ``VarAnnoSet`` model.
      parameters:
      - in: path
        name: varannoset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - varannos
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /varannos/api/varannosetentry/list-create/{varannoset}/:
    get:
      operationId: varannos_api_varannosetentry_list_create_list
      description: DRF list-create API view the ``VarAnnoSetEntry`` model.
      parameters:
      - in: path
        name: varannoset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - varannos
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VarAnnoSetEntry'
          description: ''
    post:
      operationId: varannos_api_varannosetentry_list_create_create
      description: DRF list-create API view the ``VarAnnoSetEntry`` model.
      parameters:
      - in: path
        name: varannoset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - varannos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VarAnnoSetEntry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VarAnnoSetEntry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VarAnnoSetEntry'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/VarAnnoSetEntry'
          description: ''
  /varannos/api/varannosetentry/retrieve-update-destroy/{varannosetentry}/:
    get:
      operationId: varannos_api_varannosetentry_retrieve_update_destroy_retrieve
      description: DRF retrieve-update-destroy API view for the ``VarAnnoSetEntry``
        model.
      parameters:
      - in: path
        name: varannosetentry
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - varannos
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/VarAnnoSetEntry'
          description: ''
    put:
      operationId: varannos_api_varannosetentry_retrieve_update_destroy_update
      description: DRF retrieve-update-destroy API view for the ``VarAnnoSetEntry``
        model.
      parameters:
      - in: path
        name: varannosetentry
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - varannos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VarAnnoSetEntry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VarAnnoSetEntry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VarAnnoSetEntry'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/VarAnnoSetEntry'
          description: ''
    patch:
      operationId: varannos_api_varannosetentry_retrieve_update_destroy_partial_update
      description: DRF retrieve-update-destroy API view for the ``VarAnnoSetEntry``
        model.
      parameters:
      - in: path
        name: varannosetentry
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - varannos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVarAnnoSetEntry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVarAnnoSetEntry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVarAnnoSetEntry'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/VarAnnoSetEntry'
          description: ''
    delete:
      operationId: varannos_api_varannosetentry_retrieve_update_destroy_destroy
      description: DRF retrieve-update-destroy API view for the ``VarAnnoSetEntry``
        model.
      parameters:
      - in: path
        name: varannosetentry
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - varannos
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /variants/ajax/acmg-criteria-rating/delete/{acmgcriteriarating}/:
    delete:
      operationId: variants_ajax_acmg_criteria_rating_delete_destroy
      description: |-
        Delete ACMG criteria rating

        **URL:** ``/variants/ajax/acmg-criteria-rating/delete/{acmgcriteriarating.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: acmgcriteriarating
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /variants/ajax/acmg-criteria-rating/list-create/{case}/:
    get:
      operationId: variants_ajax_acmg_criteria_rating_list_create_list
      description: |-
        Create ACMG criteria rating

        **URL:** ``/variants/ajax/acmg-criteria-rating/list-create/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PaginatedAcmgCriteriaRatingList'
          description: ''
    post:
      operationId: variants_ajax_acmg_criteria_rating_list_create_create
      description: |-
        Create ACMG criteria rating

        **URL:** ``/variants/ajax/acmg-criteria-rating/list-create/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcmgCriteriaRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcmgCriteriaRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcmgCriteriaRating'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/AcmgCriteriaRating'
          description: ''
  /variants/ajax/acmg-criteria-rating/update/{acmgcriteriarating}/:
    put:
      operationId: variants_ajax_acmg_criteria_rating_update_update
      description: |-
        Update ACMG criteria rating

        **URL:** ``/variants/ajax/acmg-criteria-rating/update/{acmgcriteriarating.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: acmgcriteriarating
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcmgCriteriaRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcmgCriteriaRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcmgCriteriaRating'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/AcmgCriteriaRating'
          description: ''
    patch:
      operationId: variants_ajax_acmg_criteria_rating_update_partial_update
      description: |-
        Update ACMG criteria rating

        **URL:** ``/variants/ajax/acmg-criteria-rating/update/{acmgcriteriarating.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: acmgcriteriarating
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAcmgCriteriaRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAcmgCriteriaRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAcmgCriteriaRating'
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/AcmgCriteriaRating'
          description: ''
  /variants/ajax/case/retrieve/{case}/:
    get:
      operationId: variants_ajax_case_retrieve_retrieve
      description: |-
        Retrieve detail of the specified case.

        **URL:** ``/variants/ajax/case/retrieve/{case.sodar_uuid}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/Case'
          description: ''
  /variants/ajax/chromosomepresets/clone-factory-presets/{name}/:
    post:
      operationId: variants_ajax_chromosomepresets_clone_factory_presets_create
      description: |-
        Clone factory presets.

        You must pass in a target PresetSet UUID as ``presetset``.

        **Method:** POST

        **URL:** ``/variants/ajax/chromosome/clone-factory-presets/{name}/``
      parameters:
      - in: path
        name: name
        schema:
          type: string
          pattern: ^[a-zA-Z_-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChromosomePresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChromosomePresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChromosomePresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ChromosomePresets'
          description: ''
  /variants/ajax/chromosomepresets/clone-other/{chromosomepresets}/:
    post:
      operationId: variants_ajax_chromosomepresets_clone_other_create
      description: |-
        Clone other preset set, by default in same project.

        Override target PresetSet with ``presetset``.

        **Method:** POST

        **URL:** ``/variants/ajax/chromosomepresets/clone-other/<uuid:chromosomepresets>/``
      parameters:
      - in: path
        name: chromosomepresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChromosomePresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChromosomePresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChromosomePresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ChromosomePresets'
          description: ''
  /variants/ajax/chromosomepresets/list-create/{presetset}/:
    get:
      operationId: variants_ajax_chromosomepresets_list_create_list
      description: |-
        Create & list ``ChromosomePresets`` objects.

        **URL:** ``/variants/ajax/chromosomepresets/list-create/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChromosomePresets'
          description: ''
    post:
      operationId: variants_ajax_chromosomepresets_list_create_create
      description: |-
        Create & list ``ChromosomePresets`` objects.

        **URL:** ``/variants/ajax/chromosomepresets/list-create/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChromosomePresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChromosomePresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChromosomePresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ChromosomePresets'
          description: ''
  /variants/ajax/chromosomepresets/retrieve-update-destroy/{chromosomepresets}/:
    get:
      operationId: variants_ajax_chromosomepresets_retrieve_update_destroy_retrieve
      description: |-
        Allow retrieval, update, destruction of ``ChromosomePreset``.

        **URL:** ``/variants/ajax/chromosomepresets/retrieve-update-destroy/<uuid:chromosomepresets>/``
      parameters:
      - in: path
        name: chromosomepresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ChromosomePresets'
          description: ''
    put:
      operationId: variants_ajax_chromosomepresets_retrieve_update_destroy_update
      description: |-
        Allow retrieval, update, destruction of ``ChromosomePreset``.

        **URL:** ``/variants/ajax/chromosomepresets/retrieve-update-destroy/<uuid:chromosomepresets>/``
      parameters:
      - in: path
        name: chromosomepresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChromosomePresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChromosomePresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChromosomePresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ChromosomePresets'
          description: ''
    patch:
      operationId: variants_ajax_chromosomepresets_retrieve_update_destroy_partial_update
      description: |-
        Allow retrieval, update, destruction of ``ChromosomePreset``.

        **URL:** ``/variants/ajax/chromosomepresets/retrieve-update-destroy/<uuid:chromosomepresets>/``
      parameters:
      - in: path
        name: chromosomepresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChromosomePresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChromosomePresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChromosomePresets'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ChromosomePresets'
          description: ''
    delete:
      operationId: variants_ajax_chromosomepresets_retrieve_update_destroy_destroy
      description: |-
        Allow retrieval, update, destruction of ``ChromosomePreset``.

        **URL:** ``/variants/ajax/chromosomepresets/retrieve-update-destroy/<uuid:chromosomepresets>/``
      parameters:
      - in: path
        name: chromosomepresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /variants/ajax/extra-anno-fields/:
    get:
      operationId: variants_ajax_extra_anno_fields_list
      description: |-
        A view that returns all extra annotation field names.

        **URL:** ``/variants/api/extra-anno-fields/``

        **Methods:** ``GET``

        **Returns:** List of extra annotation field names.
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtraAnnoField'
          description: ''
  /variants/ajax/flagsetcpresets/clone-factory-presets/{name}/:
    post:
      operationId: variants_ajax_flagsetcpresets_clone_factory_presets_create
      description: |-
        Clone factory presets.

        You must pass in a target PresetSet UUID as ``presetset``.

        **Method:** POST

        **URL:** ``/variants/ajax/flagsetc/clone-factory-presets/{name}/``
      parameters:
      - in: path
        name: name
        schema:
          type: string
          pattern: ^[a-zA-Z_-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagsEtcPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlagsEtcPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlagsEtcPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/FlagsEtcPresets'
          description: ''
  /variants/ajax/flagsetcpresets/clone-other/{flagsetcpresets}/:
    post:
      operationId: variants_ajax_flagsetcpresets_clone_other_create
      description: |-
        Clone other preset set, by default in same project.

        Override target PresetSet with ``presetset``.

        **Method:** POST

        **URL:** ``/variants/ajax/flagsetcpresets/clone-other/<uuid:flagsetcpresets>/``
      parameters:
      - in: path
        name: flagsetcpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagsEtcPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlagsEtcPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlagsEtcPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/FlagsEtcPresets'
          description: ''
  /variants/ajax/flagsetcpresets/list-create/{presetset}/:
    get:
      operationId: variants_ajax_flagsetcpresets_list_create_list
      description: |-
        Create & list ``FlagsEtcPresets`` objects.

        **URL:** ``/variants/ajax/flagsetcpresets/list-create/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlagsEtcPresets'
          description: ''
    post:
      operationId: variants_ajax_flagsetcpresets_list_create_create
      description: |-
        Create & list ``FlagsEtcPresets`` objects.

        **URL:** ``/variants/ajax/flagsetcpresets/list-create/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagsEtcPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlagsEtcPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlagsEtcPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/FlagsEtcPresets'
          description: ''
  /variants/ajax/flagsetcpresets/retrieve-update-destroy/{flagsetcpresets}/:
    get:
      operationId: variants_ajax_flagsetcpresets_retrieve_update_destroy_retrieve
      description: |-
        Allow retrieval, update, destruction of ``FlagsEtcPreset``.

        **URL:** ``/variants/ajax/flagsetcpresets/retrieve-update-destroy/<uuid:flagsetcpresets>/``
      parameters:
      - in: path
        name: flagsetcpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/FlagsEtcPresets'
          description: ''
    put:
      operationId: variants_ajax_flagsetcpresets_retrieve_update_destroy_update
      description: |-
        Allow retrieval, update, destruction of ``FlagsEtcPreset``.

        **URL:** ``/variants/ajax/flagsetcpresets/retrieve-update-destroy/<uuid:flagsetcpresets>/``
      parameters:
      - in: path
        name: flagsetcpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagsEtcPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlagsEtcPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlagsEtcPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/FlagsEtcPresets'
          description: ''
    patch:
      operationId: variants_ajax_flagsetcpresets_retrieve_update_destroy_partial_update
      description: |-
        Allow retrieval, update, destruction of ``FlagsEtcPreset``.

        **URL:** ``/variants/ajax/flagsetcpresets/retrieve-update-destroy/<uuid:flagsetcpresets>/``
      parameters:
      - in: path
        name: flagsetcpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlagsEtcPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFlagsEtcPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFlagsEtcPresets'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/FlagsEtcPresets'
          description: ''
    delete:
      operationId: variants_ajax_flagsetcpresets_retrieve_update_destroy_destroy
      description: |-
        Allow retrieval, update, destruction of ``FlagsEtcPreset``.

        **URL:** ``/variants/ajax/flagsetcpresets/retrieve-update-destroy/<uuid:flagsetcpresets>/``
      parameters:
      - in: path
        name: flagsetcpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /variants/ajax/frequencypresets/clone-factory-presets/{name}/:
    post:
      operationId: variants_ajax_frequencypresets_clone_factory_presets_create
      description: |-
        Clone factory presets.

        You must pass in a target PresetSet UUID as ``presetset``.

        **Method:** POST

        **URL:** ``/variants/ajax/frequency/clone-factory-presets/{name}/``
      parameters:
      - in: path
        name: name
        schema:
          type: string
          pattern: ^[a-zA-Z_-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrequencyPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FrequencyPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FrequencyPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/FrequencyPresets'
          description: ''
  /variants/ajax/frequencypresets/clone-other/{frequencypresets}/:
    post:
      operationId: variants_ajax_frequencypresets_clone_other_create
      description: |-
        Clone other preset set, by default in same project.

        Override target PresetSet with ``presetset``.

        **Method:** POST

        **URL:** ``/variants/ajax/frequencypresets/clone-other/<uuid:frequencypresets>/``
      parameters:
      - in: path
        name: frequencypresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrequencyPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FrequencyPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FrequencyPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/FrequencyPresets'
          description: ''
  /variants/ajax/frequencypresets/list-create/{presetset}/:
    get:
      operationId: variants_ajax_frequencypresets_list_create_list
      description: |-
        Create & list ``FrequencyPresets`` objects.

        **URL:** ``/variants/ajax/frequencypresets/list-create/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FrequencyPresets'
          description: ''
    post:
      operationId: variants_ajax_frequencypresets_list_create_create
      description: |-
        Create & list ``FrequencyPresets`` objects.

        **URL:** ``/variants/ajax/frequencypresets/list-create/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrequencyPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FrequencyPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FrequencyPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/FrequencyPresets'
          description: ''
  /variants/ajax/frequencypresets/retrieve-update-destroy/{frequencypresets}/:
    get:
      operationId: variants_ajax_frequencypresets_retrieve_update_destroy_retrieve
      description: |-
        Allow retrieval, update, destruction of ``FrequencyPresets``.

        **URL:** ``/variants/ajax/frequencypresets/retrieve-update-destroy/<uuid:frequencypresets>/``
      parameters:
      - in: path
        name: frequencypresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/FrequencyPresets'
          description: ''
    put:
      operationId: variants_ajax_frequencypresets_retrieve_update_destroy_update
      description: |-
        Allow retrieval, update, destruction of ``FrequencyPresets``.

        **URL:** ``/variants/ajax/frequencypresets/retrieve-update-destroy/<uuid:frequencypresets>/``
      parameters:
      - in: path
        name: frequencypresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrequencyPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FrequencyPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FrequencyPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/FrequencyPresets'
          description: ''
    patch:
      operationId: variants_ajax_frequencypresets_retrieve_update_destroy_partial_update
      description: |-
        Allow retrieval, update, destruction of ``FrequencyPresets``.

        **URL:** ``/variants/ajax/frequencypresets/retrieve-update-destroy/<uuid:frequencypresets>/``
      parameters:
      - in: path
        name: frequencypresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFrequencyPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFrequencyPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFrequencyPresets'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/FrequencyPresets'
          description: ''
    delete:
      operationId: variants_ajax_frequencypresets_retrieve_update_destroy_destroy
      description: |-
        Allow retrieval, update, destruction of ``FrequencyPresets``.

        **URL:** ``/variants/ajax/frequencypresets/retrieve-update-destroy/<uuid:frequencypresets>/``
      parameters:
      - in: path
        name: frequencypresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /variants/ajax/hpo-terms/:
    get:
      operationId: variants_ajax_hpo_terms_list
      description: |-
        A view that lists HPO terms based on a query string.
        Also includes OMIM, ORPHAN and DECIPHER terms.

        **URL:** ``/variants/ajax/hpo-terms/?query={string}/``

        **Methods:** See base API class.

        **Returns:** See base API class.
      tags:
      - variants
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HpoTerm'
          description: ''
  /variants/ajax/impactpresets/clone-factory-presets/{name}/:
    post:
      operationId: variants_ajax_impactpresets_clone_factory_presets_create
      description: |-
        Clone factory presets.

        You must pass in a target PresetSet UUID as ``presetset``.

        **Method:** POST

        **URL:** ``/variants/ajax/impact/clone-factory-presets/{name}/``
      parameters:
      - in: path
        name: name
        schema:
          type: string
          pattern: ^[a-zA-Z_-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpactPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImpactPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImpactPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ImpactPresets'
          description: ''
  /variants/ajax/impactpresets/clone-other/{impactpresets}/:
    post:
      operationId: variants_ajax_impactpresets_clone_other_create
      description: |-
        Clone other preset set, by default in same project.

        Override target PresetSet with ``presetset``.

        **Method:** POST

        **URL:** ``/variants/ajax/impactpresets/clone-other/<uuid:impactpresets>/``
      parameters:
      - in: path
        name: impactpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpactPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImpactPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImpactPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ImpactPresets'
          description: ''
  /variants/ajax/impactpresets/list-create/{presetset}/:
    get:
      operationId: variants_ajax_impactpresets_list_create_list
      description: |-
        Create & list ``ImpactPresets`` objects.

        **URL:** ``/variants/ajax/impactpresets/list-create/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImpactPresets'
          description: ''
    post:
      operationId: variants_ajax_impactpresets_list_create_create
      description: |-
        Create & list ``ImpactPresets`` objects.

        **URL:** ``/variants/ajax/impactpresets/list-create/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpactPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImpactPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImpactPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ImpactPresets'
          description: ''
  /variants/ajax/impactpresets/retrieve-update-destroy/{impactpresets}/:
    get:
      operationId: variants_ajax_impactpresets_retrieve_update_destroy_retrieve
      description: |-
        Allow retrieval, update, destruction of ``ImpactPresets``.

        **URL:** ``/variants/ajax/impactpresets/retrieve-update-destroy/<uuid:impactpresets>/``
      parameters:
      - in: path
        name: impactpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ImpactPresets'
          description: ''
    put:
      operationId: variants_ajax_impactpresets_retrieve_update_destroy_update
      description: |-
        Allow retrieval, update, destruction of ``ImpactPresets``.

        **URL:** ``/variants/ajax/impactpresets/retrieve-update-destroy/<uuid:impactpresets>/``
      parameters:
      - in: path
        name: impactpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpactPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImpactPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImpactPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ImpactPresets'
          description: ''
    patch:
      operationId: variants_ajax_impactpresets_retrieve_update_destroy_partial_update
      description: |-
        Allow retrieval, update, destruction of ``ImpactPresets``.

        **URL:** ``/variants/ajax/impactpresets/retrieve-update-destroy/<uuid:impactpresets>/``
      parameters:
      - in: path
        name: impactpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImpactPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImpactPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImpactPresets'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ImpactPresets'
          description: ''
    delete:
      operationId: variants_ajax_impactpresets_retrieve_update_destroy_destroy
      description: |-
        Allow retrieval, update, destruction of ``ImpactPresets``.

        **URL:** ``/variants/ajax/impactpresets/retrieve-update-destroy/<uuid:impactpresets>/``
      parameters:
      - in: path
        name: impactpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /variants/ajax/presetset/clone-factory-presets/:
    post:
      operationId: variants_ajax_presetset_clone_factory_presets_create
      description: |-
        Clone factory presets.

        You must pass in a target project UUID as ``project``.

        **Method:** POST

        **URL:** ``/variants/ajax/presetset/clone-factory-presets/``
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresetSet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PresetSet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PresetSet'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PresetSet'
          description: ''
  /variants/ajax/presetset/clone-other/{presetset}/:
    post:
      operationId: variants_ajax_presetset_clone_other_create
      description: |-
        Clone other preset set, by default in same project.

        Override target project with ``project``.

        **Method:** POST

        **URL:** ``/variants/ajax/presetset/clone-other/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresetSet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PresetSet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PresetSet'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PresetSet'
          description: ''
  /variants/ajax/presetset/list/:
    get:
      operationId: variants_ajax_presetset_list_list
      description: |-
        List all ``PresetSet`` objects visible to user.

        **URL:** ``/variants/ajax/presetset/list/``.
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PresetSet'
          description: ''
  /variants/ajax/presetset/list-create/{project}/:
    get:
      operationId: variants_ajax_presetset_list_create_list
      description: |-
        Create & list ``PresetSet``.

        **URL:** ``/variants/ajax/presetset/list-create/<uuid:project>/``
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PresetSet'
          description: ''
    post:
      operationId: variants_ajax_presetset_list_create_create
      description: |-
        Create & list ``PresetSet``.

        **URL:** ``/variants/ajax/presetset/list-create/<uuid:project>/``
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresetSet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PresetSet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PresetSet'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PresetSet'
          description: ''
  /variants/ajax/presetset/retrieve-update-destroy/{presetset}/:
    get:
      operationId: variants_ajax_presetset_retrieve_update_destroy_retrieve
      description: |-
        Allow retrieval, update, destruction of ``PresetSet``.

        **URL:** ``/variants/ajax/presetset/retrieve-update-destroy/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PresetSet'
          description: ''
    put:
      operationId: variants_ajax_presetset_retrieve_update_destroy_update
      description: |-
        Allow retrieval, update, destruction of ``PresetSet``.

        **URL:** ``/variants/ajax/presetset/retrieve-update-destroy/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresetSet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PresetSet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PresetSet'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PresetSet'
          description: ''
    patch:
      operationId: variants_ajax_presetset_retrieve_update_destroy_partial_update
      description: |-
        Allow retrieval, update, destruction of ``PresetSet``.

        **URL:** ``/variants/ajax/presetset/retrieve-update-destroy/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPresetSet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPresetSet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPresetSet'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PresetSet'
          description: ''
    delete:
      operationId: variants_ajax_presetset_retrieve_update_destroy_destroy
      description: |-
        Allow retrieval, update, destruction of ``PresetSet``.

        **URL:** ``/variants/ajax/presetset/retrieve-update-destroy/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /variants/ajax/project-default-presetset/retrieve/{project}/:
    get:
      operationId: variants_ajax_project_default_presetset_retrieve_retrieve
      description: |-
        List all presets for the given category.

        **URL:** ``/variants/ajax/project-default-presetset/<uuid:project>/``

        **Methods:** ``GET``

        **Returns:** A dict mapping each of the category names to category preset values.
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[a-zA-Z0-9\._-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PresetSet'
          description: ''
  /variants/ajax/project/qc/{project}/:
    get:
      operationId: variants_ajax_project_qc_retrieve
      description: |-
        A view that lists HPO terms based on a query string.
        Also includes OMIM, ORPHAN and DECIPHER terms.

        **URL:** ``/variants/ajax/hpo-terms/?query={string}/``

        **Methods:** ``GET``

        **Returns:** List of HPO terms that were found for that term, HPO id and name.
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseListQcStats'
          description: ''
  /variants/ajax/qualitypresets/clone-factory-presets/{name}/:
    post:
      operationId: variants_ajax_qualitypresets_clone_factory_presets_create
      description: |-
        Clone factory presets.

        You must pass in a target PresetSet UUID as ``presetset``.

        **Method:** POST

        **URL:** ``/variants/ajax/quality/clone-factory-presets/{name}/``
      parameters:
      - in: path
        name: name
        schema:
          type: string
          pattern: ^[a-zA-Z_-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualityPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QualityPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QualityPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/QualityPresets'
          description: ''
  /variants/ajax/qualitypresets/clone-other/{qualitypresets}/:
    post:
      operationId: variants_ajax_qualitypresets_clone_other_create
      description: |-
        Clone other preset set, by default in same project.

        Override target PresetSet with ``presetset``.

        **Method:** POST

        **URL:** ``/variants/ajax/qualitypresets/clone-other/<uuid:qualitypresets>/``
      parameters:
      - in: path
        name: qualitypresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualityPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QualityPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QualityPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/QualityPresets'
          description: ''
  /variants/ajax/qualitypresets/list-create/{presetset}/:
    get:
      operationId: variants_ajax_qualitypresets_list_create_list
      description: |-
        Create & list ``QualityPresets`` objects.

        **URL:** ``/variants/ajax/qualitypresets/list-create/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QualityPresets'
          description: ''
    post:
      operationId: variants_ajax_qualitypresets_list_create_create
      description: |-
        Create & list ``QualityPresets`` objects.

        **URL:** ``/variants/ajax/qualitypresets/list-create/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualityPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QualityPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QualityPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/QualityPresets'
          description: ''
  /variants/ajax/qualitypresets/retrieve-update-destroy/{qualitypresets}/:
    get:
      operationId: variants_ajax_qualitypresets_retrieve_update_destroy_retrieve
      description: |-
        Allow retrieval, update, destruction of ``QualityPresets``.

        **URL:** ``/variants/ajax/qualitypresets/retrieve-update-destroy/<uuid:qualitypresets>/``
      parameters:
      - in: path
        name: qualitypresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/QualityPresets'
          description: ''
    put:
      operationId: variants_ajax_qualitypresets_retrieve_update_destroy_update
      description: |-
        Allow retrieval, update, destruction of ``QualityPresets``.

        **URL:** ``/variants/ajax/qualitypresets/retrieve-update-destroy/<uuid:qualitypresets>/``
      parameters:
      - in: path
        name: qualitypresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualityPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QualityPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QualityPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/QualityPresets'
          description: ''
    patch:
      operationId: variants_ajax_qualitypresets_retrieve_update_destroy_partial_update
      description: |-
        Allow retrieval, update, destruction of ``QualityPresets``.

        **URL:** ``/variants/ajax/qualitypresets/retrieve-update-destroy/<uuid:qualitypresets>/``
      parameters:
      - in: path
        name: qualitypresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQualityPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQualityPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQualityPresets'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/QualityPresets'
          description: ''
    delete:
      operationId: variants_ajax_qualitypresets_retrieve_update_destroy_destroy
      description: |-
        Allow retrieval, update, destruction of ``QualityPresets``.

        **URL:** ``/variants/ajax/qualitypresets/retrieve-update-destroy/<uuid:qualitypresets>/``
      parameters:
      - in: path
        name: qualitypresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /variants/ajax/query-case/download/status/{exportfilebgjob}/:
    get:
      operationId: variants_ajax_query_case_download_status_retrieve
      description: |-
        Get status of generating results for download of a small variant query.

        **URL:** ``/variants/ajax/query-case/download/status/{exportfilebgjob.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: exportfilebgjob
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ExportFileBgJob'
          description: ''
  /variants/ajax/query-case/hpo-terms/{smallvariantquery}/:
    get:
      operationId: variants_ajax_query_case_hpo_terms_retrieve
      description: |-
        Fetch HPO terms of a small variant query.

        **URL:** ``/variants/ajax/query-case/hpo-terms/{query.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: smallvariantquery
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQueryHpoTerm'
          description: ''
  /variants/ajax/query-case/list/{case}/:
    get:
      operationId: variants_ajax_query_case_list_list
      description: |-
        List small variant queries for the given Case.

        **URL:** ``/variants/ajax/query-case/list/{case.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmallVariantQuery'
          description: ''
  /variants/ajax/query-case/query-settings-shortcut/{case}/:
    get:
      operationId: variants_ajax_query_case_query_settings_shortcut_retrieve
      description: |-
        Generate query settings for a given case by certain shortcuts.

        **URL:** ``/variants/ajax/query-case/query-settings-shortcut/{case.uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SettingsShortcuts'
          description: ''
  /variants/ajax/query-result-row/list/{smallvariantqueryresultset}/:
    get:
      operationId: variants_ajax_query_result_row_list_list
      description: |-
        Create or list small variant query

        **URL:** ``/variants/ajax/query-result-row/list/{smallvariantqueryresultset.uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: smallvariantqueryresultset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PaginatedSmallVariantQueryResultRowList'
          description: ''
  /variants/ajax/query-result-row/retrieve/{smallvariantqueryresultrow}/:
    get:
      operationId: variants_ajax_query_result_row_retrieve_retrieve
      description: |-
        Create or list small variant query

        **URL:** ``/variants/ajax/query-result-row/retrieve/{smallvariantqueryresultrow.uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: smallvariantqueryresultrow
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQueryResultRow'
          description: ''
  /variants/ajax/query-result-set/list/{smallvariantquery}/:
    get:
      operationId: variants_ajax_query_result_set_list_list
      description: |-
        Create or list small variant query

        **URL:** ``/variants/ajax/query-result-set/list/{smallvariantqueryresultset.uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: smallvariantquery
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PaginatedSmallVariantQueryResultSetList'
          description: ''
  /variants/ajax/query-result-set/retrieve/{smallvariantqueryresultset}/:
    get:
      operationId: variants_ajax_query_result_set_retrieve_retrieve
      description: |-
        Create or list small variant query

        **URL:** ``/variants/ajax/query-result-set/retrieve/{smallvariantqueryresultset.uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: smallvariantqueryresultset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQueryResultSet'
          description: ''
  /variants/ajax/query/list-create/{case}/:
    get:
      operationId: variants_ajax_query_list_create_list
      description: |-
        Create or list small variant query.

        **URL:** ``/variants/ajax/query/list-create/{case.uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmallVariantQuery'
          description: ''
    post:
      operationId: variants_ajax_query_list_create_create
      description: |-
        Create or list small variant query.

        **URL:** ``/variants/ajax/query/list-create/{case.uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmallVariantQuery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmallVariantQuery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmallVariantQuery'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQuery'
          description: ''
  /variants/ajax/query/retrieve-update-destroy/{smallvariantquery}/:
    get:
      operationId: variants_ajax_query_retrieve_update_destroy_retrieve
      description: |-
        Retrieve, update or destroy small variant query.

        **URL:** ``/variants/ajax/query/retrieve-update-destroy/{smallvariantquery.uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: smallvariantquery
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQueryWithLogs'
          description: ''
    put:
      operationId: variants_ajax_query_retrieve_update_destroy_update
      description: |-
        Retrieve, update or destroy small variant query.

        **URL:** ``/variants/ajax/query/retrieve-update-destroy/{smallvariantquery.uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: smallvariantquery
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmallVariantQueryWithLogs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmallVariantQueryWithLogs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmallVariantQueryWithLogs'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQueryWithLogs'
          description: ''
    patch:
      operationId: variants_ajax_query_retrieve_update_destroy_partial_update
      description: |-
        Retrieve, update or destroy small variant query.

        **URL:** ``/variants/ajax/query/retrieve-update-destroy/{smallvariantquery.uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: smallvariantquery
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantQueryWithLogs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantQueryWithLogs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantQueryWithLogs'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQueryWithLogs'
          description: ''
    delete:
      operationId: variants_ajax_query_retrieve_update_destroy_destroy
      description: |-
        Retrieve, update or destroy small variant query.

        **URL:** ``/variants/ajax/query/retrieve-update-destroy/{smallvariantquery.uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: smallvariantquery
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /variants/ajax/quickpresets/clone-other/{quickpresets}/:
    post:
      operationId: variants_ajax_quickpresets_clone_other_create
      description: |-
        Clone other quick presets.

        As the per-category presets must exist in the same preset set, must be created in the same preset set.

        **Method:** POST

        **URL:** ``/variants/ajax/quickpresets/clone-other/<uuid:quickpresets>/``
      parameters:
      - in: path
        name: quickpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuickPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuickPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/QuickPresets'
          description: ''
  /variants/ajax/quickpresets/list-create/{presetset}/:
    get:
      operationId: variants_ajax_quickpresets_list_create_list
      description: |-
        Create & list ``QuickPresets`` objects.

        **URL:** ``/variants/ajax/quickpresets/list-create/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuickPresets'
          description: ''
    post:
      operationId: variants_ajax_quickpresets_list_create_create
      description: |-
        Create & list ``QuickPresets`` objects.

        **URL:** ``/variants/ajax/quickpresets/list-create/<uuid:presetset>/``
      parameters:
      - in: path
        name: presetset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuickPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuickPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/QuickPresets'
          description: ''
  /variants/ajax/quickpresets/retrieve-update-destroy/{quickpresets}/:
    get:
      operationId: variants_ajax_quickpresets_retrieve_update_destroy_retrieve
      description: |-
        Allow retrieval, update, destruction of ``QuickPreset``.

        **URL:** ``/variants/ajax/quickpresets/retrieve-update-destroy/<uuid:quickpreset>/``
      parameters:
      - in: path
        name: quickpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/QuickPresets'
          description: ''
    put:
      operationId: variants_ajax_quickpresets_retrieve_update_destroy_update
      description: |-
        Allow retrieval, update, destruction of ``QuickPreset``.

        **URL:** ``/variants/ajax/quickpresets/retrieve-update-destroy/<uuid:quickpreset>/``
      parameters:
      - in: path
        name: quickpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuickPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuickPresets'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/QuickPresets'
          description: ''
    patch:
      operationId: variants_ajax_quickpresets_retrieve_update_destroy_partial_update
      description: |-
        Allow retrieval, update, destruction of ``QuickPreset``.

        **URL:** ``/variants/ajax/quickpresets/retrieve-update-destroy/<uuid:quickpreset>/``
      parameters:
      - in: path
        name: quickpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuickPresets'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuickPresets'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuickPresets'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/QuickPresets'
          description: ''
    delete:
      operationId: variants_ajax_quickpresets_retrieve_update_destroy_destroy
      description: |-
        Allow retrieval, update, destruction of ``QuickPreset``.

        **URL:** ``/variants/ajax/quickpresets/retrieve-update-destroy/<uuid:quickpreset>/``
      parameters:
      - in: path
        name: quickpresets
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /variants/ajax/small-variant-comment/delete/{smallvariantcomment}/:
    delete:
      operationId: variants_ajax_small_variant_comment_delete_destroy
      description: |-
        Delete small variant comment

        **URL:** ``/variants/ajax/small-variant-comment/delete/{smallvariantcomment.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: smallvariantcomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /variants/ajax/small-variant-comment/list-create/{case}/:
    get:
      operationId: variants_ajax_small_variant_comment_list_create_list
      description: |-
        Create small variant comment

        **URL:** ``/variants/ajax/small-variant-comment/list-create/{case.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmallVariantComment'
          description: ''
    post:
      operationId: variants_ajax_small_variant_comment_list_create_create
      description: |-
        Create small variant comment

        **URL:** ``/variants/ajax/small-variant-comment/list-create/{case.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmallVariantComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmallVariantComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmallVariantComment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantComment'
          description: ''
  /variants/ajax/small-variant-comment/list-project/{project}/:
    get:
      operationId: variants_ajax_small_variant_comment_list_project_list
      description: |-
        A view that allows to list existing comments for a project and variant.

        **URL:** ``/variants/ajax/small-variant-comment/list-project/{project.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmallVariantCommentProject'
          description: ''
  /variants/ajax/small-variant-comment/update/{smallvariantcomment}/:
    put:
      operationId: variants_ajax_small_variant_comment_update_update
      description: |-
        Update small variant comment

        **URL:** ``/variants/ajax/small-variant-comment/update/{smallvariantcomment.sodar_uuid}/``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: smallvariantcomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmallVariantComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmallVariantComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmallVariantComment'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantComment'
          description: ''
    patch:
      operationId: variants_ajax_small_variant_comment_update_partial_update
      description: |-
        Update small variant comment

        **URL:** ``/variants/ajax/small-variant-comment/update/{smallvariantcomment.sodar_uuid}/``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: smallvariantcomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantComment'
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantComment'
          description: ''
  /variants/ajax/small-variant-flags/delete/{smallvariantflags}/:
    delete:
      operationId: variants_ajax_small_variant_flags_delete_destroy
      description: |-
        Delete small variant flags

        **URL:** ``/variants/ajax/small-variant-flags/delete/{smallvariantflags.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: smallvariantflags
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /variants/ajax/small-variant-flags/list-create/{case}/:
    get:
      operationId: variants_ajax_small_variant_flags_list_create_list
      description: |-
        Create small variant flags

        **URL:** ``/variants/ajax/small-variant-flags/list-create/{case.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmallVariantFlags'
          description: ''
    post:
      operationId: variants_ajax_small_variant_flags_list_create_create
      description: |-
        Create small variant flags

        **URL:** ``/variants/ajax/small-variant-flags/list-create/{case.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmallVariantFlags'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmallVariantFlags'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmallVariantFlags'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantFlags'
          description: ''
  /variants/ajax/small-variant-flags/list-project/{project}/:
    get:
      operationId: variants_ajax_small_variant_flags_list_project_list
      description: |-
        A view that allows to list existing flags for a project and variant.

        **URL:** ``/variants/ajax/small-variant-flags/list-project/{project.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmallVariantFlagsProject'
          description: ''
  /variants/ajax/small-variant-flags/update/{smallvariantflags}/:
    put:
      operationId: variants_ajax_small_variant_flags_update_update
      description: |-
        Update small variant flags

        **URL:** ``/variants/ajax/small-variant-flags/update/{smallvariantflags.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: smallvariantflags
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmallVariantFlags'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmallVariantFlags'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmallVariantFlags'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantFlags'
          description: ''
    patch:
      operationId: variants_ajax_small_variant_flags_update_partial_update
      description: |-
        Update small variant flags

        **URL:** ``/variants/ajax/small-variant-flags/update/{smallvariantflags.sodar_uuid}``

        **Methods:** See base API class.

        **Parameters:** See base API class.

        **Returns:** See base API class.
      parameters:
      - in: path
        name: smallvariantflags
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantFlags'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantFlags'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantFlags'
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantFlags'
          description: ''
  /variants/ajax/smallvariant/user-annotated-case/{case}/:
    get:
      operationId: variants_ajax_smallvariant_user_annotated_case_list
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmallVariantForResult'
          description: ''
  /variants/api/acmg-criteria-rating/delete/{acmgcriteriarating}/:
    delete:
      operationId: variants_api_acmg_criteria_rating_delete_destroy
      description: |-
        A view that allows to delete ACMG ratings.

        **URL:** ``/variants/api/acmg-criteria-rating/delete/{acmgcriteriarating.sodar_uuid}/``

        **Methods:** ``DELETE``

        **Returns:**
      parameters:
      - in: path
        name: acmgcriteriarating
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /variants/api/acmg-criteria-rating/list-create/{case}/:
    get:
      operationId: variants_api_acmg_criteria_rating_list_create_list
      description: |-
        A view that allows to create new ACMG ratings.

        **URL:** ``/variants/api/acmg-criteria-rating/list-create/{case.sodar_uuid}/``

        **Query Arguments:**

        - release
        - chromosome
        - start
        - end
        - reference
        - alternative

        **Methods:** ``POST``

        **Returns:**
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PaginatedAcmgCriteriaRatingList'
          description: ''
    post:
      operationId: variants_api_acmg_criteria_rating_list_create_create
      description: |-
        A view that allows to create new ACMG ratings.

        **URL:** ``/variants/api/acmg-criteria-rating/list-create/{case.sodar_uuid}/``

        **Query Arguments:**

        - release
        - chromosome
        - start
        - end
        - reference
        - alternative

        **Methods:** ``POST``

        **Returns:**
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcmgCriteriaRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcmgCriteriaRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcmgCriteriaRating'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/AcmgCriteriaRating'
          description: ''
  /variants/api/acmg-criteria-rating/update/{acmgcriteriarating}/:
    put:
      operationId: variants_api_acmg_criteria_rating_update_update
      description: |-
        A view that allows to create new ACMG ratings.

        **URL:** ``/variants/api/acmg-criteria-rating/update/{acmgcriteriarating.sodar_uuid}/``

        **Methods:** ``PUT``, ``PATCH``

        **Returns:**
      parameters:
      - in: path
        name: acmgcriteriarating
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcmgCriteriaRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AcmgCriteriaRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AcmgCriteriaRating'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/AcmgCriteriaRating'
          description: ''
    patch:
      operationId: variants_api_acmg_criteria_rating_update_partial_update
      description: |-
        A view that allows to create new ACMG ratings.

        **URL:** ``/variants/api/acmg-criteria-rating/update/{acmgcriteriarating.sodar_uuid}/``

        **Methods:** ``PUT``, ``PATCH``

        **Returns:**
      parameters:
      - in: path
        name: acmgcriteriarating
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAcmgCriteriaRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAcmgCriteriaRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAcmgCriteriaRating'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/AcmgCriteriaRating'
          description: ''
  /variants/api/case/retrieve/{case}/:
    get:
      operationId: variants_api_case_retrieve_retrieve
      description: |-
        Retrieve detail of the specified case.

        **URL:** ``/variants/api/case/retrieve/{case.sodar_uuid}/``

        **Methods:** ``GET``

        **Returns:**

        - ``date_created`` - creation timestamp (ISO 8601 ``str``)
        - ``date_modified`` - modification timestamp (ISO 8601 ``str``)
        - ``index`` - index sample name (``str``)
        - ``name`` - case name (``str``)
        - ``notes`` - any notes related to case (``str`` or ``null``)
        - ``num_small_vars`` - number of small variants (``int`` or ``null``)
        - ``num_svs`` - number of structural variants (``int`` or ``null``)
        - ``pedigree`` - ``list`` of ``dict`` representing pedigree entries, ``dict`` have keys

            - ``sex`` - PLINK-PED encoded biological sample sex (``int``, 0-unknown, 1-male, 2-female)
            - ``father`` - father sample name (``str``)
            - ``mother`` - mother sample name (``str``)
            - ``name`` - current sample's name (``str``)
            - ``affected`` - PLINK-PED encoded affected state (``int``, 0-unknown, 1-unaffected, 2-affected)
            - ``has_gt_entries`` - whether sample has genotype entries (``boolean``)

        - ``project`` - UUID of owning project (``str``)
        - ``release`` - genome build (``str``, one of ``["GRCh37", "GRCh37"]``)
        - ``sodar_uuid`` - case UUID (``str``)
        - ``status`` - status of case (``str``, one of ``"initial"``, ``"active"``, ``"closed-unsolved"``,
          ``"closed-uncertain"``, ``"closed-solved"``)
        - ``tags`` - ``list`` of ``str`` tags
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/Case'
          description: ''
  /variants/api/extra-anno-fields/:
    get:
      operationId: variants_api_extra_anno_fields_list
      description: |-
        A view that returns all extra annotation field names.

        **URL:** ``/variants/api/extra-anno-fields/``

        **Methods:** ``GET``

        **Returns:** List of extra annotation field names.
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtraAnnoField'
          description: ''
  /variants/api/hpo-terms/:
    get:
      operationId: variants_api_hpo_terms_list
      description: |-
        A view that lists HPO terms based on a query string.
        Also includes OMIM, ORPHAN and DECIPHER terms.

        **URL:** ``/variants/api/hpo-terms/?query={string}/``

        **Methods:** ``GET``

        **Returns:** List of HPO terms that were found for that term, HPO id and name.
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HpoTerm'
          description: ''
  /variants/api/project/qc/{project}/:
    get:
      operationId: variants_api_project_qc_retrieve
      description: Render JSON with project-wide case statistics
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/CaseListQcStats'
          description: ''
  /variants/api/query-case/download/status/{exportfilebgjob}/:
    get:
      operationId: variants_api_query_case_download_status_retrieve
      description: |-
        Get status of generating results for download of a small variant query.

        **URL:** ``/variants/api/query-case/download/status/{job.sodar_uuid}``

        **Methods:** ``GET``

        **Returns:**
      parameters:
      - in: path
        name: exportfilebgjob
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/ExportFileBgJob'
          description: ''
  /variants/api/query-case/hpo-terms/{smallvariantquery}/:
    get:
      operationId: variants_api_query_case_hpo_terms_retrieve
      description: |-
        Fetch HPO terms for small variant query.

        **URL:** ``/variants/api/query-case/hpo-terms/{query.sodar_uuid}``

        **Methods:** ``GET``

        **Returns:**
      parameters:
      - in: path
        name: smallvariantquery
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQueryHpoTerm'
          description: ''
  /variants/api/query-case/list/{case}/:
    get:
      operationId: variants_api_query_case_list_list
      description: |-
        List small variant queries for the given Case.

        **URL:** ``/variants/api/query-case/list/{case.sodar_uuid}``

        **Methods:** ``GET``

        **Parameters:**

        - ``page`` - specify page to return (default/first is ``1``)
        - ``page_size`` -- number of elements per page (default is ``10``, maximum is ``100``)

        **Returns:**

        - ``count`` - number of total elements (``int``)
        - ``next`` - URL to next page (``str`` or ``null``)
        - ``previous`` - URL to next page (``str`` or ``null``)
        - ``results`` - ``list`` of case small variant query details (see :py:class:`SmallVariantQuery`)
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmallVariantQuery'
          description: ''
  /variants/api/query-case/query-settings-shortcut/{case}/:
    get:
      operationId: variants_api_query_case_query_settings_shortcut_retrieve
      description: |-
        Generate query settings for a given case by certain shortcuts.

        **URL:** ``/variants/api/query-case/query-settings-shortcut/{case.uuid}``

        **Methods:** ``GET``

        **Parameters:**

        - ``database`` - the database to query, one of ``"refseq"`` (default) and ``"ensembl"``

        - ``quick_preset`` - overall preset selection using the presets below, valid values are

             - ``defaults`` - applies presets that are recommended for starting out without a specific hypothesis
             - ``de_novo`` - applies presets that are recommended for starting out when the hypothesis is dominannt
               inheritance with *de novo* variants
             - ``dominant`` - applies presets that are recommended for starting out when the hypothesis is dominant
               inheritance (but not with *de novo* variants)
             - ``homozygous_recessive`` - applies presets that are recommended for starting out when the hypothesis is
               recessive with homzygous variants
             - ``compound_heterozygous`` - applies presets that are recommended for starting out when the hypothesis is
               recessive with compound heterozygous variants
             - ``recessive`` - applies presets that are recommended for starting out when the hypothesis is recessive mode
               of inheritance
             - ``x_recessive`` - applies presets that are recommended for starting out when the hypothesis is X recessive
               mode of inheritance
             - ``clinvar_pathogenic`` - apply presets that are recommended for screening variants for known pathogenic
               variants present Clinvar
             - ``mitochondrial`` - apply presets recommended for starting out to filter for mitochondrial mode of
               inheritance
             - ``whole_exomes`` - apply presets that return all variants of the case, regardless of frequency, quality etc.

        - ``inheritance`` - preset selection for mode of inheritance, valid values are

            - ``any`` - no particular constraint on inheritance (default)
            - ``dominant`` - allow variants compatible with dominant mode of inheritance (includes *de novo* variants)
            - ``homozygous_recessive`` - allow variants compatible with homozygous recessive mode of inheritance
            - ``compound_heterozygous`` - allow variants compatible with compound heterozygous recessive mode of
              inheritance
            - ``recessive`` - allow variants compatible with recessive mode of inheritance of a disease/trait (includes
              both homozygous and compound heterozygous recessive)
            - ``x_recessive`` - allow variants compatible with X_recessive mode of inheritance of a disease/trait
            - ``mitochondrial`` - mitochondrial inheritance (also applicable for "clinvar pathogenic")
            - ``custom`` - indicates custom settings such that none of the above inheritance settings applies

        - ``frequency`` - preset selection for frequencies, valid values are

            - ``any`` - do not apply any thresholds
            - ``dominant_super_strict`` - apply thresholds considered "very strict" in a dominant disease context
            - ``dominant_strict`` - apply thresholds considered "strict" in a dominant disease context (default)
            - ``dominant_relaxed`` - apply thresholds considered "relaxed" in a dominant disease context
            - ``recessive_strict`` - apply thresholds considered "strict" in a recessiv disease context
            - ``recessive_relaxed`` - apply thresholds considered "relaxed" in a recessiv disease context
            - ``custom`` - indicates custom settings such that none of the above frequency settings applies

        - ``impact`` - preset selection for molecular impact values, valid values are

            - ``null_variant`` - allow variants that are predicted to be null variants
            - ``aa_change_splicing`` - allow variants that are predicted to change the amino acid of the gene's
              protein and also splicing variants
            - ``all_coding_deep_intronic`` - allow all coding variants and also deeply intronic ones
            - ``whole_transcript`` - allow variants from the whole transcript (exonic/intronic)
            - ``any_impact`` - allow any predicted molecular impact
            - ``custom`` - indicates custom settings such that none of the above impact settings applies

        - ``quality`` - preset selection for variant call quality values, valid values are

            - ``super_strict`` - very stricdt quality settings
            - ``strict`` - strict quality settings, used as the default
            - ``relaxed`` - relaxed quality settings
            - ``any`` - ignore quality, all variants pass filter
            - ``custom`` - indicates custom settings such that none of the above quality settings applies

        - ``chromosomes`` - preset selection for selecting chromosomes/regions/genes allow/block lists, valid values are

            - ``whole_genome`` - the defaults settings selecting the whole genome
            - ``autosomes`` - select the variants lying on the autosomes only
            - ``x_chromosome`` - select variants on the X chromosome only
            - ``y_chromosome`` - select variants on the Y chromosome only
            - ``mt_chromosome`` - select variants on the mitochondrial chromosome only
            - ``custom`` - indicates custom settings such that none of the above chromosomes presets applies

        - ``flagsetc`` - preset selection for "flags etc." section, valid values are

            - ``defaults`` - the defaults also used in the user interface
            - ``clinvar_only`` - select variants present in Clinvar only
            - ``user_flagged`` - select user_flagged variants only
            - ``custom`` - indicates custom settings such that none of the above flags etc. presets apply

        **Returns:**

        - ``presets`` - a ``dict`` with the following keys; this mirrors back the quick presets and further presets
          selected in the parameters

            - ``quick_presets`` - one of the ``quick_presets`` preset values from above
            - ``inheritance`` - one of the ``inheritance`` preset values from above
            - ``frequency`` - one of the ``frequency`` preset values from above
            - ``impact`` - one of the ``impact`` preset values from above
            - ``quality`` - one of the ``quality`` preset values from above
            - ``chromosomes`` - one of the ``chromosomes`` preset values from above
            - ``flagsetc`` - one of the ``flagsetc`` preset values from above

        - ``query_settings`` - a ``dict`` with the query settings ready to be used for the given case; this will
          follow :ref:`api_json_schemas_case_query_v1`.
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SettingsShortcuts'
          description: ''
  /variants/api/query-result-row/list/{smallvariantqueryresultset}/:
    get:
      operationId: variants_api_query_result_row_list_list
      description: |-
        API endpoint for listing query result rows.

        **URL:** ``/variants/api/query-result-row/list/{smallvariantqueryresultset.sodar_uuid}/``

        **Methods:** ``GET``
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: smallvariantqueryresultset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PaginatedSmallVariantQueryResultRowList'
          description: ''
  /variants/api/query-result-row/retrieve/{smallvariantqueryresultrow}/:
    get:
      operationId: variants_api_query_result_row_retrieve_retrieve
      description: |-
        API endpoint for retrieving one result row.

        **URL:** ``/variants/api/query-result-row/retrieve/{smallvariantqueryresultrow.sodar_uuid}/``

        **Methods:** ``GET``
      parameters:
      - in: path
        name: smallvariantqueryresultrow
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQueryResultRow'
          description: ''
  /variants/api/query-result-set/list/{smallvariantquery}/:
    get:
      operationId: variants_api_query_result_set_list_list
      description: |-
        API endpoint for listing query result sets for a query.

        **URL:** ``/variants/api/query-result-set/list/{smallvariantquery.sodar_uuid}/``

        **Methods:** ``GET``
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: smallvariantquery
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/PaginatedSmallVariantQueryResultSetList'
          description: ''
  /variants/api/query-result-set/retrieve/{smallvariantqueryresultset}/:
    get:
      operationId: variants_api_query_result_set_retrieve_retrieve
      description: |-
        API endpoint for retrieving query result sets.

        **URL:** ``/variants/api/query-result-set/retrieve/{smallvariantquery.sodar_uuid}/``

        **Methods:** ``GET``
      parameters:
      - in: path
        name: smallvariantqueryresultset
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQueryResultSet'
          description: ''
  /variants/api/query/list-create/{case}/:
    get:
      operationId: variants_api_query_list_create_list
      description: |-
        API endpoint for listing and creating SmallVariant queries for a given case.

        After creation, a background job will be started to execute the query.

        **URL:** ``/variants/api/query/list-create/{case.sodar_uuid}/``

        **Methods:** ``GET``, ``POST``
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmallVariantQuery'
          description: ''
    post:
      operationId: variants_api_query_list_create_create
      description: |-
        API endpoint for listing and creating SmallVariant queries for a given case.

        After creation, a background job will be started to execute the query.

        **URL:** ``/variants/api/query/list-create/{case.sodar_uuid}/``

        **Methods:** ``GET``, ``POST``
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmallVariantQuery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmallVariantQuery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmallVariantQuery'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQuery'
          description: ''
  /variants/api/query/retrieve-update-destroy/{smallvariantquery}/:
    get:
      operationId: variants_api_query_retrieve_update_destroy_retrieve
      description: |-
        API endpoint for retrieving, updating, and deleting SmallVariant queries for a given case.

        **URL:** ``/variants/api/query/retrieve-update-destroy/{smallvariantquery.sodar_uuid}/``

        **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
      parameters:
      - in: path
        name: smallvariantquery
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQueryWithLogs'
          description: ''
    put:
      operationId: variants_api_query_retrieve_update_destroy_update
      description: |-
        API endpoint for retrieving, updating, and deleting SmallVariant queries for a given case.

        **URL:** ``/variants/api/query/retrieve-update-destroy/{smallvariantquery.sodar_uuid}/``

        **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
      parameters:
      - in: path
        name: smallvariantquery
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmallVariantQueryWithLogs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmallVariantQueryWithLogs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmallVariantQueryWithLogs'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQueryWithLogs'
          description: ''
    patch:
      operationId: variants_api_query_retrieve_update_destroy_partial_update
      description: |-
        API endpoint for retrieving, updating, and deleting SmallVariant queries for a given case.

        **URL:** ``/variants/api/query/retrieve-update-destroy/{smallvariantquery.sodar_uuid}/``

        **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
      parameters:
      - in: path
        name: smallvariantquery
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantQueryWithLogs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantQueryWithLogs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantQueryWithLogs'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantQueryWithLogs'
          description: ''
    delete:
      operationId: variants_api_query_retrieve_update_destroy_destroy
      description: |-
        API endpoint for retrieving, updating, and deleting SmallVariant queries for a given case.

        **URL:** ``/variants/api/query/retrieve-update-destroy/{smallvariantquery.sodar_uuid}/``

        **Methods:** ``GET``, ``PATCH``, ``PUT``, ``DELETE``
      parameters:
      - in: path
        name: smallvariantquery
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '204':
          description: No response body
  /variants/api/small-variant-comment/delete/{smallvariantcomment}/:
    delete:
      operationId: variants_api_small_variant_comment_delete_destroy
      description: |-
        A view that allows to delete comments.

        **URL:** ``/variants/api/small-variant-comment/delete/{smallvariantcomment.sodar_uuid}/``

        **Methods:** ``DELETE``

        **Returns:**
      parameters:
      - in: path
        name: smallvariantcomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /variants/api/small-variant-comment/list-create/{case}/:
    get:
      operationId: variants_api_small_variant_comment_list_create_list
      description: |-
        A view that allows to list existing comments and new ones.

        **URL:** ``/variants/api/small-variant-comment/list-create/{case.sodar_uuid}/``

        **Query Arguments:**

        - release
        - chromosome
        - start
        - end
        - reference
        - alternative

        **Methods:** ``GET``, ``POST``

        **Returns:**
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmallVariantComment'
          description: ''
    post:
      operationId: variants_api_small_variant_comment_list_create_create
      description: |-
        A view that allows to list existing comments and new ones.

        **URL:** ``/variants/api/small-variant-comment/list-create/{case.sodar_uuid}/``

        **Query Arguments:**

        - release
        - chromosome
        - start
        - end
        - reference
        - alternative

        **Methods:** ``GET``, ``POST``

        **Returns:**
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmallVariantComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmallVariantComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmallVariantComment'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantComment'
          description: ''
  /variants/api/small-variant-comment/list-project/{project}/:
    get:
      operationId: variants_api_small_variant_comment_list_project_list
      description: |-
        A view that allows to list existing comments for a project and variant.

        **URL:** ``/variants/api/small-variant-comment/list-project/{project.sodar_uuid}/``

        **Query Arguments:**

        - release
        - chromosome
        - start
        - end
        - reference
        - alternative
        - exclude_case_uuid

        **Methods:** ``GET``

        **Returns:**
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmallVariantCommentProject'
          description: ''
  /variants/api/small-variant-comment/update/{smallvariantcomment}/:
    put:
      operationId: variants_api_small_variant_comment_update_update
      description: |-
        A view that allows to update comments.

        **URL:** ``/variants/api/small-variant-comment/update/{smallvariantcomment.sodar_uuid}/``

        **Methods:** ``PUT``, ``PATCH``

        **Returns:**
      parameters:
      - in: path
        name: smallvariantcomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmallVariantComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmallVariantComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmallVariantComment'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantComment'
          description: ''
    patch:
      operationId: variants_api_small_variant_comment_update_partial_update
      description: |-
        A view that allows to update comments.

        **URL:** ``/variants/api/small-variant-comment/update/{smallvariantcomment.sodar_uuid}/``

        **Methods:** ``PUT``, ``PATCH``

        **Returns:**
      parameters:
      - in: path
        name: smallvariantcomment
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantComment'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantComment'
          description: ''
  /variants/api/small-variant-flags/delete/{smallvariantflags}/:
    delete:
      operationId: variants_api_small_variant_flags_delete_destroy
      description: |-
        A view that allows to delete flags.

        **URL:** ``/variants/api/small-variant-flags/delete/{smallvariantflags.sodar_uuid}/``

        **Methods:** ``DELETE``

        **Returns:**
      parameters:
      - in: path
        name: smallvariantflags
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '204':
          description: No response body
  /variants/api/small-variant-flags/list-create/{case}/:
    get:
      operationId: variants_api_small_variant_flags_list_create_list
      description: |-
        A view that allows to list existing flags and create new ones.

        **URL:** ``/variants/api/small-variant-flags/list-create/{case.sodar_uuid}/``

        **Query Arguments:**

        - release
        - chromosome
        - start
        - end
        - reference
        - alternative

        **Methods:** ``GET``, ``POST``

        **Returns:**
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmallVariantFlags'
          description: ''
    post:
      operationId: variants_api_small_variant_flags_list_create_create
      description: |-
        A view that allows to list existing flags and create new ones.

        **URL:** ``/variants/api/small-variant-flags/list-create/{case.sodar_uuid}/``

        **Query Arguments:**

        - release
        - chromosome
        - start
        - end
        - reference
        - alternative

        **Methods:** ``GET``, ``POST``

        **Returns:**
      parameters:
      - in: path
        name: case
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmallVariantFlags'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmallVariantFlags'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmallVariantFlags'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '201':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantFlags'
          description: ''
  /variants/api/small-variant-flags/list-project/{project}/:
    get:
      operationId: variants_api_small_variant_flags_list_project_list
      description: |-
        A view that allows to list existing comments for a project and variant.

        **URL:** ``/variants/api/small-variant-flags/list-project/{project.sodar_uuid}/``

        **Query Arguments:**

        - release
        - chromosome
        - start
        - end
        - reference
        - alternative
        - exclude_case_uuid

        **Methods:** ``GET``

        **Returns:**
      parameters:
      - in: path
        name: project
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmallVariantFlagsProject'
          description: ''
  /variants/api/small-variant-flags/update/{smallvariantflags}/:
    put:
      operationId: variants_api_small_variant_flags_update_update
      description: |-
        A view that allows to update flags.

        **URL:** ``/variants/api/small-variant-flags/update/{smallvariantflags.sodar_uuid}/``

        **Methods:** ``PUT``, ``PATCH``

        **Returns:**
      parameters:
      - in: path
        name: smallvariantflags
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmallVariantFlags'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SmallVariantFlags'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SmallVariantFlags'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantFlags'
          description: ''
    patch:
      operationId: variants_api_small_variant_flags_update_partial_update
      description: |-
        A view that allows to update flags.

        **URL:** ``/variants/api/small-variant-flags/update/{smallvariantflags.sodar_uuid}/``

        **Methods:** ``PUT``, ``PATCH``

        **Returns:**
      parameters:
      - in: path
        name: smallvariantflags
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - variants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantFlags'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantFlags'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSmallVariantFlags'
      security:
      - basicAuth: []
      - cookieAuth: []
      - knoxApiToken: []
      - {}
      responses:
        '200':
          content:
            application/vnd.bihealth.varfish+json:
              schema:
                $ref: '#/components/schemas/SmallVariantFlags'
          description: ''
components:
  schemas:
    AcmgCriteriaRating:
      type: object
      properties:
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Case SODAR UUID
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reference:
          type: string
          maxLength: 512
        alternative:
          type: string
          maxLength: 512
        pvs1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: ('null variant (nonsense, frameshift, canonical ±1 or 2 splice
            sites, initiation codon, single or multiexon deletion) in a gene where
            LOF is a known mechanism of disease',)
        ps1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Same amino acid change as a previously established pathogenic
            variant regardless of nucleotide change
        ps2:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: De novo (both maternity and paternity confirmed) in a patient
            with the disease and no family history
        ps3:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Well-established in vitro or in vivo functional studies supportive
            of a damaging effect on the gene or gene product
        ps4:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The prevalence of the variant in affected individuals is significantly
            increased compared with the prevalence in controls
        pm1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Located in a mutational hot spot and/or critical and well-established
            functional domain (e.g., active site of an enzyme) without benign variation
        pm2:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Absent from controls (or at extremely low frequency if recessive)
            in Exome Sequencing Project, 1000 Genomes Project, or Exome Aggregation
            Consortium
        pm3:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: For recessive disorders, detected in trans with a pathogenic
            variant
        pm4:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Protein length changes as a result of in-frame deletions/insertions
            in a nonrepeat region or stop-loss variants
        pm5:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Novel missense change at an amino acid residue where a different
            missense change determined to be pathogenic has been seen before
        pm6:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Assumed de novo, but without confirmation of paternity and
            maternity
        pp1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Cosegregation with disease in multiple affected family members
            in a gene definitively known to cause the disease
        pp2:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: 'Missense variant in a gene that has a low rate of benign missense
            variation and in which missense variants are: a common mechanism of disease'
        pp3:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Multiple lines of computational evidence support a deleterious
            effect on the gene or gene product (conservation, evolutionary, splicing
            impact, etc.)
        pp4:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Patient's phenotype or family history is highly specific for
            a disease with a single genetic etiology
        pp5:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Reputable source recently reports variant as pathogenic, but
            the evidence is not available to the laboratory to perform an independent
            evaluation
        ba1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Allele frequency is >5% in Exome Sequencing Project, 1000 Genomes
            Project, or Exome Aggregation Consortium
        bs1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Allele frequency is greater than expected for disorder (see
            Table 6)
        bs2:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Observed in a healthy adult individual for a recessive (homozygous),
            dominant (heterozygous), or X-linked (hemizygous) disorder, with full
            penetrance expected at an early age
        bs3:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Well-established in vitro or in vivo functional studies show
            no damaging effect on protein function or splicing
        bs4:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: 'BS4: Lack of segregation in affected members of a family'
        bp1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Missense variant in a gene for which primarily truncating variants
            are known to cause disease
        bp2:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Observed in trans with a pathogenic variant for a fully penetrant
            dominant gene/disorder or observed in cis with a pathogenic variant in
            any inheritance pattern
        bp3:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: In-frame deletions/insertions in a repetitive region without
            a known function
        bp4:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Multiple lines of computational evidence suggest no impact
            on gene or gene product (conservation, evolutionary, splicing impact,
            etc.)
        bp5:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Variant found in a case with an alternate molecular basis for
            disease
        bp6:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Reputable source recently reports variant as benign, but the
            evidence is not available to the laboratory to perform an independent
            evaluation
        bp7:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: A synonymous (silent) variant for which splicing prediction
            algorithms predict no impact to the splice consensus sequence nor the
            creation of a new splice site AND the nucleotide is not highly conserved
        class_auto:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: ACMG Classification
          description: Result of the ACMG classification
        class_override:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Use this field to override the auto-computed class assignment
        acmg_class:
          type: integer
          nullable: true
          readOnly: true
      required:
      - acmg_class
      - alternative
      - case
      - chromosome
      - date_created
      - date_modified
      - end
      - reference
      - release
      - sodar_uuid
      - start
      - user
    ActionEnum:
      enum:
      - create
      - update
      - delete
      type: string
      description: |-
        * `create` - create
        * `update` - update
        * `delete` - delete
    AnnotationReleaseInfo:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        genomebuild:
          type: string
          readOnly: true
        table:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        release:
          type: string
          readOnly: true
      required:
      - genomebuild
      - release
      - table
      - timestamp
    BamQcFile:
      type: object
      description: Serializer for the BamQcFile model.
      properties:
        sodar_uuid:
          type: string
          format: uuid
          description: Record UUID
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case_import_info:
          type: string
          format: uuid
          description: Record UUID
          readOnly: true
        file:
          type: string
          format: uri
          writeOnly: true
          description: The uploaded file.
        name:
          type: string
          description: Original file name.
          maxLength: 200
        md5:
          type: string
          description: MD5 checksum of original file.
          maxLength: 32
      required:
      - case_import_info
      - date_created
      - date_modified
      - file
      - md5
      - name
    BcftoolsStatsMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        sn:
          $ref: '#/components/schemas/sn'
        tstv:
          $ref: '#/components/schemas/tstv'
        sis:
          $ref: '#/components/schemas/sis'
        af:
          $ref: '#/components/schemas/af'
        qual:
          $ref: '#/components/schemas/qual'
        idd:
          $ref: '#/components/schemas/idd'
        st:
          $ref: '#/components/schemas/st'
        dp:
          $ref: '#/components/schemas/dp'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - af
      - caseqc
      - date_created
      - date_modified
      - dp
      - idd
      - qual
      - sis
      - sn
      - sodar_uuid
      - st
      - tstv
    Case:
      type: object
      description: Serializer for the ``Case`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        project:
          type: string
          format: uuid
          description: Project SODAR UUID
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        release:
          type: string
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 512
        index:
          type: string
          maxLength: 512
        pedigree: {}
        num_small_vars:
          type: integer
          readOnly: true
          nullable: true
          title: Small variants
          description: Number of small variants, empty if no small variants have been
            imported
        num_svs:
          type: integer
          readOnly: true
          nullable: true
          title: Structural variants
          description: Number of structural variants, empty if no structural variants
            have been imported
        notes:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/CaseStatusEnum'
        tags:
          type: array
          items:
            type: string
            maxLength: 32
          nullable: true
        annotationreleaseinfo_set:
          type: array
          items:
            $ref: '#/components/schemas/AnnotationReleaseInfo'
          readOnly: true
        svannotationreleaseinfo_set:
          type: array
          items:
            $ref: '#/components/schemas/SvAnnotationReleaseInfo'
          readOnly: true
        phenotype_terms:
          type: array
          items:
            $ref: '#/components/schemas/CasePhenotypeTerms'
          readOnly: true
        casealignmentstats:
          type: object
          additionalProperties: {}
          readOnly: true
        casevariantstats:
          type: object
          additionalProperties: {}
          readOnly: true
        relatedness:
          type: object
          additionalProperties: {}
          readOnly: true
        sex_errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          readOnly: true
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        case_version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        smallvariantqueryresultset:
          type: object
          additionalProperties: {}
          readOnly: true
        svqueryresultset:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - annotationreleaseinfo_set
      - casealignmentstats
      - casevariantstats
      - date_created
      - date_modified
      - index
      - name
      - num_small_vars
      - num_svs
      - pedigree
      - phenotype_terms
      - presetset
      - project
      - relatedness
      - release
      - sex_errors
      - smallvariantqueryresultset
      - sodar_uuid
      - svannotationreleaseinfo_set
      - svqueryresultset
    CaseAlignmentStats:
      type: object
      description: Serializer for ``CaseAlignmentStats``.
      properties:
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        variantset:
          type: string
          format: uuid
          description: Small variant flags SODAR UUID
          readOnly: true
        bam_stats:
          readOnly: true
      required:
      - bam_stats
      - case
      - variantset
    CaseComment:
      type: object
      description: Serializer for ``CaseComments``.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        comment:
          type: string
      required:
      - case
      - comment
      - date_created
      - date_modified
      - sodar_uuid
      - user
    CaseGeneAnnotation:
      type: object
      description: Serializer for ``CaseGeneAnnotationEntry``.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        gene_symbol:
          type: string
          readOnly: true
          description: The gene symbol (informative only)
        entrez_id:
          type: string
          readOnly: true
          description: The entrez gene ID
        ensembl_gene_id:
          type: string
          readOnly: true
          description: The ENSEMBL bene ID
        annotation:
          readOnly: true
          description: The annotation JSON
      required:
      - annotation
      - case
      - ensembl_gene_id
      - entrez_id
      - gene_symbol
      - sodar_uuid
    CaseGeneAnnotationFile:
      type: object
      description: Serializer for the CaseGeneAnnotationFile model.
      properties:
        sodar_uuid:
          type: string
          format: uuid
          description: Record UUID
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case_import_info:
          type: string
          format: uuid
          description: Record UUID
          readOnly: true
        file:
          type: string
          format: uri
          writeOnly: true
          description: The uploaded file.
        name:
          type: string
          description: Original file name.
          maxLength: 200
        md5:
          type: string
          description: MD5 checksum of original file.
          maxLength: 32
      required:
      - case_import_info
      - date_created
      - date_modified
      - file
      - md5
      - name
    CaseImportAction:
      type: object
      description: Serializer for the ``CaseImportAction`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        project:
          type: string
          format: uuid
          description: Project SODAR UUID
          readOnly: true
        state:
          $ref: '#/components/schemas/CaseImportActionStateEnum'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        action:
          $ref: '#/components/schemas/ActionEnum'
        payload: {}
        overwrite_terms:
          type: boolean
      required:
      - date_created
      - date_modified
      - payload
      - project
      - sodar_uuid
      - state
    CaseImportActionStateEnum:
      enum:
      - draft
      - submitted
      type: string
      description: |-
        * `draft` - draft
        * `submitted` - submitted
    CaseImportInfo:
      type: object
      description: Serializer for the ``CaseImportInfo`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        owner:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        release:
          type: string
          nullable: true
          maxLength: 32
        project:
          type: string
          format: uuid
          description: Project SODAR UUID
          readOnly: true
        name:
          type: string
          maxLength: 512
        index:
          type: string
          maxLength: 512
        pedigree: {}
        notes:
          type: string
          nullable: true
        state:
          allOf:
          - $ref: '#/components/schemas/CaseImportInfoStateEnum'
          description: "State of the case import \n\n* `draft` - draft\n* `submitted`\
            \ - submitted\n* `imported` - imported\n* `evicted` - evicted\n* `failed`\
            \ - failed"
        tags:
          type: array
          items:
            type: string
            maxLength: 32
          nullable: true
        bam_qc_files:
          type: array
          items:
            $ref: '#/components/schemas/BamQcFile'
          readOnly: true
        variant_sets:
          type: array
          items:
            $ref: '#/components/schemas/VariantSetImportInfo'
          readOnly: true
      required:
      - bam_qc_files
      - case
      - date_created
      - date_modified
      - index
      - name
      - owner
      - pedigree
      - project
      - sodar_uuid
      - variant_sets
    CaseImportInfoStateEnum:
      enum:
      - draft
      - submitted
      - imported
      - evicted
      - failed
      type: string
      description: |-
        * `draft` - draft
        * `submitted` - submitted
        * `imported` - imported
        * `evicted` - evicted
        * `failed` - failed
    CaseListQcStats:
      type: object
      properties:
        pedigree: {}
        relData: {}
        varStats: {}
        sexErrors: {}
        chrXHetHomRatio: {}
        dps: {}
        dpQuantiles: {}
        hetRatioQuantiles: {}
        dpHetData: {}
      required:
      - chrXHetHomRatio
      - dpHetData
      - dpQuantiles
      - dps
      - hetRatioQuantiles
      - pedigree
      - relData
      - sexErrors
      - varStats
    CasePhenotypeTerms:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        individual:
          type: string
          description: Individual
          maxLength: 128
        terms: {}
      required:
      - case
      - date_created
      - date_modified
      - individual
      - sodar_uuid
      - terms
    CaseQc:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        dragen_cnvmetrics:
          type: array
          items:
            $ref: '#/components/schemas/DragenCnvMetrics'
          readOnly: true
        dragen_fragmentlengthhistograms:
          type: array
          items:
            $ref: '#/components/schemas/DragenFragmentLengthHistogram'
          readOnly: true
        dragen_mappingmetrics:
          type: array
          items:
            $ref: '#/components/schemas/DragenMappingMetrics'
          readOnly: true
        dragen_ploidyestimationmetrics:
          type: array
          items:
            $ref: '#/components/schemas/DragenPloidyEstimationMetrics'
          readOnly: true
        dragen_rohmetrics:
          type: array
          items:
            $ref: '#/components/schemas/DragenRohMetrics'
          readOnly: true
        dragen_vchethomratiometrics:
          type: array
          items:
            $ref: '#/components/schemas/DragenVcHethomRatioMetrics'
          readOnly: true
        dragen_vcmetrics:
          type: array
          items:
            $ref: '#/components/schemas/DragenVcMetrics'
          readOnly: true
        dragen_svmetrics:
          type: array
          items:
            $ref: '#/components/schemas/DragenSvMetrics'
          readOnly: true
        dragen_timemetrics:
          type: array
          items:
            $ref: '#/components/schemas/DragenTimeMetrics'
          readOnly: true
        dragen_trimmermetrics:
          type: array
          items:
            $ref: '#/components/schemas/DragenTrimmerMetrics'
          readOnly: true
        dragen_wgscoveragemetrics:
          type: array
          items:
            $ref: '#/components/schemas/DragenWgsCoverageMetrics'
          readOnly: true
        dragen_wgscontigmeancovmetrics:
          type: array
          items:
            $ref: '#/components/schemas/DragenWgsContigMeanCovMetrics'
          readOnly: true
        dragen_wgsoverallmeancov:
          type: array
          items:
            $ref: '#/components/schemas/DragenWgsOverallMeanCov'
          readOnly: true
        dragen_wgsfinehist:
          type: array
          items:
            $ref: '#/components/schemas/DragenWgsFineHist'
          readOnly: true
        dragen_wgshist:
          type: array
          items:
            $ref: '#/components/schemas/DragenWgsHist'
          readOnly: true
        dragen_regioncoveragemetrics:
          type: array
          items:
            $ref: '#/components/schemas/DragenRegionCoverageMetrics'
          readOnly: true
        dragen_regionfinehist:
          type: array
          items:
            $ref: '#/components/schemas/DragenRegionFineHist'
          readOnly: true
        dragen_regionhist:
          type: array
          items:
            $ref: '#/components/schemas/DragenRegionHist'
          readOnly: true
        dragen_regionoverallmeancov:
          type: array
          items:
            $ref: '#/components/schemas/DragenRegionOverallMeanCov'
          readOnly: true
        bcftools_statsmetrics:
          type: array
          items:
            $ref: '#/components/schemas/BcftoolsStatsMetrics'
          readOnly: true
        samtools_statsmainmetrics:
          type: array
          items:
            $ref: '#/components/schemas/SamtoolsStatsMainMetrics'
          readOnly: true
        samtools_statssupplementarymetrics:
          type: array
          items:
            $ref: '#/components/schemas/SamtoolsStatsSupplementaryMetrics'
          readOnly: true
        samtools_flagstatmetrics:
          type: array
          items:
            $ref: '#/components/schemas/SamtoolsFlagstatMetrics'
          readOnly: true
        samtools_idxstatsmetrics:
          type: array
          items:
            $ref: '#/components/schemas/SamtoolsIdxstatsMetrics'
          readOnly: true
        cramino_metrics:
          type: array
          items:
            $ref: '#/components/schemas/CraminoMetrics'
          readOnly: true
        ngsbits_mappingqcmetrics:
          type: array
          items:
            $ref: '#/components/schemas/NgsbitsMappingqcMetrics'
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        state:
          $ref: '#/components/schemas/CaseQcStateEnum'
      required:
      - bcftools_statsmetrics
      - case
      - cramino_metrics
      - date_created
      - date_modified
      - dragen_cnvmetrics
      - dragen_fragmentlengthhistograms
      - dragen_mappingmetrics
      - dragen_ploidyestimationmetrics
      - dragen_regioncoveragemetrics
      - dragen_regionfinehist
      - dragen_regionhist
      - dragen_regionoverallmeancov
      - dragen_rohmetrics
      - dragen_svmetrics
      - dragen_timemetrics
      - dragen_trimmermetrics
      - dragen_vchethomratiometrics
      - dragen_vcmetrics
      - dragen_wgscontigmeancovmetrics
      - dragen_wgscoveragemetrics
      - dragen_wgsfinehist
      - dragen_wgshist
      - dragen_wgsoverallmeancov
      - ngsbits_mappingqcmetrics
      - samtools_flagstatmetrics
      - samtools_idxstatsmetrics
      - samtools_statsmainmetrics
      - samtools_statssupplementarymetrics
      - sodar_uuid
    CaseQcStateEnum:
      enum:
      - DRAFT
      - ACTIVE
      type: string
      description: |-
        * `DRAFT` - DRAFT
        * `ACTIVE` - ACTIVE
    CaseSerializerNg:
      type: object
      description: |-
        Serializer for the ``Case`` model.

        In contrast to the old (legacy) ``CaseSerializer`` from ``variants.serializers.case``, this class does not
        perform serialization of nested attributes and thus does not trigger a large query cascade.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        project:
          type: string
          format: uuid
          description: Project SODAR UUID
          readOnly: true
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        sex_errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          readOnly: true
        smallvariantqueryresultset:
          type: object
          additionalProperties:
            oneOf:
            - type: integer
            - type: number
              format: double
            - type: string
            nullable: true
          readOnly: true
        svqueryresultset:
          type: object
          additionalProperties:
            oneOf:
            - type: integer
            - type: number
              format: double
            - type: string
            nullable: true
          readOnly: true
        caseqc:
          type: object
          additionalProperties:
            oneOf:
            - type: integer
            - type: number
              format: double
            - type: string
            nullable: true
          nullable: true
          description: |-
            Obtain the latest CaseQC for this in active state and serialize it.

            If there is no such record then return ``None``.
          readOnly: true
        release:
          type: string
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 512
        index:
          type: string
          maxLength: 512
        pedigree: {}
        notes:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/CaseStatusEnum'
        tags:
          type: array
          items:
            type: string
            maxLength: 32
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case_version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        state:
          readOnly: true
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CaseSerializerNgStateEnum'
          - $ref: '#/components/schemas/NullEnum'
        num_small_vars:
          type: integer
          readOnly: true
          nullable: true
          title: Small variants
          description: Number of small variants, empty if no small variants have been
            imported
        num_svs:
          type: integer
          readOnly: true
          nullable: true
          title: Structural variants
          description: Number of structural variants, empty if no structural variants
            have been imported
      required:
      - caseqc
      - date_created
      - date_modified
      - index
      - name
      - num_small_vars
      - num_svs
      - pedigree
      - presetset
      - project
      - release
      - sex_errors
      - smallvariantqueryresultset
      - sodar_uuid
      - state
      - svqueryresultset
    CaseSerializerNgStateEnum:
      enum:
      - importing
      - updating
      - active
      - deleting
      type: string
      description: |-
        * `importing` - importing
        * `updating` - updating
        * `active` - active
        * `deleting` - deleting
    CaseStatusEnum:
      enum:
      - initial
      - active
      - closed-unsolved
      - closed-uncertain
      - closed-solved
      type: string
      description: |-
        * `initial` - initial
        * `active` - active
        * `closed-unsolved` - closed as unsolved
        * `closed-uncertain` - closed as uncertain
        * `closed-solved` - closed as solved
    ChromosomePresets:
      type: object
      description: Serializer for ``ChromosomePresets``.
      properties:
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        genomic_region:
          type: array
          items:
            type: string
            maxLength: 64
        gene_allowlist:
          type: array
          items:
            type: string
            maxLength: 64
        gene_blocklist:
          type: array
          items:
            type: string
            maxLength: 64
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
      required:
      - date_created
      - date_modified
      - label
      - presetset
      - sodar_uuid
    CraminoMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        summary:
          $ref: '#/components/schemas/summary'
        chrom_counts:
          $ref: '#/components/schemas/chrom_counts'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
      required:
      - caseqc
      - chrom_counts
      - date_created
      - date_modified
      - sample
      - sodar_uuid
      - summary
    DatabaseEnum:
      enum:
      - refseq
      - ensembl
      type: string
      description: |-
        * `refseq` - RefSeq
        * `ensembl` - ENSEMBL
    DatabaseInfoFile:
      type: object
      description: Serializer for the DatabaseInfoFile model.
      properties:
        sodar_uuid:
          type: string
          format: uuid
          description: Record UUID
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        variant_set_import_info:
          type: string
          format: uuid
          description: Record UUID
          readOnly: true
        file:
          type: string
          format: uri
          writeOnly: true
          description: The uploaded file.
        name:
          type: string
          description: Original file name.
          maxLength: 200
        md5:
          type: string
          description: MD5 checksum of original file.
          maxLength: 32
      required:
      - date_created
      - date_modified
      - file
      - md5
      - name
      - variant_set_import_info
    DragenCnvMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - sodar_uuid
    DragenFragmentLengthHistogram:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
        keys:
          type: array
          items:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
        values:
          type: array
          items:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
      required:
      - caseqc
      - date_created
      - date_modified
      - keys
      - sample
      - sodar_uuid
      - values
    DragenMappingMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - sample
      - sodar_uuid
    DragenPloidyEstimationMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - sample
      - sodar_uuid
    DragenRegionCoverageMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
        region_name:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - region_name
      - sample
      - sodar_uuid
    DragenRegionFineHist:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
        keys:
          type: array
          items:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
        values:
          type: array
          items:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
        region_name:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - keys
      - region_name
      - sample
      - sodar_uuid
      - values
    DragenRegionHist:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
        region_name:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - region_name
      - sample
      - sodar_uuid
    DragenRegionOverallMeanCov:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
        region_name:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - region_name
      - sample
      - sodar_uuid
    DragenRohMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - sample
      - sodar_uuid
    DragenSvMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - sodar_uuid
    DragenTimeMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - sample
      - sodar_uuid
    DragenTrimmerMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - sample
      - sodar_uuid
    DragenVcHethomRatioMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - sodar_uuid
    DragenVcMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - sodar_uuid
    DragenWgsContigMeanCovMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - sample
      - sodar_uuid
    DragenWgsCoverageMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - sample
      - sodar_uuid
    DragenWgsFineHist:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
        keys:
          type: array
          items:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
        values:
          type: array
          items:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
      required:
      - caseqc
      - date_created
      - date_modified
      - keys
      - sample
      - sodar_uuid
      - values
    DragenWgsHist:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
        keys:
          type: array
          items:
            type: string
            maxLength: 200
        values:
          type: array
          items:
            type: number
            format: double
      required:
      - caseqc
      - date_created
      - date_modified
      - keys
      - sample
      - sodar_uuid
      - values
    DragenWgsOverallMeanCov:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        metrics:
          $ref: '#/components/schemas/metrics'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - metrics
      - sample
      - sodar_uuid
    EffectFile:
      type: object
      description: Serializer for the EffectsFile model.
      properties:
        sodar_uuid:
          type: string
          format: uuid
          description: Record UUID
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        variant_set_import_info:
          type: string
          format: uuid
          description: Record UUID
          readOnly: true
        file:
          type: string
          format: uri
          writeOnly: true
          description: The uploaded file.
        name:
          type: string
          description: Original file name.
          maxLength: 200
        md5:
          type: string
          description: MD5 checksum of original file.
          maxLength: 32
      required:
      - date_created
      - date_modified
      - file
      - md5
      - name
      - variant_set_import_info
    EnrichmentKit:
      type: object
      description: Serializer for ``EnrichmentKit``.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        identifier:
          type: string
          description: Identifier of the enrichment kit, e.g., 'agilent-all-exon-v4'.
          pattern: ^[\w_-]+$
          maxLength: 128
        title:
          type: string
          description: Title of the enrichment kit
          maxLength: 128
        description:
          type: string
          nullable: true
          description: Optional description of the enrichment kit
      required:
      - date_created
      - date_modified
      - identifier
      - sodar_uuid
      - title
    ExportFileBgJob:
      type: object
      description: Sparse serialization of the ``ExportFileBgJob`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        file_type:
          allOf:
          - $ref: '#/components/schemas/FileTypeEnum'
          description: |-
            File types for exported file

            * `tsv` - TSV File
            * `xlsx` - Excel File (XLSX)
            * `vcf` - VCF File
        status:
          allOf:
          - $ref: '#/components/schemas/ExportFileBgJobStatusEnum'
          readOnly: true
      required:
      - file_type
      - sodar_uuid
      - status
    ExportFileBgJobStatusEnum:
      enum:
      - initial
      - running
      - done
      - failed
      type: string
      description: |-
        * `initial` - initial
        * `running` - running
        * `done` - done
        * `failed` - failed
    ExtraAnnoField:
      type: object
      description: Serializer for the ``ExtraAnnoFields`` model.
      properties:
        field:
          type: integer
        label:
          type: string
      required:
      - field
      - label
    FailEnum:
      enum:
      - drop-variant
      - ignore
      - no-call
      type: string
      description: |-
        * `drop-variant` - drop variant
        * `ignore` - ignore
        * `no-call` - no call
    FileTypeEnum:
      enum:
      - tsv
      - xlsx
      - vcf
      type: string
      description: |-
        * `tsv` - TSV File
        * `xlsx` - Excel File (XLSX)
        * `vcf` - VCF File
    FlagsEtcPresets:
      type: object
      description: Serializer for ``FlagsEtcPresets``.
      properties:
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
        clinvar_include_benign:
          type: boolean
        clinvar_include_likely_benign:
          type: boolean
        clinvar_include_likely_pathogenic:
          type: boolean
        clinvar_include_pathogenic:
          type: boolean
        clinvar_include_uncertain_significance:
          type: boolean
        flag_bookmarked:
          type: boolean
        flag_incidental:
          type: boolean
        flag_candidate:
          type: boolean
        flag_doesnt_segregate:
          type: boolean
        flag_final_causative:
          type: boolean
        flag_for_validation:
          type: boolean
        flag_no_disease_association:
          type: boolean
        flag_molecular_empty:
          type: boolean
        flag_molecular_negative:
          type: boolean
        flag_molecular_positive:
          type: boolean
        flag_molecular_uncertain:
          type: boolean
        flag_phenotype_match_empty:
          type: boolean
        flag_phenotype_match_negative:
          type: boolean
        flag_phenotype_match_positive:
          type: boolean
        flag_phenotype_match_uncertain:
          type: boolean
        flag_segregates:
          type: boolean
        flag_simple_empty:
          type: boolean
        flag_summary_empty:
          type: boolean
        flag_summary_negative:
          type: boolean
        flag_summary_positive:
          type: boolean
        flag_summary_uncertain:
          type: boolean
        flag_validation_empty:
          type: boolean
        flag_validation_negative:
          type: boolean
        flag_validation_positive:
          type: boolean
        flag_validation_uncertain:
          type: boolean
        flag_visual_empty:
          type: boolean
        flag_visual_negative:
          type: boolean
        flag_visual_positive:
          type: boolean
        flag_visual_uncertain:
          type: boolean
        require_in_clinvar:
          type: boolean
        clinvar_paranoid_mode:
          type: boolean
      required:
      - date_created
      - date_modified
      - label
      - presetset
      - sodar_uuid
    FrequencyPresets:
      type: object
      description: Serializer for ``FrequencyPresets``.
      properties:
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
        thousand_genomes_enabled:
          type: boolean
        thousand_genomes_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        thousand_genomes_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        thousand_genomes_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        thousand_genomes_frequency:
          type: number
          format: double
          nullable: true
        exac_enabled:
          type: boolean
        exac_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        exac_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        exac_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        exac_frequency:
          type: number
          format: double
          nullable: true
        gnomad_exomes_enabled:
          type: boolean
        gnomad_exomes_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_exomes_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_exomes_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_exomes_frequency:
          type: number
          format: double
          nullable: true
        gnomad_genomes_enabled:
          type: boolean
        gnomad_genomes_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_genomes_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_genomes_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_genomes_frequency:
          type: number
          format: double
          nullable: true
        inhouse_enabled:
          type: boolean
        inhouse_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        inhouse_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        inhouse_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        inhouse_carriers:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        mtdb_enabled:
          type: boolean
        mtdb_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        mtdb_frequency:
          type: number
          format: double
          nullable: true
        helixmtdb_enabled:
          type: boolean
        helixmtdb_het_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        helixmtdb_hom_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        helixmtdb_frequency:
          type: number
          format: double
          nullable: true
        mitomap_enabled:
          type: boolean
        mitomap_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        mitomap_frequency:
          type: number
          format: double
          nullable: true
      required:
      - date_created
      - date_modified
      - label
      - presetset
      - sodar_uuid
    GenomeBuildVerbatimEnum:
      enum:
      - GRCh37
      - GRCh38
      type: string
      description: |-
        * `GRCh37` - GRCh37
        * `GRCh38` - GRCh38
    GenomeReleaseEnum:
      enum:
      - grch37
      - grch38
      type: string
      description: |-
        * `grch37` - GRCh37
        * `grch38` - GRCh38
    GenotypeFile:
      type: object
      description: Serializer for the GenotypeFile model.
      properties:
        sodar_uuid:
          type: string
          format: uuid
          description: Record UUID
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        variant_set_import_info:
          type: string
          format: uuid
          description: Record UUID
          readOnly: true
        file:
          type: string
          format: uri
          writeOnly: true
          description: The uploaded file.
        name:
          type: string
          description: Original file name.
          maxLength: 200
        md5:
          type: string
          description: MD5 checksum of original file.
          maxLength: 32
      required:
      - date_created
      - date_modified
      - file
      - md5
      - name
      - variant_set_import_info
    HpoTerm:
      type: object
      description: Serializer for HPO terms.
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
    ImpactPresets:
      type: object
      description: Serializer for ``ImpactPresets``.
      properties:
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
        var_type_snv:
          type: boolean
        var_type_mnv:
          type: boolean
        var_type_indel:
          type: boolean
        transcripts_coding:
          type: boolean
        transcripts_noncoding:
          type: boolean
        max_exon_dist:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        effects:
          type: array
          items:
            type: string
            maxLength: 64
      required:
      - date_created
      - date_modified
      - label
      - presetset
      - sodar_uuid
    InheritanceEnum:
      enum:
      - de_novo
      - dominant
      - homozygous_recessive
      - compound_heterozygous
      - recessive
      - x_recessive
      - affected_carriers
      - any
      type: string
      description: |-
        * `de_novo` - de novo
        * `dominant` - dominant
        * `homozygous_recessive` - homozygous recessive
        * `compound_heterozygous` - compound heterozygous
        * `recessive` - recessive
        * `x_recessive` - X-recessive
        * `affected_carriers` - affected carriers
        * `any` - any
    NgsbitsMappingqcMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        records:
          $ref: '#/components/schemas/records'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
        region_name:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - records
      - region_name
      - sample
      - sodar_uuid
    NullEnum:
      enum:
      - null
    PaginatedAcmgCriteriaRatingList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/AcmgCriteriaRating'
    PaginatedCaseImportActionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CaseImportAction'
    PaginatedCaseSerializerNgList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CaseSerializerNg'
    PaginatedSmallVariantQueryResultRowList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SmallVariantQueryResultRow'
    PaginatedSmallVariantQueryResultSetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SmallVariantQueryResultSet'
    PaginatedSvQueryResultRowList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SvQueryResultRow'
    PaginatedSvQueryResultSetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SvQueryResultSet'
    PatchedAcmgCriteriaRating:
      type: object
      properties:
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Case SODAR UUID
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reference:
          type: string
          maxLength: 512
        alternative:
          type: string
          maxLength: 512
        pvs1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: ('null variant (nonsense, frameshift, canonical ±1 or 2 splice
            sites, initiation codon, single or multiexon deletion) in a gene where
            LOF is a known mechanism of disease',)
        ps1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Same amino acid change as a previously established pathogenic
            variant regardless of nucleotide change
        ps2:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: De novo (both maternity and paternity confirmed) in a patient
            with the disease and no family history
        ps3:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Well-established in vitro or in vivo functional studies supportive
            of a damaging effect on the gene or gene product
        ps4:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The prevalence of the variant in affected individuals is significantly
            increased compared with the prevalence in controls
        pm1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Located in a mutational hot spot and/or critical and well-established
            functional domain (e.g., active site of an enzyme) without benign variation
        pm2:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Absent from controls (or at extremely low frequency if recessive)
            in Exome Sequencing Project, 1000 Genomes Project, or Exome Aggregation
            Consortium
        pm3:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: For recessive disorders, detected in trans with a pathogenic
            variant
        pm4:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Protein length changes as a result of in-frame deletions/insertions
            in a nonrepeat region or stop-loss variants
        pm5:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Novel missense change at an amino acid residue where a different
            missense change determined to be pathogenic has been seen before
        pm6:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Assumed de novo, but without confirmation of paternity and
            maternity
        pp1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Cosegregation with disease in multiple affected family members
            in a gene definitively known to cause the disease
        pp2:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: 'Missense variant in a gene that has a low rate of benign missense
            variation and in which missense variants are: a common mechanism of disease'
        pp3:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Multiple lines of computational evidence support a deleterious
            effect on the gene or gene product (conservation, evolutionary, splicing
            impact, etc.)
        pp4:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Patient's phenotype or family history is highly specific for
            a disease with a single genetic etiology
        pp5:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Reputable source recently reports variant as pathogenic, but
            the evidence is not available to the laboratory to perform an independent
            evaluation
        ba1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Allele frequency is >5% in Exome Sequencing Project, 1000 Genomes
            Project, or Exome Aggregation Consortium
        bs1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Allele frequency is greater than expected for disorder (see
            Table 6)
        bs2:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Observed in a healthy adult individual for a recessive (homozygous),
            dominant (heterozygous), or X-linked (hemizygous) disorder, with full
            penetrance expected at an early age
        bs3:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Well-established in vitro or in vivo functional studies show
            no damaging effect on protein function or splicing
        bs4:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: 'BS4: Lack of segregation in affected members of a family'
        bp1:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Missense variant in a gene for which primarily truncating variants
            are known to cause disease
        bp2:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Observed in trans with a pathogenic variant for a fully penetrant
            dominant gene/disorder or observed in cis with a pathogenic variant in
            any inheritance pattern
        bp3:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: In-frame deletions/insertions in a repetitive region without
            a known function
        bp4:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Multiple lines of computational evidence suggest no impact
            on gene or gene product (conservation, evolutionary, splicing impact,
            etc.)
        bp5:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Variant found in a case with an alternate molecular basis for
            disease
        bp6:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Reputable source recently reports variant as benign, but the
            evidence is not available to the laboratory to perform an independent
            evaluation
        bp7:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: A synonymous (silent) variant for which splicing prediction
            algorithms predict no impact to the splice consensus sequence nor the
            creation of a new splice site AND the nucleotide is not highly conserved
        class_auto:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: ACMG Classification
          description: Result of the ACMG classification
        class_override:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Use this field to override the auto-computed class assignment
        acmg_class:
          type: integer
          nullable: true
          readOnly: true
    PatchedCaseComment:
      type: object
      description: Serializer for ``CaseComments``.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        comment:
          type: string
    PatchedCaseImportAction:
      type: object
      description: Serializer for the ``CaseImportAction`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        project:
          type: string
          format: uuid
          description: Project SODAR UUID
          readOnly: true
        state:
          $ref: '#/components/schemas/CaseImportActionStateEnum'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        action:
          $ref: '#/components/schemas/ActionEnum'
        payload: {}
        overwrite_terms:
          type: boolean
    PatchedCaseImportInfo:
      type: object
      description: Serializer for the ``CaseImportInfo`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        owner:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        release:
          type: string
          nullable: true
          maxLength: 32
        project:
          type: string
          format: uuid
          description: Project SODAR UUID
          readOnly: true
        name:
          type: string
          maxLength: 512
        index:
          type: string
          maxLength: 512
        pedigree: {}
        notes:
          type: string
          nullable: true
        state:
          allOf:
          - $ref: '#/components/schemas/CaseImportInfoStateEnum'
          description: "State of the case import \n\n* `draft` - draft\n* `submitted`\
            \ - submitted\n* `imported` - imported\n* `evicted` - evicted\n* `failed`\
            \ - failed"
        tags:
          type: array
          items:
            type: string
            maxLength: 32
          nullable: true
        bam_qc_files:
          type: array
          items:
            $ref: '#/components/schemas/BamQcFile'
          readOnly: true
        variant_sets:
          type: array
          items:
            $ref: '#/components/schemas/VariantSetImportInfo'
          readOnly: true
    PatchedCasePhenotypeTerms:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        individual:
          type: string
          description: Individual
          maxLength: 128
        terms: {}
    PatchedCaseSerializerNg:
      type: object
      description: |-
        Serializer for the ``Case`` model.

        In contrast to the old (legacy) ``CaseSerializer`` from ``variants.serializers.case``, this class does not
        perform serialization of nested attributes and thus does not trigger a large query cascade.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        project:
          type: string
          format: uuid
          description: Project SODAR UUID
          readOnly: true
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        sex_errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          readOnly: true
        smallvariantqueryresultset:
          type: object
          additionalProperties:
            oneOf:
            - type: integer
            - type: number
              format: double
            - type: string
            nullable: true
          readOnly: true
        svqueryresultset:
          type: object
          additionalProperties:
            oneOf:
            - type: integer
            - type: number
              format: double
            - type: string
            nullable: true
          readOnly: true
        caseqc:
          type: object
          additionalProperties:
            oneOf:
            - type: integer
            - type: number
              format: double
            - type: string
            nullable: true
          nullable: true
          description: |-
            Obtain the latest CaseQC for this in active state and serialize it.

            If there is no such record then return ``None``.
          readOnly: true
        release:
          type: string
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 512
        index:
          type: string
          maxLength: 512
        pedigree: {}
        notes:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/CaseStatusEnum'
        tags:
          type: array
          items:
            type: string
            maxLength: 32
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case_version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        state:
          readOnly: true
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CaseSerializerNgStateEnum'
          - $ref: '#/components/schemas/NullEnum'
        num_small_vars:
          type: integer
          readOnly: true
          nullable: true
          title: Small variants
          description: Number of small variants, empty if no small variants have been
            imported
        num_svs:
          type: integer
          readOnly: true
          nullable: true
          title: Structural variants
          description: Number of structural variants, empty if no structural variants
            have been imported
    PatchedChromosomePresets:
      type: object
      description: Serializer for ``ChromosomePresets``.
      properties:
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        genomic_region:
          type: array
          items:
            type: string
            maxLength: 64
        gene_allowlist:
          type: array
          items:
            type: string
            maxLength: 64
        gene_blocklist:
          type: array
          items:
            type: string
            maxLength: 64
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
    PatchedEnrichmentKit:
      type: object
      description: Serializer for ``EnrichmentKit``.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        identifier:
          type: string
          description: Identifier of the enrichment kit, e.g., 'agilent-all-exon-v4'.
          pattern: ^[\w_-]+$
          maxLength: 128
        title:
          type: string
          description: Title of the enrichment kit
          maxLength: 128
        description:
          type: string
          nullable: true
          description: Optional description of the enrichment kit
    PatchedFlagsEtcPresets:
      type: object
      description: Serializer for ``FlagsEtcPresets``.
      properties:
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
        clinvar_include_benign:
          type: boolean
        clinvar_include_likely_benign:
          type: boolean
        clinvar_include_likely_pathogenic:
          type: boolean
        clinvar_include_pathogenic:
          type: boolean
        clinvar_include_uncertain_significance:
          type: boolean
        flag_bookmarked:
          type: boolean
        flag_incidental:
          type: boolean
        flag_candidate:
          type: boolean
        flag_doesnt_segregate:
          type: boolean
        flag_final_causative:
          type: boolean
        flag_for_validation:
          type: boolean
        flag_no_disease_association:
          type: boolean
        flag_molecular_empty:
          type: boolean
        flag_molecular_negative:
          type: boolean
        flag_molecular_positive:
          type: boolean
        flag_molecular_uncertain:
          type: boolean
        flag_phenotype_match_empty:
          type: boolean
        flag_phenotype_match_negative:
          type: boolean
        flag_phenotype_match_positive:
          type: boolean
        flag_phenotype_match_uncertain:
          type: boolean
        flag_segregates:
          type: boolean
        flag_simple_empty:
          type: boolean
        flag_summary_empty:
          type: boolean
        flag_summary_negative:
          type: boolean
        flag_summary_positive:
          type: boolean
        flag_summary_uncertain:
          type: boolean
        flag_validation_empty:
          type: boolean
        flag_validation_negative:
          type: boolean
        flag_validation_positive:
          type: boolean
        flag_validation_uncertain:
          type: boolean
        flag_visual_empty:
          type: boolean
        flag_visual_negative:
          type: boolean
        flag_visual_positive:
          type: boolean
        flag_visual_uncertain:
          type: boolean
        require_in_clinvar:
          type: boolean
        clinvar_paranoid_mode:
          type: boolean
    PatchedFrequencyPresets:
      type: object
      description: Serializer for ``FrequencyPresets``.
      properties:
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
        thousand_genomes_enabled:
          type: boolean
        thousand_genomes_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        thousand_genomes_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        thousand_genomes_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        thousand_genomes_frequency:
          type: number
          format: double
          nullable: true
        exac_enabled:
          type: boolean
        exac_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        exac_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        exac_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        exac_frequency:
          type: number
          format: double
          nullable: true
        gnomad_exomes_enabled:
          type: boolean
        gnomad_exomes_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_exomes_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_exomes_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_exomes_frequency:
          type: number
          format: double
          nullable: true
        gnomad_genomes_enabled:
          type: boolean
        gnomad_genomes_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_genomes_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_genomes_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_genomes_frequency:
          type: number
          format: double
          nullable: true
        inhouse_enabled:
          type: boolean
        inhouse_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        inhouse_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        inhouse_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        inhouse_carriers:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        mtdb_enabled:
          type: boolean
        mtdb_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        mtdb_frequency:
          type: number
          format: double
          nullable: true
        helixmtdb_enabled:
          type: boolean
        helixmtdb_het_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        helixmtdb_hom_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        helixmtdb_frequency:
          type: number
          format: double
          nullable: true
        mitomap_enabled:
          type: boolean
        mitomap_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        mitomap_frequency:
          type: number
          format: double
          nullable: true
    PatchedImpactPresets:
      type: object
      description: Serializer for ``ImpactPresets``.
      properties:
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
        var_type_snv:
          type: boolean
        var_type_mnv:
          type: boolean
        var_type_indel:
          type: boolean
        transcripts_coding:
          type: boolean
        transcripts_noncoding:
          type: boolean
        max_exon_dist:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        effects:
          type: array
          items:
            type: string
            maxLength: 64
    PatchedPresetSet:
      type: object
      description: |-
        Serializer for ``PresetSet``.

        We will serialize the nested values read-only.
      properties:
        project:
          type: string
          format: uuid
          description: Project SODAR UUID
          readOnly: true
        quickpresets_set:
          type: array
          items:
            $ref: '#/components/schemas/QuickPresets'
          readOnly: true
        frequencypresets_set:
          type: array
          items:
            $ref: '#/components/schemas/FrequencyPresets'
          readOnly: true
        impactpresets_set:
          type: array
          items:
            $ref: '#/components/schemas/ImpactPresets'
          readOnly: true
        qualitypresets_set:
          type: array
          items:
            $ref: '#/components/schemas/QualityPresets'
          readOnly: true
        chromosomepresets_set:
          type: array
          items:
            $ref: '#/components/schemas/ChromosomePresets'
          readOnly: true
        flagsetcpresets_set:
          type: array
          items:
            $ref: '#/components/schemas/FlagsEtcPresets'
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
        description:
          type: string
          nullable: true
          description: Optional description
        database:
          allOf:
          - $ref: '#/components/schemas/DatabaseEnum'
          description: |-
            The database to use

            * `refseq` - RefSeq
            * `ensembl` - ENSEMBL
        default_presetset:
          type: boolean
          description: Set as the default preset set
    PatchedQualityPresets:
      type: object
      description: Serializer for ``QualityPresets``.
      properties:
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
        dp_het:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        dp_hom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        ab:
          type: number
          format: double
          nullable: true
        gq:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        ad:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        ad_max:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        fail:
          $ref: '#/components/schemas/FailEnum'
    PatchedQuickPresets:
      type: object
      description: |-
        Serializer for ``QuickPresets``.

        The ``presetset`` must be given in the context.
      properties:
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        frequency:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          nullable: true
        impact:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          nullable: true
        quality:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          nullable: true
        chromosome:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          nullable: true
        flagsetc:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
        inheritance:
          allOf:
          - $ref: '#/components/schemas/InheritanceEnum'
          description: |-
            Presets for inheritance

            * `de_novo` - de novo
            * `dominant` - dominant
            * `homozygous_recessive` - homozygous recessive
            * `compound_heterozygous` - compound heterozygous
            * `recessive` - recessive
            * `x_recessive` - X-recessive
            * `affected_carriers` - affected carriers
            * `any` - any
    PatchedSmallVariantComment:
      type: object
      description: Serializer for the ``SmallVariantComment`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reference:
          type: string
          maxLength: 512
        alternative:
          type: string
          maxLength: 512
        text:
          type: string
        user_can_edit:
          type: boolean
          readOnly: true
    PatchedSmallVariantFlags:
      type: object
      description: Serializer for the ``SmallVariantFlags`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reference:
          type: string
          maxLength: 512
        alternative:
          type: string
          maxLength: 512
        flag_bookmarked:
          type: boolean
        flag_incidental:
          type: boolean
        flag_candidate:
          type: boolean
        flag_final_causative:
          type: boolean
        flag_for_validation:
          type: boolean
        flag_no_disease_association:
          type: boolean
        flag_segregates:
          type: boolean
        flag_doesnt_segregate:
          type: boolean
        flag_visual:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_molecular:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_validation:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_phenotype_match:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_summary:
          $ref: '#/components/schemas/VariantRatingEnum'
    PatchedSmallVariantQueryWithLogs:
      type: object
      description: Serializer for the ``SmallVariant`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        user:
          type: string
          format: uuid
          description: User SODAR UUID
          readOnly: true
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        query_state:
          allOf:
          - $ref: '#/components/schemas/QueryStateEnum'
          readOnly: true
          description: |-
            The current query state

            * `initial` - initial
            * `running` - running
            * `done` - done
            * `cancelled` - cancelled
            * `failed` - failed
            * `timeout` - timeout
        query_state_msg:
          type: string
          readOnly: true
          nullable: true
          description: Message related to the query state
        query_settings: {}
        logs:
          type: array
          items:
            type: string
          readOnly: true
    PatchedStructuralVariantComment:
      type: object
      description: Serializer for the ``StructuralVariantComment` model.
      properties:
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Annotation UUID
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        sv_type:
          type: string
          maxLength: 32
        sv_sub_type:
          type: string
          maxLength: 32
        text:
          type: string
          description: The comment text
        user_can_edit:
          type: boolean
          readOnly: true
    PatchedStructuralVariantFlags:
      type: object
      description: Serializer for the ``StructuralVariantFlags` model.
      properties:
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Annotation UUID
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        sv_type:
          type: string
          maxLength: 32
        sv_sub_type:
          type: string
          maxLength: 32
        flag_bookmarked:
          type: boolean
        flag_candidate:
          type: boolean
        flag_final_causative:
          type: boolean
        flag_for_validation:
          type: boolean
        flag_no_disease_association:
          type: boolean
        flag_segregates:
          type: boolean
        flag_doesnt_segregate:
          type: boolean
        flag_visual:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_molecular:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_validation:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_phenotype_match:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_incidental:
          type: boolean
        flag_summary:
          $ref: '#/components/schemas/VariantRatingEnum'
    PatchedTargetBedFile:
      type: object
      description: Serializer for ``TargetBedFile``.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        enrichmentkit:
          type: string
          format: uuid
          description: Record SODAR UUID
          readOnly: true
        file_uri:
          type: string
          description: The file's URI.
          maxLength: 512
        genome_release:
          allOf:
          - $ref: '#/components/schemas/GenomeReleaseEnum'
          default: grch37
          description: |-
            The file's reference genome.

            * `grch37` - GRCh37
            * `grch38` - GRCh38
    PatchedVarAnnoSet:
      type: object
      description: Serializer for ``VarAnnoSet``.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        project:
          type: string
          format: uuid
          description: Project SODAR UUID
          readOnly: true
        release:
          allOf:
          - $ref: '#/components/schemas/GenomeBuildVerbatimEnum'
          description: |-
            Genome build of the variant annotation set.

            * `GRCh37` - GRCh37
            * `GRCh38` - GRCh38
        title:
          type: string
          description: The variant annotation set's title.
          maxLength: 100
        description:
          type: string
          nullable: true
          description: An optional description for the variant annotation set.
        fields:
          type: array
          items:
            type: string
            maxLength: 64
          description: The allowed fields in the entries.
    PatchedVarAnnoSetEntry:
      type: object
      description: Serializer for ``VarAnnoSetEntry``.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        varannoset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        reference:
          type: string
          maxLength: 512
        alternative:
          type: string
          maxLength: 512
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        payload:
          description: The annotation's data with fields defined in the variant annotation
            set.
    PatchedVariantSetImportInfo:
      type: object
      description: Serializer for the ``ImportVariantSetInfo`` model.
      properties:
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Record UUID
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        genomebuild:
          allOf:
          - $ref: '#/components/schemas/GenomeBuildVerbatimEnum'
          description: |-
            Genome build used in the variant set.

            * `GRCh37` - GRCh37
            * `GRCh38` - GRCh38
        case_import_info:
          type: string
          format: uuid
          description: Record UUID
          readOnly: true
        variant_type:
          allOf:
          - $ref: '#/components/schemas/VariantTypeEnum'
          description: |-
            The type of variant set that is referenced.

            * `SMALL` - variants
            * `STRUCTURAL` - svs
        genotype_files:
          type: array
          items:
            $ref: '#/components/schemas/GenotypeFile'
          readOnly: true
        effect_files:
          type: array
          items:
            $ref: '#/components/schemas/EffectFile'
          readOnly: true
        db_info_files:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseInfoFile'
          readOnly: true
        state:
          allOf:
          - $ref: '#/components/schemas/VariantSetImportInfoStateEnum'
          description: |-
            State of the variant set import

            * `draft` - draft
            * `uploaded` - uploaded
            * `imported` - imported
            * `evicted` - evicted
            * `failed` - failed
    PedigreeRelatedness:
      type: object
      description: Serializer for ``PedigreeRelatedness``.
      properties:
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        sample1:
          type: string
          readOnly: true
        sample2:
          type: string
          readOnly: true
        het_1_2:
          type: integer
          readOnly: true
        het_1:
          type: integer
          readOnly: true
        het_2:
          type: integer
          readOnly: true
        n_ibs0:
          type: integer
          readOnly: true
        n_ibs1:
          type: integer
          readOnly: true
        n_ibs2:
          type: integer
          readOnly: true
        relatedness:
          type: number
          format: double
          description: Return relatedness following Pedersen and Quinlan (2017).
          readOnly: true
      required:
      - case
      - het_1
      - het_1_2
      - het_2
      - n_ibs0
      - n_ibs1
      - n_ibs2
      - relatedness
      - sample1
      - sample2
    PresetSet:
      type: object
      description: |-
        Serializer for ``PresetSet``.

        We will serialize the nested values read-only.
      properties:
        project:
          type: string
          format: uuid
          description: Project SODAR UUID
          readOnly: true
        quickpresets_set:
          type: array
          items:
            $ref: '#/components/schemas/QuickPresets'
          readOnly: true
        frequencypresets_set:
          type: array
          items:
            $ref: '#/components/schemas/FrequencyPresets'
          readOnly: true
        impactpresets_set:
          type: array
          items:
            $ref: '#/components/schemas/ImpactPresets'
          readOnly: true
        qualitypresets_set:
          type: array
          items:
            $ref: '#/components/schemas/QualityPresets'
          readOnly: true
        chromosomepresets_set:
          type: array
          items:
            $ref: '#/components/schemas/ChromosomePresets'
          readOnly: true
        flagsetcpresets_set:
          type: array
          items:
            $ref: '#/components/schemas/FlagsEtcPresets'
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
        description:
          type: string
          nullable: true
          description: Optional description
        database:
          allOf:
          - $ref: '#/components/schemas/DatabaseEnum'
          description: |-
            The database to use

            * `refseq` - RefSeq
            * `ensembl` - ENSEMBL
        default_presetset:
          type: boolean
          description: Set as the default preset set
      required:
      - chromosomepresets_set
      - database
      - date_created
      - date_modified
      - flagsetcpresets_set
      - frequencypresets_set
      - impactpresets_set
      - label
      - project
      - qualitypresets_set
      - quickpresets_set
      - sodar_uuid
    QualityPresets:
      type: object
      description: Serializer for ``QualityPresets``.
      properties:
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
        dp_het:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        dp_hom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        ab:
          type: number
          format: double
          nullable: true
        gq:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        ad:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        ad_max:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        fail:
          $ref: '#/components/schemas/FailEnum'
      required:
      - date_created
      - date_modified
      - fail
      - label
      - presetset
      - sodar_uuid
    QueryStateEnum:
      enum:
      - initial
      - running
      - done
      - cancelled
      - failed
      - timeout
      type: string
      description: |-
        * `initial` - initial
        * `running` - running
        * `done` - done
        * `cancelled` - cancelled
        * `failed` - failed
        * `timeout` - timeout
    QuickPresets:
      type: object
      description: |-
        Serializer for ``QuickPresets``.

        The ``presetset`` must be given in the context.
      properties:
        presetset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        frequency:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          nullable: true
        impact:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          nullable: true
        quality:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          nullable: true
        chromosome:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          nullable: true
        flagsetc:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Cohort SODAR UUID
        label:
          type: string
          description: User-readable label
          maxLength: 64
        inheritance:
          allOf:
          - $ref: '#/components/schemas/InheritanceEnum'
          description: |-
            Presets for inheritance

            * `de_novo` - de novo
            * `dominant` - dominant
            * `homozygous_recessive` - homozygous recessive
            * `compound_heterozygous` - compound heterozygous
            * `recessive` - recessive
            * `x_recessive` - X-recessive
            * `affected_carriers` - affected carriers
            * `any` - any
      required:
      - chromosome
      - date_created
      - date_modified
      - flagsetc
      - frequency
      - impact
      - label
      - presetset
      - quality
      - sodar_uuid
    SampleVariantStatistics:
      type: object
      description: Serializer for ``SampleVariantStatistics``.
      properties:
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        sample_name:
          type: string
          readOnly: true
        ontarget_transitions:
          type: integer
          readOnly: true
        ontarget_transversions:
          type: integer
          readOnly: true
        ontarget_snvs:
          type: integer
          readOnly: true
        ontarget_indels:
          type: integer
          readOnly: true
        ontarget_mnvs:
          type: integer
          readOnly: true
        ontarget_effect_counts:
          readOnly: true
        ontarget_indel_sizes:
          readOnly: true
        ontarget_dps:
          readOnly: true
        ontarget_dp_quantiles:
          type: array
          items:
            type: number
            format: double
          readOnly: true
        het_ratio:
          type: number
          format: double
          readOnly: true
        chrx_het_hom:
          type: number
          format: double
          readOnly: true
        ontarget_ts_tv_ratio:
          type: number
          format: double
          description: Compute Ts/Tv ratio.
          readOnly: true
      required:
      - case
      - chrx_het_hom
      - het_ratio
      - ontarget_dp_quantiles
      - ontarget_dps
      - ontarget_effect_counts
      - ontarget_indel_sizes
      - ontarget_indels
      - ontarget_mnvs
      - ontarget_snvs
      - ontarget_transitions
      - ontarget_transversions
      - ontarget_ts_tv_ratio
      - sample_name
    SamtoolsFlagstatMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        qc_pass:
          $ref: '#/components/schemas/qc_pass'
        qc_fail:
          $ref: '#/components/schemas/qc_fail'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - qc_fail
      - qc_pass
      - sample
      - sodar_uuid
    SamtoolsIdxstatsMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        records:
          $ref: '#/components/schemas/records'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - records
      - sample
      - sodar_uuid
    SamtoolsStatsMainMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        sn:
          $ref: '#/components/schemas/sn'
        chk:
          $ref: '#/components/schemas/chk'
        isize:
          $ref: '#/components/schemas/isize'
        cov:
          $ref: '#/components/schemas/cov'
        gcd:
          $ref: '#/components/schemas/gcd'
        frl:
          $ref: '#/components/schemas/frl'
        lrl:
          $ref: '#/components/schemas/lrl'
        idd:
          $ref: '#/components/schemas/idd'
        ffq:
          $ref: '#/components/schemas/ffq'
        lfq:
          $ref: '#/components/schemas/lfq'
        fbc:
          $ref: '#/components/schemas/fbc'
        lbc:
          $ref: '#/components/schemas/lbc'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
      required:
      - caseqc
      - chk
      - cov
      - date_created
      - date_modified
      - fbc
      - ffq
      - frl
      - gcd
      - idd
      - isize
      - lbc
      - lfq
      - lrl
      - sample
      - sn
      - sodar_uuid
    SamtoolsStatsSupplementaryMetrics:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        caseqc:
          type: string
          format: uuid
          readOnly: true
        gcf:
          $ref: '#/components/schemas/gcf'
        gcl:
          $ref: '#/components/schemas/gcl'
        gcc:
          $ref: '#/components/schemas/gcc'
        gct:
          $ref: '#/components/schemas/gct'
        rl:
          $ref: '#/components/schemas/rl'
        mapq:
          $ref: '#/components/schemas/mapq'
        ic:
          $ref: '#/components/schemas/ic'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        sample:
          type: string
          maxLength: 200
      required:
      - caseqc
      - date_created
      - date_modified
      - gcc
      - gcf
      - gcl
      - gct
      - ic
      - mapq
      - rl
      - sample
      - sodar_uuid
    SettingsShortcuts:
      type: object
      description: Serializer for ``SettingsShortcut``
      properties:
        presets: {}
        query_settings: {}
      required:
      - presets
      - query_settings
    SmallVariantComment:
      type: object
      description: Serializer for the ``SmallVariantComment`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reference:
          type: string
          maxLength: 512
        alternative:
          type: string
          maxLength: 512
        text:
          type: string
        user_can_edit:
          type: boolean
          readOnly: true
      required:
      - alternative
      - case
      - chromosome
      - date_created
      - date_modified
      - end
      - reference
      - release
      - sodar_uuid
      - start
      - text
      - user
      - user_can_edit
    SmallVariantCommentProject:
      type: object
      description: Serializer for the ``SmallVariantComment`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case:
          type: string
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reference:
          type: string
          maxLength: 512
        alternative:
          type: string
          maxLength: 512
        text:
          type: string
        user_can_edit:
          type: boolean
          readOnly: true
      required:
      - alternative
      - case
      - chromosome
      - date_created
      - date_modified
      - end
      - reference
      - release
      - sodar_uuid
      - start
      - text
      - user
      - user_can_edit
    SmallVariantFlags:
      type: object
      description: Serializer for the ``SmallVariantFlags`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reference:
          type: string
          maxLength: 512
        alternative:
          type: string
          maxLength: 512
        flag_bookmarked:
          type: boolean
        flag_incidental:
          type: boolean
        flag_candidate:
          type: boolean
        flag_final_causative:
          type: boolean
        flag_for_validation:
          type: boolean
        flag_no_disease_association:
          type: boolean
        flag_segregates:
          type: boolean
        flag_doesnt_segregate:
          type: boolean
        flag_visual:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_molecular:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_validation:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_phenotype_match:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_summary:
          $ref: '#/components/schemas/VariantRatingEnum'
      required:
      - alternative
      - case
      - chromosome
      - date_created
      - date_modified
      - end
      - reference
      - release
      - sodar_uuid
      - start
    SmallVariantFlagsProject:
      type: object
      description: Serializer for the ``SmallVariantFlags`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case:
          type: string
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reference:
          type: string
          maxLength: 512
        alternative:
          type: string
          maxLength: 512
        flag_bookmarked:
          type: boolean
        flag_incidental:
          type: boolean
        flag_candidate:
          type: boolean
        flag_final_causative:
          type: boolean
        flag_for_validation:
          type: boolean
        flag_no_disease_association:
          type: boolean
        flag_segregates:
          type: boolean
        flag_doesnt_segregate:
          type: boolean
        flag_visual:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_molecular:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_validation:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_phenotype_match:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_summary:
          $ref: '#/components/schemas/VariantRatingEnum'
      required:
      - alternative
      - case
      - chromosome
      - date_created
      - date_modified
      - end
      - reference
      - release
      - sodar_uuid
      - start
    SmallVariantForResult:
      type: object
      description: Serialization of ``SmallVariant`` for fetching results.
      properties:
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reference:
          type: string
          maxLength: 512
        alternative:
          type: string
          maxLength: 512
        var_type:
          type: string
          maxLength: 8
        info: {}
        genotype: {}
        num_hom_alt:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        num_hom_ref:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        num_het:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        num_hemi_alt:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        num_hemi_ref:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        in_clinvar:
          type: boolean
          nullable: true
        exac_frequency:
          type: number
          format: double
          nullable: true
        exac_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        exac_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        exac_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        thousand_genomes_frequency:
          type: number
          format: double
          nullable: true
        thousand_genomes_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        thousand_genomes_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        thousand_genomes_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_exomes_frequency:
          type: number
          format: double
          nullable: true
        gnomad_exomes_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_exomes_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_exomes_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_genomes_frequency:
          type: number
          format: double
          nullable: true
        gnomad_genomes_homozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_genomes_heterozygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        gnomad_genomes_hemizygous:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        refseq_gene_id:
          type: string
          nullable: true
          maxLength: 16
        refseq_transcript_id:
          type: string
          nullable: true
          maxLength: 16
        refseq_transcript_coding:
          type: boolean
          nullable: true
        refseq_hgvs_c:
          type: string
          nullable: true
          maxLength: 512
        refseq_hgvs_p:
          type: string
          nullable: true
          maxLength: 512
        refseq_effect:
          type: array
          items:
            type: string
            maxLength: 64
          nullable: true
        refseq_exon_dist:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        ensembl_gene_id:
          type: string
          nullable: true
          maxLength: 16
        ensembl_transcript_id:
          type: string
          nullable: true
          maxLength: 32
        ensembl_transcript_coding:
          type: boolean
          nullable: true
        ensembl_hgvs_c:
          type: string
          nullable: true
          maxLength: 512
        ensembl_hgvs_p:
          type: string
          nullable: true
          maxLength: 512
        ensembl_effect:
          type: array
          items:
            type: string
            nullable: true
            maxLength: 64
        ensembl_exon_dist:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
      required:
      - alternative
      - chromosome
      - ensembl_effect
      - genotype
      - reference
      - release
      - start
      - var_type
    SmallVariantQuery:
      type: object
      description: Serializer for the ``SmallVariant`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        user:
          type: string
          format: uuid
          description: User SODAR UUID
          readOnly: true
        query_settings: {}
        name:
          type: string
          nullable: true
          description: Optional user-assigned name
          maxLength: 100
        public:
          type: boolean
          description: Case is flagged as public or not
      required:
      - case
      - date_created
      - query_settings
      - sodar_uuid
      - user
    SmallVariantQueryHpoTerm:
      type: object
      description: Serializer for fetching HPO terms of a query.
      properties:
        hpoterms: {}
      required:
      - hpoterms
    SmallVariantQueryResultRow:
      type: object
      description: |-
        Serializer for the ``SmallVariantQueryResultRow`` model **with** the paylaod.

        This serializer is only used in a read-only context.

        Note that the using views should ``preselect_related()`` aggressively to keep down the required database
        queries.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        smallvariantqueryresultset:
          type: string
          format: uuid
          description: Record UUID
          readOnly: true
        release:
          type: string
          readOnly: true
        chromosome:
          type: string
          readOnly: true
        chromosome_no:
          type: integer
          readOnly: true
        bin:
          type: integer
          readOnly: true
        start:
          type: integer
          readOnly: true
        end:
          type: integer
          readOnly: true
        reference:
          type: string
          readOnly: true
        alternative:
          type: string
          readOnly: true
        payload:
          readOnly: true
          description: The query result rows
      required:
      - alternative
      - bin
      - chromosome
      - chromosome_no
      - end
      - payload
      - reference
      - release
      - smallvariantqueryresultset
      - sodar_uuid
      - start
    SmallVariantQueryResultSet:
      type: object
      description: |-
        Serializer for the ``SmallVariantQueryResultSet`` model.

        This serializer is only used in a read-only context.

        Note that the using views should ``preselect_related()`` aggressively to keep down the required database
        queries.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of modification
        smallvariantquery:
          type: string
          format: uuid
          description: Small variant flags SODAR UUID
          readOnly: true
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        start_time:
          type: string
          format: date-time
          readOnly: true
          description: Date time of query start
        end_time:
          type: string
          format: date-time
          readOnly: true
          description: Date time of query end
        elapsed_seconds:
          type: number
          format: double
          readOnly: true
          description: Elapsed seconds
        result_row_count:
          type: integer
          readOnly: true
          description: Number of rows in the result
      required:
      - case
      - date_created
      - date_modified
      - elapsed_seconds
      - end_time
      - result_row_count
      - smallvariantquery
      - sodar_uuid
      - start_time
    SmallVariantQueryWithLogs:
      type: object
      description: Serializer for the ``SmallVariant`` model.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        user:
          type: string
          format: uuid
          description: User SODAR UUID
          readOnly: true
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        query_state:
          allOf:
          - $ref: '#/components/schemas/QueryStateEnum'
          readOnly: true
          description: |-
            The current query state

            * `initial` - initial
            * `running` - running
            * `done` - done
            * `cancelled` - cancelled
            * `failed` - failed
            * `timeout` - timeout
        query_state_msg:
          type: string
          readOnly: true
          nullable: true
          description: Message related to the query state
        query_settings: {}
        logs:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - case
      - date_created
      - logs
      - query_settings
      - query_state
      - query_state_msg
      - sodar_uuid
      - user
    StructuralVariantComment:
      type: object
      description: Serializer for the ``StructuralVariantComment` model.
      properties:
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Annotation UUID
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        sv_type:
          type: string
          maxLength: 32
        sv_sub_type:
          type: string
          maxLength: 32
        text:
          type: string
          description: The comment text
        user_can_edit:
          type: boolean
          readOnly: true
      required:
      - case
      - chromosome
      - date_created
      - date_modified
      - end
      - release
      - sodar_uuid
      - start
      - sv_sub_type
      - sv_type
      - text
      - user
      - user_can_edit
    StructuralVariantCommentProject:
      type: object
      description: Serializer for the ``StructuralVariantComment` model.
      properties:
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Annotation UUID
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        case:
          type: string
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        sv_type:
          type: string
          maxLength: 32
        sv_sub_type:
          type: string
          maxLength: 32
        text:
          type: string
          description: The comment text
        user_can_edit:
          type: boolean
          readOnly: true
      required:
      - case
      - chromosome
      - date_created
      - date_modified
      - end
      - release
      - sodar_uuid
      - start
      - sv_sub_type
      - sv_type
      - text
      - user
      - user_can_edit
    StructuralVariantFlags:
      type: object
      description: Serializer for the ``StructuralVariantFlags` model.
      properties:
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Annotation UUID
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        sv_type:
          type: string
          maxLength: 32
        sv_sub_type:
          type: string
          maxLength: 32
        flag_bookmarked:
          type: boolean
        flag_candidate:
          type: boolean
        flag_final_causative:
          type: boolean
        flag_for_validation:
          type: boolean
        flag_no_disease_association:
          type: boolean
        flag_segregates:
          type: boolean
        flag_doesnt_segregate:
          type: boolean
        flag_visual:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_molecular:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_validation:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_phenotype_match:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_incidental:
          type: boolean
        flag_summary:
          $ref: '#/components/schemas/VariantRatingEnum'
      required:
      - case
      - chromosome
      - date_created
      - date_modified
      - end
      - release
      - sodar_uuid
      - start
      - sv_sub_type
      - sv_type
    StructuralVariantFlagsProject:
      type: object
      description: Serializer for the ``StructuralVariantFlags` model.
      properties:
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Annotation UUID
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        case:
          type: string
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        sv_type:
          type: string
          maxLength: 32
        sv_sub_type:
          type: string
          maxLength: 32
        flag_bookmarked:
          type: boolean
        flag_candidate:
          type: boolean
        flag_final_causative:
          type: boolean
        flag_for_validation:
          type: boolean
        flag_no_disease_association:
          type: boolean
        flag_segregates:
          type: boolean
        flag_doesnt_segregate:
          type: boolean
        flag_visual:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_molecular:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_validation:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_phenotype_match:
          $ref: '#/components/schemas/VariantRatingEnum'
        flag_incidental:
          type: boolean
        flag_summary:
          $ref: '#/components/schemas/VariantRatingEnum'
      required:
      - case
      - chromosome
      - date_created
      - date_modified
      - end
      - release
      - sodar_uuid
      - start
      - sv_sub_type
      - sv_type
    SvAnnotationReleaseInfo:
      type: object
      description: Base serializer for any SODAR model with a sodar_uuid field
      properties:
        genomebuild:
          type: string
          readOnly: true
        table:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        release:
          type: string
          readOnly: true
      required:
      - genomebuild
      - release
      - table
      - timestamp
    SvQueryResultRow:
      type: object
      description: |-
        Serializer for the ``SvQueryResult`` model **with** the paylaod.

        This serializer is only used in a read-only context.

        Note that the using views should ``preselect_related()`` aggressively to keep down the required database
        queries.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        svqueryresultset:
          type: string
          format: uuid
          description: Record UUID
          readOnly: true
        release:
          type: string
          readOnly: true
        chromosome:
          type: string
          readOnly: true
        chromosome_no:
          type: integer
          readOnly: true
        bin:
          type: integer
          readOnly: true
        chromosome2:
          type: string
          readOnly: true
          nullable: true
        chromosome_no2:
          type: integer
          readOnly: true
          nullable: true
        bin2:
          type: integer
          readOnly: true
          nullable: true
        start:
          type: integer
          readOnly: true
        end:
          type: integer
          readOnly: true
        pe_orientation:
          type: string
          readOnly: true
          nullable: true
        sv_type:
          allOf:
          - $ref: '#/components/schemas/SvTypeEnum'
          readOnly: true
        sv_sub_type:
          allOf:
          - $ref: '#/components/schemas/SvSubTypeEnum'
          readOnly: true
        payload:
          readOnly: true
          description: The query result rows
      required:
      - bin
      - bin2
      - chromosome
      - chromosome2
      - chromosome_no
      - chromosome_no2
      - end
      - payload
      - pe_orientation
      - release
      - sodar_uuid
      - start
      - sv_sub_type
      - sv_type
      - svqueryresultset
    SvQueryResultSet:
      type: object
      description: |-
        Serializer for the ``SvQueryResult`` model.

        This serializer is only used in a read-only context.

        Note that the using views should ``preselect_related()`` aggressively to keep down the required database
        queries.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of modification
        svquery:
          type: string
          format: uuid
          description: Record UUID
          readOnly: true
        case:
          type: string
          format: uuid
          description: Case SODAR UUID
          readOnly: true
        start_time:
          type: string
          format: date-time
          readOnly: true
          description: Date time of query start
        end_time:
          type: string
          format: date-time
          readOnly: true
          description: Date time of query end
        elapsed_seconds:
          type: number
          format: double
          readOnly: true
          description: Elapsed seconds
        result_row_count:
          type: integer
          readOnly: true
          description: Number of rows in the result
      required:
      - case
      - date_created
      - date_modified
      - elapsed_seconds
      - end_time
      - result_row_count
      - sodar_uuid
      - start_time
      - svquery
    SvSubTypeEnum:
      enum:
      - DEL
      - DEL:ME
      - DEL:ME:SVA
      - DEL:ME:L1
      - DEL:ME:ALU
      - DUP
      - DUP:TANDEM
      - INV
      - INS
      - INS:ME
      - INS:ME:SVA
      - INS:ME:L1
      - INS:ME:ALU
      - BND
      - CNV
      type: string
      description: |-
        * `DEL` - deletion
        * `DEL:ME` - mobile element deletion
        * `DEL:ME:SVA` - mobile element deletion (SVA)
        * `DEL:ME:L1` - mobile element deletion (LINE1)
        * `DEL:ME:ALU` - mobile element deletion (ALU)
        * `DUP` - duplication
        * `DUP:TANDEM` - tandem duplication
        * `INV` - inversion
        * `INS` - insertion
        * `INS:ME` - mobile_element insertion
        * `INS:ME:SVA` - mobile element deletion (SVA)
        * `INS:ME:L1` - mobile element deletion (LINE1)
        * `INS:ME:ALU` - mobile element deletion (ALU)
        * `BND` - breakend
        * `CNV` - copy number variation
    SvTypeEnum:
      enum:
      - DEL
      - DUP
      - INS
      - INV
      - BND
      - CNV
      type: string
      description: |-
        * `DEL` - deletion
        * `DUP` - duplication
        * `INS` - insertion
        * `INV` - inversion
        * `BND` - breakend
        * `CNV` - copy number variation
    TargetBedFile:
      type: object
      description: Serializer for ``TargetBedFile``.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        enrichmentkit:
          type: string
          format: uuid
          description: Record SODAR UUID
          readOnly: true
        file_uri:
          type: string
          description: The file's URI.
          maxLength: 512
        genome_release:
          allOf:
          - $ref: '#/components/schemas/GenomeReleaseEnum'
          default: grch37
          description: |-
            The file's reference genome.

            * `grch37` - GRCh37
            * `grch38` - GRCh38
      required:
      - date_created
      - date_modified
      - enrichmentkit
      - file_uri
      - sodar_uuid
    VarAnnoSet:
      type: object
      description: Serializer for ``VarAnnoSet``.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        project:
          type: string
          format: uuid
          description: Project SODAR UUID
          readOnly: true
        release:
          allOf:
          - $ref: '#/components/schemas/GenomeBuildVerbatimEnum'
          description: |-
            Genome build of the variant annotation set.

            * `GRCh37` - GRCh37
            * `GRCh38` - GRCh38
        title:
          type: string
          description: The variant annotation set's title.
          maxLength: 100
        description:
          type: string
          nullable: true
          description: An optional description for the variant annotation set.
        fields:
          type: array
          items:
            type: string
            maxLength: 64
          description: The allowed fields in the entries.
      required:
      - date_created
      - date_modified
      - fields
      - project
      - release
      - sodar_uuid
      - title
    VarAnnoSetEntry:
      type: object
      description: Serializer for ``VarAnnoSetEntry``.
      properties:
        sodar_uuid:
          type: string
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        varannoset:
          type: string
          format: uuid
          description: Cohort SODAR UUID
          readOnly: true
        release:
          type: string
          maxLength: 32
        chromosome:
          type: string
          maxLength: 32
        reference:
          type: string
          maxLength: 512
        alternative:
          type: string
          maxLength: 512
        start:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        end:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        payload:
          description: The annotation's data with fields defined in the variant annotation
            set.
      required:
      - alternative
      - chromosome
      - date_created
      - date_modified
      - end
      - payload
      - reference
      - release
      - sodar_uuid
      - start
      - varannoset
    VarfishStats:
      type: object
      description: Serializer for common-denominator stats objects
      properties:
        samples:
          $ref: '#/components/schemas/samples'
        readstats:
          $ref: '#/components/schemas/readstats'
        alignmentstats:
          $ref: '#/components/schemas/alignmentstats'
        seqvarstats:
          $ref: '#/components/schemas/seqvarstats'
        strucvarstats:
          $ref: '#/components/schemas/strucvarstats'
      required:
      - alignmentstats
      - readstats
      - samples
      - seqvarstats
      - strucvarstats
    VariantRatingEnum:
      enum:
      - positive
      - uncertain
      - negative
      - empty
      type: string
      description: |-
        * `positive` - positive
        * `uncertain` - uncertain
        * `negative` - negative
        * `empty` - empty
    VariantSetImportInfo:
      type: object
      description: Serializer for the ``ImportVariantSetInfo`` model.
      properties:
        sodar_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Record UUID
        date_created:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of creation
        date_modified:
          type: string
          format: date-time
          readOnly: true
          description: DateTime of last modification
        genomebuild:
          allOf:
          - $ref: '#/components/schemas/GenomeBuildVerbatimEnum'
          description: |-
            Genome build used in the variant set.

            * `GRCh37` - GRCh37
            * `GRCh38` - GRCh38
        case_import_info:
          type: string
          format: uuid
          description: Record UUID
          readOnly: true
        variant_type:
          allOf:
          - $ref: '#/components/schemas/VariantTypeEnum'
          description: |-
            The type of variant set that is referenced.

            * `SMALL` - variants
            * `STRUCTURAL` - svs
        genotype_files:
          type: array
          items:
            $ref: '#/components/schemas/GenotypeFile'
          readOnly: true
        effect_files:
          type: array
          items:
            $ref: '#/components/schemas/EffectFile'
          readOnly: true
        db_info_files:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseInfoFile'
          readOnly: true
        state:
          allOf:
          - $ref: '#/components/schemas/VariantSetImportInfoStateEnum'
          description: |-
            State of the variant set import

            * `draft` - draft
            * `uploaded` - uploaded
            * `imported` - imported
            * `evicted` - evicted
            * `failed` - failed
      required:
      - case_import_info
      - date_created
      - date_modified
      - db_info_files
      - effect_files
      - genotype_files
      - sodar_uuid
      - variant_type
    VariantSetImportInfoStateEnum:
      enum:
      - draft
      - uploaded
      - imported
      - evicted
      - failed
      type: string
      description: |-
        * `draft` - draft
        * `uploaded` - uploaded
        * `imported` - imported
        * `evicted` - evicted
        * `failed` - failed
    VariantTypeEnum:
      enum:
      - SMALL
      - STRUCTURAL
      type: string
      description: |-
        * `SMALL` - variants
        * `STRUCTURAL` - svs
    af:
      $defs:
        BcftoolsStatsAfRecord:
          description: |-
            A Record from the ``AF`` (non-reference allele frequency) lines in ``bcftools stats``
            output.
          properties:
            af:
              title: Af
              type: number
            snps:
              title: Snps
              type: integer
            ts:
              title: Ts
              type: integer
            tv:
              title: Tv
              type: integer
            indels:
              title: Indels
              type: integer
            repeat_consistent:
              title: Repeat Consistent
              type: integer
            repeat_inconsistent:
              title: Repeat Inconsistent
              type: integer
            na:
              title: Na
              type: integer
          required:
          - af
          - snps
          - ts
          - tv
          - indels
          - repeat_consistent
          - repeat_inconsistent
          - na
          title: BcftoolsStatsAfRecord
          type: object
      items:
        $ref: '#/$defs/BcftoolsStatsAfRecord'
      type: array
    alignmentstats:
      $defs:
        DetailedAlignmentCounts:
          description: Detailed alignment counts
          properties:
            primary:
              title: Primary
              type: integer
            secondary:
              title: Secondary
              type: integer
            supplementary:
              title: Supplementary
              type: integer
            duplicates:
              title: Duplicates
              type: integer
            mapped:
              title: Mapped
              type: integer
            properly_paired:
              title: Properly Paired
              type: integer
            with_itself_and_mate_mapped:
              title: With Itself And Mate Mapped
              type: integer
            singletons:
              title: Singletons
              type: integer
            with_mate_mapped_to_different_chr:
              title: With Mate Mapped To Different Chr
              type: integer
            with_mate_mapped_to_different_chr_mapq:
              title: With Mate Mapped To Different Chr Mapq
              type: integer
            mismatch_rate:
              title: Mismatch Rate
              type: number
            mapq:
              items:
                items:
                  type: integer
                minItems: 2
                type: array
              title: Mapq
              type: array
          required:
          - primary
          - secondary
          - supplementary
          - duplicates
          - mapped
          - properly_paired
          - with_itself_and_mate_mapped
          - singletons
          - with_mate_mapped_to_different_chr
          - with_mate_mapped_to_different_chr_mapq
          - mismatch_rate
          - mapq
          title: DetailedAlignmentCounts
          type: object
        InsertSizeStats:
          description: Per-sample QC stats for insert sizes.
          properties:
            insert_size_mean:
              title: Insert Size Mean
              type: number
            insert_size_median:
              anyOf:
              - type: number
              - type: 'null'
              title: Insert Size Median
            insert_size_stddev:
              title: Insert Size Stddev
              type: number
            insert_size_histogram:
              items:
                items:
                  type: integer
                minItems: 2
                type: array
              title: Insert Size Histogram
              type: array
          required:
          - insert_size_mean
          - insert_size_median
          - insert_size_stddev
          - insert_size_histogram
          title: InsertSizeStats
          type: object
        RegionCoverageStats:
          description: Per-region QC stats for alignment.
          properties:
            region_name:
              title: Region Name
              type: string
            mean_rd:
              title: Mean Rd
              type: number
            min_rd_fraction:
              items:
                items:
                  anyOf:
                  - type: integer
                  - type: number
                minItems: 2
                type: array
              title: Min Rd Fraction
              type: array
          required:
          - region_name
          - mean_rd
          - min_rd_fraction
          title: RegionCoverageStats
          type: object
        SampleAlignmentStats:
          description: Per-sample QC stats for alignment.
          properties:
            sample:
              title: Sample
              type: string
            detailed_counts:
              $ref: '#/$defs/DetailedAlignmentCounts'
            per_chromosome_counts:
              items:
                items:
                  anyOf:
                  - type: string
                  - type: integer
                minItems: 2
                type: array
              title: Per Chromosome Counts
              type: array
            insert_size_stats:
              $ref: '#/$defs/InsertSizeStats'
            region_coverage_stats:
              items:
                $ref: '#/$defs/RegionCoverageStats'
              title: Region Coverage Stats
              type: array
          required:
          - sample
          - detailed_counts
          - per_chromosome_counts
          - insert_size_stats
          - region_coverage_stats
          title: SampleAlignmentStats
          type: object
      items:
        $ref: '#/$defs/SampleAlignmentStats'
      type: array
    chk:
      $defs:
        SamtoolsStatsChkRecord:
          description: A Record from the ``CHK`` lines in ``samtools stats`` output.
          properties:
            read_names_crc32:
              title: Read Names Crc32
              type: string
            sequences_crc32:
              title: Sequences Crc32
              type: string
            qualities_crc32:
              title: Qualities Crc32
              type: string
          required:
          - read_names_crc32
          - sequences_crc32
          - qualities_crc32
          title: SamtoolsStatsChkRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsChkRecord'
      type: array
    chrom_counts:
      $defs:
        CraminoChromNormalizedCountsRecord:
          description: Store one chrom/normalized read counts record from Cramino
            output.
          properties:
            chrom_name:
              title: Chrom Name
              type: string
            normalized_counts:
              title: Normalized Counts
              type: number
          required:
          - chrom_name
          - normalized_counts
          title: CraminoChromNormalizedCountsRecord
          type: object
      items:
        $ref: '#/$defs/CraminoChromNormalizedCountsRecord'
      type: array
    cov:
      $defs:
        SamtoolsStatsHistoRecord:
          description: |-
            A record for a value/count pair.

            Used for ``MAPQ``, ``ID``, ``COV``
          properties:
            value:
              title: Value
              type: integer
            count:
              title: Count
              type: integer
          required:
          - value
          - count
          title: SamtoolsStatsHistoRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsHistoRecord'
      type: array
    dp:
      $defs:
        BcftoolsStatsDpRecord:
          description: A Record from the ``DP`` (AF) lines in ``bcftools stats`` output.
          properties:
            bin:
              title: Bin
              type: integer
            gts:
              title: Gts
              type: integer
            gts_frac:
              title: Gts Frac
              type: number
            sites:
              title: Sites
              type: integer
            sites_frac:
              title: Sites Frac
              type: number
          required:
          - bin
          - gts
          - gts_frac
          - sites
          - sites_frac
          title: BcftoolsStatsDpRecord
          type: object
      items:
        $ref: '#/$defs/BcftoolsStatsDpRecord'
      type: array
    fbc:
      $defs:
        SamtoolsStatsBasePercentagesRecord:
          description: |-
            A Record from the ``GCC``, ``GCT``, ``FBC``, and ``LBC`` lines in ``samtools stats``
            output.
          properties:
            cycle:
              title: Cycle
              type: integer
            percentages:
              items:
                type: number
              title: Percentages
              type: array
          required:
          - cycle
          - percentages
          title: SamtoolsStatsBasePercentagesRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsBasePercentagesRecord'
      type: array
    ffq:
      $defs:
        SamtoolsStatsFqRecord:
          description: A Record from the ``FFQ`` and ``LFQ`` lines in ``samtools stats``
            output.
          properties:
            cycle:
              title: Cycle
              type: integer
            counts:
              items:
                type: integer
              title: Counts
              type: array
          required:
          - cycle
          - counts
          title: SamtoolsStatsFqRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsFqRecord'
      type: array
    frl:
      $defs:
        SamtoolsStatsHistoRecord:
          description: |-
            A record for a value/count pair.

            Used for ``MAPQ``, ``ID``, ``COV``
          properties:
            value:
              title: Value
              type: integer
            count:
              title: Count
              type: integer
          required:
          - value
          - count
          title: SamtoolsStatsHistoRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsHistoRecord'
      type: array
    gcc:
      $defs:
        SamtoolsStatsBasePercentagesRecord:
          description: |-
            A Record from the ``GCC``, ``GCT``, ``FBC``, and ``LBC`` lines in ``samtools stats``
            output.
          properties:
            cycle:
              title: Cycle
              type: integer
            percentages:
              items:
                type: number
              title: Percentages
              type: array
          required:
          - cycle
          - percentages
          title: SamtoolsStatsBasePercentagesRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsBasePercentagesRecord'
      type: array
    gcd:
      $defs:
        SamtoolsStatsGcdRecord:
          description: A record for the ``GCD`` lines in ``samtools stats`` output.
          properties:
            gc_content:
              title: Gc Content
              type: number
            unique_seq_percentiles:
              title: Unique Seq Percentiles
              type: number
            dp_percentile_10:
              title: Dp Percentile 10
              type: number
            dp_percentile_25:
              title: Dp Percentile 25
              type: number
            dp_percentile_50:
              title: Dp Percentile 50
              type: number
            dp_percentile_75:
              title: Dp Percentile 75
              type: number
            dp_percentile_90:
              title: Dp Percentile 90
              type: number
          required:
          - gc_content
          - unique_seq_percentiles
          - dp_percentile_10
          - dp_percentile_25
          - dp_percentile_50
          - dp_percentile_75
          - dp_percentile_90
          title: SamtoolsStatsGcdRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsGcdRecord'
      type: array
    gcf:
      $defs:
        SamtoolsStatsGcRecord:
          description: A Record from the ``GCF`` and ``GCL`` lines in ``samtools stats``
            output.
          properties:
            gc_content:
              title: Gc Content
              type: number
            count:
              title: Count
              type: integer
          required:
          - gc_content
          - count
          title: SamtoolsStatsGcRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsGcRecord'
      type: array
    gcl:
      $defs:
        SamtoolsStatsGcRecord:
          description: A Record from the ``GCF`` and ``GCL`` lines in ``samtools stats``
            output.
          properties:
            gc_content:
              title: Gc Content
              type: number
            count:
              title: Count
              type: integer
          required:
          - gc_content
          - count
          title: SamtoolsStatsGcRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsGcRecord'
      type: array
    gct:
      $defs:
        SamtoolsStatsBasePercentagesRecord:
          description: |-
            A Record from the ``GCC``, ``GCT``, ``FBC``, and ``LBC`` lines in ``samtools stats``
            output.
          properties:
            cycle:
              title: Cycle
              type: integer
            percentages:
              items:
                type: number
              title: Percentages
              type: array
          required:
          - cycle
          - percentages
          title: SamtoolsStatsBasePercentagesRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsBasePercentagesRecord'
      type: array
    ic:
      $defs:
        SamtoolsStatsIcRecord:
          description: A record for the ``IC`` lines in ``samtools stats`` output.
          properties:
            cycle:
              title: Cycle
              type: integer
            ins_fwd:
              title: Ins Fwd
              type: integer
            dels_fwd:
              title: Dels Fwd
              type: integer
            ins_rev:
              title: Ins Rev
              type: integer
            dels_rev:
              title: Dels Rev
              type: integer
          required:
          - cycle
          - ins_fwd
          - dels_fwd
          - ins_rev
          - dels_rev
          title: SamtoolsStatsIcRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsIcRecord'
      type: array
    idd:
      $defs:
        BcftoolsStatsIddRecord:
          description: A Record from the ``IDD`` (indel distribution) lines in ``bcftools
            stats`` output.
          properties:
            length:
              title: Length
              type: integer
            sites:
              title: Sites
              type: integer
            gts:
              title: Gts
              type: integer
            mean_vaf:
              anyOf:
              - type: number
              - type: 'null'
              title: Mean Vaf
          required:
          - length
          - sites
          - gts
          - mean_vaf
          title: BcftoolsStatsIddRecord
          type: object
      items:
        $ref: '#/$defs/BcftoolsStatsIddRecord'
      type: array
    isize:
      $defs:
        SamtoolsStatsIsRecord:
          description: Records for the ``IS`` records.
          properties:
            insert_size:
              title: Insert Size
              type: integer
            pairs_total:
              title: Pairs Total
              type: integer
            pairs_inward:
              title: Pairs Inward
              type: integer
            pairs_outward:
              title: Pairs Outward
              type: integer
            pairs_other:
              title: Pairs Other
              type: integer
          required:
          - insert_size
          - pairs_total
          - pairs_inward
          - pairs_outward
          - pairs_other
          title: SamtoolsStatsIsRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsIsRecord'
      type: array
    lbc:
      $defs:
        SamtoolsStatsBasePercentagesRecord:
          description: |-
            A Record from the ``GCC``, ``GCT``, ``FBC``, and ``LBC`` lines in ``samtools stats``
            output.
          properties:
            cycle:
              title: Cycle
              type: integer
            percentages:
              items:
                type: number
              title: Percentages
              type: array
          required:
          - cycle
          - percentages
          title: SamtoolsStatsBasePercentagesRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsBasePercentagesRecord'
      type: array
    lfq:
      $defs:
        SamtoolsStatsFqRecord:
          description: A Record from the ``FFQ`` and ``LFQ`` lines in ``samtools stats``
            output.
          properties:
            cycle:
              title: Cycle
              type: integer
            counts:
              items:
                type: integer
              title: Counts
              type: array
          required:
          - cycle
          - counts
          title: SamtoolsStatsFqRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsFqRecord'
      type: array
    lrl:
      $defs:
        SamtoolsStatsHistoRecord:
          description: |-
            A record for a value/count pair.

            Used for ``MAPQ``, ``ID``, ``COV``
          properties:
            value:
              title: Value
              type: integer
            count:
              title: Count
              type: integer
          required:
          - value
          - count
          title: SamtoolsStatsHistoRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsHistoRecord'
      type: array
    mapq:
      $defs:
        SamtoolsStatsHistoRecord:
          description: |-
            A record for a value/count pair.

            Used for ``MAPQ``, ``ID``, ``COV``
          properties:
            value:
              title: Value
              type: integer
            count:
              title: Count
              type: integer
          required:
          - value
          - count
          title: SamtoolsStatsHistoRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsHistoRecord'
      type: array
    metrics:
      $defs:
        DragenStyleMetric:
          description: Pydantic model for Dragen-style quality control metric entries
          properties:
            section:
              anyOf:
              - type: string
              - type: 'null'
              title: Section
            entry:
              anyOf:
              - type: string
              - type: 'null'
              title: Entry
            name:
              anyOf:
              - type: string
              - type: 'null'
              title: Name
            value:
              anyOf:
              - type: integer
              - type: number
              - type: string
              - type: 'null'
              title: Value
            value_float:
              anyOf:
              - type: number
              - type: 'null'
              default: null
              title: Value Float
          required:
          - section
          - entry
          - name
          - value
          title: DragenStyleMetric
          type: object
      items:
        $ref: '#/$defs/DragenStyleMetric'
      type: array
    qc_fail:
      description: A record for the ``flagstat`` lines in ``samtools stats`` output.
      properties:
        total:
          default: 0
          title: Total
          type: integer
        primary:
          default: 0
          title: Primary
          type: integer
        secondary:
          default: 0
          title: Secondary
          type: integer
        supplementary:
          default: 0
          title: Supplementary
          type: integer
        duplicates:
          default: 0
          title: Duplicates
          type: integer
        duplicates_primary:
          default: 0
          title: Duplicates Primary
          type: integer
        mapped:
          default: 0
          title: Mapped
          type: integer
        mapped_primary:
          default: 0
          title: Mapped Primary
          type: integer
        paired:
          default: 0
          title: Paired
          type: integer
        fragment_first:
          default: 0
          title: Fragment First
          type: integer
        fragment_last:
          default: 0
          title: Fragment Last
          type: integer
        properly_paired:
          default: 0
          title: Properly Paired
          type: integer
        with_itself_and_mate_mapped:
          default: 0
          title: With Itself And Mate Mapped
          type: integer
        singletons:
          default: 0
          title: Singletons
          type: integer
        with_mate_mapped_to_different_chr:
          default: 0
          title: With Mate Mapped To Different Chr
          type: integer
        with_mate_mapped_to_different_chr_mapq5:
          default: 0
          title: With Mate Mapped To Different Chr Mapq5
          type: integer
      title: SamtoolsFlagstatRecord
      type: object
    qc_pass:
      description: A record for the ``flagstat`` lines in ``samtools stats`` output.
      properties:
        total:
          default: 0
          title: Total
          type: integer
        primary:
          default: 0
          title: Primary
          type: integer
        secondary:
          default: 0
          title: Secondary
          type: integer
        supplementary:
          default: 0
          title: Supplementary
          type: integer
        duplicates:
          default: 0
          title: Duplicates
          type: integer
        duplicates_primary:
          default: 0
          title: Duplicates Primary
          type: integer
        mapped:
          default: 0
          title: Mapped
          type: integer
        mapped_primary:
          default: 0
          title: Mapped Primary
          type: integer
        paired:
          default: 0
          title: Paired
          type: integer
        fragment_first:
          default: 0
          title: Fragment First
          type: integer
        fragment_last:
          default: 0
          title: Fragment Last
          type: integer
        properly_paired:
          default: 0
          title: Properly Paired
          type: integer
        with_itself_and_mate_mapped:
          default: 0
          title: With Itself And Mate Mapped
          type: integer
        singletons:
          default: 0
          title: Singletons
          type: integer
        with_mate_mapped_to_different_chr:
          default: 0
          title: With Mate Mapped To Different Chr
          type: integer
        with_mate_mapped_to_different_chr_mapq5:
          default: 0
          title: With Mate Mapped To Different Chr Mapq5
          type: integer
      title: SamtoolsFlagstatRecord
      type: object
    qual:
      $defs:
        BcftoolsStatsQualRecord:
          description: A Record from the ``QUAL`` (quality) lines in ``bcftools stats``
            output.
          properties:
            qual:
              anyOf:
              - type: number
              - type: 'null'
              title: Qual
            snps:
              title: Snps
              type: integer
            ts:
              title: Ts
              type: integer
            tv:
              title: Tv
              type: integer
            indels:
              title: Indels
              type: integer
          required:
          - qual
          - snps
          - ts
          - tv
          - indels
          title: BcftoolsStatsQualRecord
          type: object
      items:
        $ref: '#/$defs/BcftoolsStatsQualRecord'
      type: array
    readstats:
      $defs:
        SampleReadStats:
          description: Per-sample QC stats for reads.
          properties:
            sample:
              title: Sample
              type: string
            read_length_n50:
              title: Read Length N50
              type: integer
            read_length_histogram:
              items:
                items:
                  type: integer
                minItems: 2
                type: array
              title: Read Length Histogram
              type: array
            total_reads:
              title: Total Reads
              type: integer
            total_yield:
              title: Total Yield
              type: integer
            fragment_first:
              anyOf:
              - type: integer
              - type: 'null'
              title: Fragment First
            fragment_last:
              anyOf:
              - type: integer
              - type: 'null'
              title: Fragment Last
          required:
          - sample
          - read_length_n50
          - read_length_histogram
          - total_reads
          - total_yield
          - fragment_first
          - fragment_last
          title: SampleReadStats
          type: object
      items:
        $ref: '#/$defs/SampleReadStats'
      type: array
    records:
      $defs:
        SamtoolsIdxstatsRecord:
          description: A record for the lines in ``samtools idxstats`` output.
          properties:
            contig_name:
              title: Contig Name
              type: string
            contig_len:
              title: Contig Len
              type: integer
            mapped:
              title: Mapped
              type: integer
            unmapped:
              title: Unmapped
              type: integer
          required:
          - contig_name
          - contig_len
          - mapped
          - unmapped
          title: SamtoolsIdxstatsRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsIdxstatsRecord'
      type: array
    rl:
      $defs:
        SamtoolsStatsHistoRecord:
          description: |-
            A record for a value/count pair.

            Used for ``MAPQ``, ``ID``, ``COV``
          properties:
            value:
              title: Value
              type: integer
            count:
              title: Count
              type: integer
          required:
          - value
          - count
          title: SamtoolsStatsHistoRecord
          type: object
      items:
        $ref: '#/$defs/SamtoolsStatsHistoRecord'
      type: array
    samples:
      items:
        type: string
      type: array
    seqvarstats:
      $defs:
        RegionVariantStats:
          description: Per-region sequence variant statistics.
          properties:
            region_name:
              title: Region Name
              type: string
            snv_count:
              title: Snv Count
              type: integer
            indel_count:
              title: Indel Count
              type: integer
            multiallelic_count:
              title: Multiallelic Count
              type: integer
            transition_count:
              title: Transition Count
              type: integer
            transversion_count:
              title: Transversion Count
              type: integer
            tstv_ratio:
              title: Tstv Ratio
              type: number
          required:
          - region_name
          - snv_count
          - indel_count
          - multiallelic_count
          - transition_count
          - transversion_count
          - tstv_ratio
          title: RegionVariantStats
          type: object
        SampleSeqvarStats:
          description: Per-sample QC stats for sequence variants.
          properties:
            sample:
              title: Sample
              type: string
            genome_wide:
              $ref: '#/$defs/RegionVariantStats'
            per_region:
              items:
                $ref: '#/$defs/RegionVariantStats'
              title: Per Region
              type: array
          required:
          - sample
          - genome_wide
          - per_region
          title: SampleSeqvarStats
          type: object
      items:
        $ref: '#/$defs/SampleSeqvarStats'
      type: array
    sis:
      $defs:
        BcftoolsStatsSisRecord:
          description: A Record from the ``SiS`` (singleton stats) lines in ``bcftools
            stats`` output.
          properties:
            total:
              title: Total
              type: integer
            snps:
              title: Snps
              type: integer
            ts:
              title: Ts
              type: integer
            tv:
              title: Tv
              type: integer
            indels:
              title: Indels
              type: integer
            repeat_consistent:
              title: Repeat Consistent
              type: integer
            repeat_inconsistent:
              title: Repeat Inconsistent
              type: integer
          required:
          - total
          - snps
          - ts
          - tv
          - indels
          - repeat_consistent
          - repeat_inconsistent
          title: BcftoolsStatsSisRecord
          type: object
      items:
        $ref: '#/$defs/BcftoolsStatsSisRecord'
      type: array
    sn:
      $defs:
        BcftoolsStatsSnRecord:
          description: A Record from the ``SN`` lines in ``bcftools stats`` output.
          properties:
            key:
              title: Key
              type: string
            value:
              anyOf:
              - type: integer
              - type: number
              - type: string
              - type: 'null'
              title: Value
          required:
          - key
          - value
          title: BcftoolsStatsSnRecord
          type: object
      items:
        $ref: '#/$defs/BcftoolsStatsSnRecord'
      type: array
    st:
      $defs:
        BcftoolsStatsStRecord:
          description: A Record from the ``ST`` (substitution types) lines in ``bcftools
            stats`` output.
          properties:
            type:
              title: Type
              type: string
            count:
              title: Count
              type: integer
          required:
          - type
          - count
          title: BcftoolsStatsStRecord
          type: object
      items:
        $ref: '#/$defs/BcftoolsStatsStRecord'
      type: array
    strucvarstats:
      $defs:
        SampleStrucvarStats:
          description: Per-sample QC stats for structural variants.
          properties:
            sample:
              title: Sample
              type: string
            deletion_count:
              title: Deletion Count
              type: integer
            duplication_count:
              title: Duplication Count
              type: integer
            insertion_count:
              title: Insertion Count
              type: integer
            inversion_count:
              title: Inversion Count
              type: integer
            breakend_count:
              title: Breakend Count
              type: integer
          required:
          - sample
          - deletion_count
          - duplication_count
          - insertion_count
          - inversion_count
          - breakend_count
          title: SampleStrucvarStats
          type: object
      items:
        $ref: '#/$defs/SampleStrucvarStats'
      type: array
    summary:
      $defs:
        CraminoSummaryRecord:
          description: Store a summary record from the cramino output file.
          properties:
            key:
              title: Key
              type: string
            value:
              anyOf:
              - type: integer
              - type: number
              - type: string
              title: Value
          required:
          - key
          - value
          title: CraminoSummaryRecord
          type: object
      items:
        $ref: '#/$defs/CraminoSummaryRecord'
      type: array
    tstv:
      $defs:
        BcftoolsStatsTstvRecord:
          description: A Record from the ``TSTV`` lines in ``bcftools stats`` output.
          properties:
            ts:
              title: Ts
              type: integer
            tv:
              title: Tv
              type: integer
            tstv:
              title: Tstv
              type: number
            ts_1st_alt:
              title: Ts 1St Alt
              type: integer
            tv_1st_alt:
              title: Tv 1St Alt
              type: integer
            tstv_1st_alt:
              title: Tstv 1St Alt
              type: number
          required:
          - ts
          - tv
          - tstv
          - ts_1st_alt
          - tv_1st_alt
          - tstv_1st_alt
          title: BcftoolsStatsTstvRecord
          type: object
      items:
        $ref: '#/$defs/BcftoolsStatsTstvRecord'
      type: array
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    knoxApiToken:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
