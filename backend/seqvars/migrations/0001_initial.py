# Generated by Django 3.2.25 on 2024-06-27 12:07

import typing
import uuid

import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import django_pydantic_field.compat.django
import django_pydantic_field.fields

import seqvars.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("projectroles", "0028_populate_finder_role"),
        ("cases_analysis", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Query",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cases_analysis.caseanalysissession",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="QueryExecution",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("initial", "initial"),
                            ("queued", "queued"),
                            ("running", "running"),
                            ("failed", "failed"),
                            ("canceled", "canceled"),
                            ("done", "done"),
                        ],
                        max_length=64,
                    ),
                ),
                ("complete_percent", models.IntegerField(null=True)),
                ("start_time", models.DateTimeField(null=True)),
                ("end_time", models.DateTimeField(null=True)),
                ("elapsed_seconds", models.FloatField(null=True)),
                (
                    "query",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="seqvars.query"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="QuerySettings",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cases_analysis.caseanalysissession",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ResultSet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("result_row_count", models.IntegerField()),
                (
                    "datasource_infos",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            typing.Union, (seqvars.models.DataSourceInfos, type(None))
                        ),
                    ),
                ),
                (
                    "queryexecution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="seqvars.queryexecution"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ResultRow",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("release", models.CharField(max_length=32)),
                ("chromosome", models.CharField(max_length=32)),
                ("chromosome_no", models.IntegerField()),
                ("start", models.IntegerField()),
                ("stop", models.IntegerField()),
                ("reference", models.CharField(max_length=512)),
                ("alternative", models.CharField(max_length=512)),
                (
                    "payload",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            typing.Union, (seqvars.models.ResultRowPayload, type(None))
                        ),
                    ),
                ),
                (
                    "resultset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="seqvars.resultset"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuerySettingsFrequency",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("gnomad_exomes_enabled", models.BooleanField(default=False)),
                ("gnomad_exomes_frequency", models.FloatField(blank=True, null=True)),
                ("gnomad_exomes_homozygous", models.BooleanField(blank=True, null=True)),
                ("gnomad_exomes_heterozygous", models.BooleanField(blank=True, null=True)),
                ("gnomad_exomes_hemizygous", models.BooleanField(blank=True, null=True)),
                ("gnomad_genomes_enabled", models.BooleanField(default=False)),
                ("gnomad_genomes_frequency", models.FloatField(blank=True, null=True)),
                ("gnomad_genomes_homozygous", models.BooleanField(blank=True, null=True)),
                ("gnomad_genomes_heterozygous", models.BooleanField(blank=True, null=True)),
                ("gnomad_genomes_hemizygous", models.BooleanField(blank=True, null=True)),
                ("helixmtdb_enabled", models.BooleanField(default=False)),
                ("helixmtdb_heteroplasmic", models.IntegerField(blank=True, null=True)),
                ("helixmtdb_homoplasmic", models.IntegerField(blank=True, null=True)),
                ("helixmtdb_frequency", models.FloatField(blank=True, null=True)),
                ("inhouse_enabled", models.BooleanField(default=False)),
                ("inhouse_carriers", models.IntegerField(blank=True, null=True)),
                ("inhouse_homozygous", models.BooleanField(blank=True, null=True)),
                ("inhouse_heterozygous", models.BooleanField(blank=True, null=True)),
                ("inhouse_hemizygous", models.BooleanField(blank=True, null=True)),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "querysettings",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="seqvars.querysettings"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="QueryPresetsSet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
                ("description", models.TextField(null=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="projectroles.project"
                    ),
                ),
            ],
            options={
                "ordering": ["rank"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="QueryPresetsFrequency",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("gnomad_exomes_enabled", models.BooleanField(default=False)),
                ("gnomad_exomes_frequency", models.FloatField(blank=True, null=True)),
                ("gnomad_exomes_homozygous", models.BooleanField(blank=True, null=True)),
                ("gnomad_exomes_heterozygous", models.BooleanField(blank=True, null=True)),
                ("gnomad_exomes_hemizygous", models.BooleanField(blank=True, null=True)),
                ("gnomad_genomes_enabled", models.BooleanField(default=False)),
                ("gnomad_genomes_frequency", models.FloatField(blank=True, null=True)),
                ("gnomad_genomes_homozygous", models.BooleanField(blank=True, null=True)),
                ("gnomad_genomes_heterozygous", models.BooleanField(blank=True, null=True)),
                ("gnomad_genomes_hemizygous", models.BooleanField(blank=True, null=True)),
                ("helixmtdb_enabled", models.BooleanField(default=False)),
                ("helixmtdb_heteroplasmic", models.IntegerField(blank=True, null=True)),
                ("helixmtdb_homoplasmic", models.IntegerField(blank=True, null=True)),
                ("helixmtdb_frequency", models.FloatField(blank=True, null=True)),
                ("inhouse_enabled", models.BooleanField(default=False)),
                ("inhouse_carriers", models.IntegerField(blank=True, null=True)),
                ("inhouse_homozygous", models.BooleanField(blank=True, null=True)),
                ("inhouse_heterozygous", models.BooleanField(blank=True, null=True)),
                ("inhouse_hemizygous", models.BooleanField(blank=True, null=True)),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
                ("description", models.TextField(null=True)),
                (
                    "presetsset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="seqvars.querypresetsset"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="queryexecution",
            name="querysettings",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="seqvars.querysettings"
            ),
        ),
        migrations.AddField(
            model_name="query",
            name="settings_buffer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="seqvars.querysettings"
            ),
        ),
    ]
