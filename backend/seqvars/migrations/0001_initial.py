# Generated by Django 3.2.25 on 2024-07-02 08:39

import typing
import uuid

from django.conf import settings
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import django_pydantic_field.compat.django
import django_pydantic_field.fields
import modelcluster.fields

import seqvars.models.base


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("cases_analysis", "0001_initial"),
        ("projectroles", "0028_populate_finder_role"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SeqvarsQuery",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQueryColumnsConfig",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "column_settings",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.SeqvarsColumnConfigPydantic,)
                        ),
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQueryExecution",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("initial", "initial"),
                            ("queued", "queued"),
                            ("running", "running"),
                            ("failed", "failed"),
                            ("canceled", "canceled"),
                            ("done", "done"),
                        ],
                        max_length=64,
                    ),
                ),
                ("complete_percent", models.IntegerField(null=True)),
                ("start_time", models.DateTimeField(null=True)),
                ("end_time", models.DateTimeField(null=True)),
                ("elapsed_seconds", models.FloatField(null=True)),
                (
                    "query",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="seqvars.seqvarsquery"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQueryPresetsSet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
                ("description", models.TextField(null=True)),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seqvarspresetsset",
                        to="projectroles.project",
                    ),
                ),
            ],
            options={
                "ordering": ["rank"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQueryPresetsSetVersion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("version_major", models.IntegerField(default=1)),
                ("version_minor", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "active"), ("draft", "draft"), ("retired", "retired")],
                        default="draft",
                        max_length=32,
                    ),
                ),
                (
                    "presetsset",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="seqvars.seqvarsquerypresetsset",
                    ),
                ),
                (
                    "signed_off_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-version_major", "-version_minor"],
                "unique_together": {("presetsset", "version_major", "version_minor")},
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQuerySettings",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "presetssetversion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="seqvars.seqvarsquerypresetssetversion",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cases_analysis.caseanalysissession",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsResultSet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("result_row_count", models.IntegerField()),
                (
                    "datasource_infos",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            typing.Union, (seqvars.models.base.DataSourceInfosPydantic, type(None))
                        ),
                    ),
                ),
                (
                    "queryexecution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="seqvars.seqvarsqueryexecution",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsResultRow",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("release", models.CharField(max_length=32)),
                ("chromosome", models.CharField(max_length=32)),
                ("chromosome_no", models.IntegerField()),
                ("start", models.IntegerField()),
                ("stop", models.IntegerField()),
                ("reference", models.CharField(max_length=512)),
                ("alternative", models.CharField(max_length=512)),
                (
                    "payload",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            typing.Union, (seqvars.models.base.SeqvarsResultRow, type(None))
                        ),
                    ),
                ),
                (
                    "resultset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="seqvars.seqvarsresultset"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SeqvarsQuerySettingsVariantPrio",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("variant_prio_enabled", models.BooleanField(default=False)),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "services",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.SeqvarsPrioServicePydantic,)
                        ),
                    ),
                ),
                (
                    "querysettings",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variantprio",
                        to="seqvars.seqvarsquerysettings",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQuerySettingsQuality",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "sample_quality_filters",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.SeqvarsSampleQualityFilterPydantic,)
                        ),
                    ),
                ),
                (
                    "querysettings",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quality",
                        to="seqvars.seqvarsquerysettings",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQuerySettingsPhenotypePrio",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("phenotype_prio_enabled", models.BooleanField(default=False)),
                (
                    "phenotype_prio_algorithm",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "terms",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.TermPresencePydantic,)
                        ),
                    ),
                ),
                (
                    "querysettings",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phenotypeprio",
                        to="seqvars.seqvarsquerysettings",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQuerySettingsLocus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "genes",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.GenePydantic,)
                        ),
                    ),
                ),
                (
                    "gene_panels",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.GenePanelPydantic,)
                        ),
                    ),
                ),
                (
                    "genome_regions",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.GenomeRegionPydantic,)
                        ),
                    ),
                ),
                (
                    "querysettings",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locus",
                        to="seqvars.seqvarsquerysettings",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQuerySettingsGenotype",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "sample_genotype_choices",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.SeqvarsSampleGenotypePydantic,)
                        ),
                    ),
                ),
                (
                    "querysettings",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="genotype",
                        to="seqvars.seqvarsquerysettings",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQuerySettingsFrequency",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("gnomad_exomes_enabled", models.BooleanField(default=False)),
                ("gnomad_exomes_frequency", models.FloatField(blank=True, null=True)),
                ("gnomad_exomes_homozygous", models.IntegerField(blank=True, null=True)),
                ("gnomad_exomes_heterozygous", models.IntegerField(blank=True, null=True)),
                ("gnomad_exomes_hemizygous", models.IntegerField(blank=True, null=True)),
                ("gnomad_genomes_enabled", models.BooleanField(default=False)),
                ("gnomad_genomes_frequency", models.FloatField(blank=True, null=True)),
                ("gnomad_genomes_homozygous", models.IntegerField(blank=True, null=True)),
                ("gnomad_genomes_heterozygous", models.IntegerField(blank=True, null=True)),
                ("gnomad_genomes_hemizygous", models.IntegerField(blank=True, null=True)),
                ("helixmtdb_enabled", models.BooleanField(default=False)),
                ("helixmtdb_heteroplasmic", models.IntegerField(blank=True, null=True)),
                ("helixmtdb_homoplasmic", models.IntegerField(blank=True, null=True)),
                ("helixmtdb_frequency", models.FloatField(blank=True, null=True)),
                ("inhouse_enabled", models.BooleanField(default=False)),
                ("inhouse_carriers", models.IntegerField(blank=True, null=True)),
                ("inhouse_homozygous", models.IntegerField(blank=True, null=True)),
                ("inhouse_heterozygous", models.IntegerField(blank=True, null=True)),
                ("inhouse_hemizygous", models.IntegerField(blank=True, null=True)),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "querysettings",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="frequency",
                        to="seqvars.seqvarsquerysettings",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQuerySettingsConsequence",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("max_distance_to_exon", models.IntegerField(blank=True, null=True)),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "variant_types",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.SeqvarsVariantTypeChoice,)
                        ),
                    ),
                ),
                (
                    "transcript_types",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.SeqvarsTranscriptTypeChoice,)
                        ),
                    ),
                ),
                (
                    "variant_consequences",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.SeqvarsVariantConsequenceChoice,)
                        ),
                    ),
                ),
                (
                    "querysettings",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consequence",
                        to="seqvars.seqvarsquerysettings",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQuerySettingsClinvar",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("clinvar_presence_required", models.BooleanField(default=False)),
                ("allow_conflicting_interpretations", models.BooleanField(default=False)),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "clinvar_germline_aggregate_description",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.ClinvarGermlineAggregateDescriptionChoice,)
                        ),
                    ),
                ),
                (
                    "querysettings",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clinvar",
                        to="seqvars.seqvarsquerysettings",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQueryPresetsVariantPrio",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("variant_prio_enabled", models.BooleanField(default=False)),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
                ("description", models.TextField(null=True)),
                (
                    "services",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.SeqvarsPrioServicePydantic,)
                        ),
                    ),
                ),
                (
                    "presetssetversion",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="seqvars.seqvarsquerypresetssetversion",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQueryPresetsQuality",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
                ("description", models.TextField(null=True)),
                ("filter_active", models.BooleanField(default=False)),
                ("min_dp_het", models.IntegerField(blank=True, null=True)),
                ("min_dp_hom", models.IntegerField(blank=True, null=True)),
                ("min_ab_het", models.FloatField(blank=True, null=True)),
                ("min_gq", models.IntegerField(blank=True, null=True)),
                ("min_ad", models.IntegerField(blank=True, null=True)),
                ("max_ad", models.IntegerField(blank=True, null=True)),
                (
                    "presetssetversion",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="seqvars.seqvarsquerypresetssetversion",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQueryPresetsPhenotypePrio",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("phenotype_prio_enabled", models.BooleanField(default=False)),
                (
                    "phenotype_prio_algorithm",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
                ("description", models.TextField(null=True)),
                (
                    "terms",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.TermPresencePydantic,)
                        ),
                    ),
                ),
                (
                    "presetssetversion",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="seqvars.seqvarsquerypresetssetversion",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQueryPresetsLocus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
                ("description", models.TextField(null=True)),
                (
                    "genes",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.GenePydantic,)
                        ),
                    ),
                ),
                (
                    "gene_panels",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.GenePanelPydantic,)
                        ),
                    ),
                ),
                (
                    "genome_regions",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.GenomeRegionPydantic,)
                        ),
                    ),
                ),
                (
                    "presetssetversion",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="seqvars.seqvarsquerypresetssetversion",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQueryPresetsFrequency",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("gnomad_exomes_enabled", models.BooleanField(default=False)),
                ("gnomad_exomes_frequency", models.FloatField(blank=True, null=True)),
                ("gnomad_exomes_homozygous", models.IntegerField(blank=True, null=True)),
                ("gnomad_exomes_heterozygous", models.IntegerField(blank=True, null=True)),
                ("gnomad_exomes_hemizygous", models.IntegerField(blank=True, null=True)),
                ("gnomad_genomes_enabled", models.BooleanField(default=False)),
                ("gnomad_genomes_frequency", models.FloatField(blank=True, null=True)),
                ("gnomad_genomes_homozygous", models.IntegerField(blank=True, null=True)),
                ("gnomad_genomes_heterozygous", models.IntegerField(blank=True, null=True)),
                ("gnomad_genomes_hemizygous", models.IntegerField(blank=True, null=True)),
                ("helixmtdb_enabled", models.BooleanField(default=False)),
                ("helixmtdb_heteroplasmic", models.IntegerField(blank=True, null=True)),
                ("helixmtdb_homoplasmic", models.IntegerField(blank=True, null=True)),
                ("helixmtdb_frequency", models.FloatField(blank=True, null=True)),
                ("inhouse_enabled", models.BooleanField(default=False)),
                ("inhouse_carriers", models.IntegerField(blank=True, null=True)),
                ("inhouse_homozygous", models.IntegerField(blank=True, null=True)),
                ("inhouse_heterozygous", models.IntegerField(blank=True, null=True)),
                ("inhouse_hemizygous", models.IntegerField(blank=True, null=True)),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
                ("description", models.TextField(null=True)),
                (
                    "presetssetversion",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="seqvars.seqvarsquerypresetssetversion",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQueryPresetsConsequence",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("max_distance_to_exon", models.IntegerField(blank=True, null=True)),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
                ("description", models.TextField(null=True)),
                (
                    "variant_types",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.SeqvarsVariantTypeChoice,)
                        ),
                    ),
                ),
                (
                    "transcript_types",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.SeqvarsTranscriptTypeChoice,)
                        ),
                    ),
                ),
                (
                    "variant_consequences",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.SeqvarsVariantConsequenceChoice,)
                        ),
                    ),
                ),
                (
                    "presetssetversion",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="seqvars.seqvarsquerypresetssetversion",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQueryPresetsColumns",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
                ("description", models.TextField(null=True)),
                (
                    "column_settings",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.SeqvarsColumnConfigPydantic,)
                        ),
                    ),
                ),
                (
                    "presetssetversion",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="seqvars.seqvarsquerypresetssetversion",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SeqvarsQueryPresetsClinvar",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("clinvar_presence_required", models.BooleanField(default=False)),
                ("allow_conflicting_interpretations", models.BooleanField(default=False)),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
                ("description", models.TextField(null=True)),
                (
                    "clinvar_germline_aggregate_description",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (seqvars.models.base.ClinvarGermlineAggregateDescriptionChoice,)
                        ),
                    ),
                ),
                (
                    "presetssetversion",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="seqvars.seqvarsquerypresetssetversion",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="seqvarsqueryexecution",
            name="querysettings",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="seqvars.seqvarsquerysettings"
            ),
        ),
        migrations.AddField(
            model_name="seqvarsquery",
            name="columnsconfig",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.PROTECT, to="seqvars.seqvarsquerycolumnsconfig"
            ),
        ),
        migrations.AddField(
            model_name="seqvarsquery",
            name="session",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="cases_analysis.caseanalysissession"
            ),
        ),
        migrations.AddField(
            model_name="seqvarsquery",
            name="settings",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.PROTECT, to="seqvars.seqvarsquerysettings"
            ),
        ),
        migrations.CreateModel(
            name="SeqvarsPredefinedQuery",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("sodar_uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("rank", models.IntegerField()),
                ("label", models.CharField(max_length=128)),
                ("description", models.TextField(null=True)),
                ("included_in_sop", models.BooleanField(default=False)),
                (
                    "genotype",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default={"choice": None},
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            typing.Union,
                            (seqvars.models.base.SeqvarsGenotypePresetsPydantic, type(None)),
                        ),
                    ),
                ),
                (
                    "clinvar",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seqvars.seqvarsquerypresetsclinvar",
                    ),
                ),
                (
                    "columns",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seqvars.seqvarsquerypresetscolumns",
                    ),
                ),
                (
                    "consequence",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seqvars.seqvarsquerypresetsconsequence",
                    ),
                ),
                (
                    "frequency",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seqvars.seqvarsquerypresetsfrequency",
                    ),
                ),
                (
                    "locus",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seqvars.seqvarsquerypresetslocus",
                    ),
                ),
                (
                    "phenotypeprio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seqvars.seqvarsquerypresetsphenotypeprio",
                    ),
                ),
                (
                    "presetssetversion",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="seqvars.seqvarsquerypresetssetversion",
                    ),
                ),
                (
                    "quality",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seqvars.seqvarsquerypresetsquality",
                    ),
                ),
                (
                    "variantprio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seqvars.seqvarsquerypresetsvariantprio",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
