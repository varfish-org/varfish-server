"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _RecessiveMode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _RecessiveModeEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RecessiveMode.ValueType],
    builtins.type,
):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    RECESSIVE_MODE_UNSPECIFIED: _RecessiveMode.ValueType  # 0
    """Unknown recessive mode."""
    RECESSIVE_MODE_DISABLED: _RecessiveMode.ValueType  # 1
    """Disabled recessive mode."""
    RECESSIVE_MODE_COMPOUND_HETEROZYGOUS: _RecessiveMode.ValueType  # 2
    """Compound heterozygous recessive mode."""
    RECESSIVE_MODE_HOMOZYGOUS: _RecessiveMode.ValueType  # 3
    """Homozygous recessive mode."""
    RECESSIVE_MODE_ANY: _RecessiveMode.ValueType  # 4
    """Generic recessive mode."""

class RecessiveMode(_RecessiveMode, metaclass=_RecessiveModeEnumTypeWrapper):
    """Enumeration for recessive mode queries."""

RECESSIVE_MODE_UNSPECIFIED: RecessiveMode.ValueType  # 0
"""Unknown recessive mode."""
RECESSIVE_MODE_DISABLED: RecessiveMode.ValueType  # 1
"""Disabled recessive mode."""
RECESSIVE_MODE_COMPOUND_HETEROZYGOUS: RecessiveMode.ValueType  # 2
"""Compound heterozygous recessive mode."""
RECESSIVE_MODE_HOMOZYGOUS: RecessiveMode.ValueType  # 3
"""Homozygous recessive mode."""
RECESSIVE_MODE_ANY: RecessiveMode.ValueType  # 4
"""Generic recessive mode."""
global___RecessiveMode = RecessiveMode

class _GenotypeChoice:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _GenotypeChoiceEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_GenotypeChoice.ValueType],
    builtins.type,
):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    GENOTYPE_CHOICE_UNSPECIFIED: _GenotypeChoice.ValueType  # 0
    """Unknown genotype."""
    GENOTYPE_CHOICE_ANY: _GenotypeChoice.ValueType  # 1
    """Any genoype."""
    GENOTYPE_CHOICE_REF: _GenotypeChoice.ValueType  # 2
    """Reference genotype."""
    GENOTYPE_CHOICE_HET: _GenotypeChoice.ValueType  # 3
    """Heterozygous genotype."""
    GENOTYPE_CHOICE_HOM: _GenotypeChoice.ValueType  # 4
    """Homozygous genotype."""
    GENOTYPE_CHOICE_NON_HET: _GenotypeChoice.ValueType  # 5
    """Non-heterozygous genotype."""
    GENOTYPE_CHOICE_NON_HOM: _GenotypeChoice.ValueType  # 6
    """Non-homozygous genotype."""
    GENOTYPE_CHOICE_VARIANT: _GenotypeChoice.ValueType  # 7
    """Variant genotype."""
    GENOTYPE_CHOICE_RECESSIVE_INDEX: _GenotypeChoice.ValueType  # 8
    """Recessive index."""
    GENOTYPE_CHOICE_RECESSIVE_FATHER: _GenotypeChoice.ValueType  # 9
    """Recessive father."""
    GENOTYPE_CHOICE_RECESSIVE_MOTHER: _GenotypeChoice.ValueType  # 10
    """Recessive mother."""

class GenotypeChoice(_GenotypeChoice, metaclass=_GenotypeChoiceEnumTypeWrapper):
    """Choice for genotype."""

GENOTYPE_CHOICE_UNSPECIFIED: GenotypeChoice.ValueType  # 0
"""Unknown genotype."""
GENOTYPE_CHOICE_ANY: GenotypeChoice.ValueType  # 1
"""Any genoype."""
GENOTYPE_CHOICE_REF: GenotypeChoice.ValueType  # 2
"""Reference genotype."""
GENOTYPE_CHOICE_HET: GenotypeChoice.ValueType  # 3
"""Heterozygous genotype."""
GENOTYPE_CHOICE_HOM: GenotypeChoice.ValueType  # 4
"""Homozygous genotype."""
GENOTYPE_CHOICE_NON_HET: GenotypeChoice.ValueType  # 5
"""Non-heterozygous genotype."""
GENOTYPE_CHOICE_NON_HOM: GenotypeChoice.ValueType  # 6
"""Non-homozygous genotype."""
GENOTYPE_CHOICE_VARIANT: GenotypeChoice.ValueType  # 7
"""Variant genotype."""
GENOTYPE_CHOICE_RECESSIVE_INDEX: GenotypeChoice.ValueType  # 8
"""Recessive index."""
GENOTYPE_CHOICE_RECESSIVE_FATHER: GenotypeChoice.ValueType  # 9
"""Recessive father."""
GENOTYPE_CHOICE_RECESSIVE_MOTHER: GenotypeChoice.ValueType  # 10
"""Recessive mother."""
global___GenotypeChoice = GenotypeChoice

class _VariantType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _VariantTypeEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_VariantType.ValueType],
    builtins.type,
):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    VARIANT_TYPE_UNSPECIFIED: _VariantType.ValueType  # 0
    """Unknown variant type"""
    VARIANT_TYPE_SNV: _VariantType.ValueType  # 1
    """SNV"""
    VARIANT_TYPE_INDEL: _VariantType.ValueType  # 2
    """Indel"""
    VARIANT_TYPE_MNV: _VariantType.ValueType  # 3
    """MNV"""
    VARIANT_TYPE_COMPLEX_SUBSTITUTION: _VariantType.ValueType  # 4
    """Complex Substitution"""

class VariantType(_VariantType, metaclass=_VariantTypeEnumTypeWrapper):
    """The variant types."""

VARIANT_TYPE_UNSPECIFIED: VariantType.ValueType  # 0
"""Unknown variant type"""
VARIANT_TYPE_SNV: VariantType.ValueType  # 1
"""SNV"""
VARIANT_TYPE_INDEL: VariantType.ValueType  # 2
"""Indel"""
VARIANT_TYPE_MNV: VariantType.ValueType  # 3
"""MNV"""
VARIANT_TYPE_COMPLEX_SUBSTITUTION: VariantType.ValueType  # 4
"""Complex Substitution"""
global___VariantType = VariantType

class _TranscriptType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _TranscriptTypeEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TranscriptType.ValueType],
    builtins.type,
):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    TRANSCRIPT_TYPE_UNSPECIFIED: _TranscriptType.ValueType  # 0
    """Unknown transcript type."""
    TRANSCRIPT_TYPE_CODING: _TranscriptType.ValueType  # 1
    """Coding transcript."""
    TRANSCRIPT_TYPE_NON_CODING: _TranscriptType.ValueType  # 2
    """Non-coding transcript."""

class TranscriptType(_TranscriptType, metaclass=_TranscriptTypeEnumTypeWrapper):
    """Transcript types to consider."""

TRANSCRIPT_TYPE_UNSPECIFIED: TranscriptType.ValueType  # 0
"""Unknown transcript type."""
TRANSCRIPT_TYPE_CODING: TranscriptType.ValueType  # 1
"""Coding transcript."""
TRANSCRIPT_TYPE_NON_CODING: TranscriptType.ValueType  # 2
"""Non-coding transcript."""
global___TranscriptType = TranscriptType

class _Consequence:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ConsequenceEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Consequence.ValueType],
    builtins.type,
):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CONSEQUENCE_UNSPECIFIED: _Consequence.ValueType  # 0
    """Unknown consequence.

    high impact
    """
    CONSEQUENCE_TRANSCRIPT_ABLATION: _Consequence.ValueType  # 1
    """Transcript ablation."""
    CONSEQUENCE_EXON_LOSS_VARIANT: _Consequence.ValueType  # 2
    """Exon loss variant."""
    CONSEQUENCE_SPLICE_ACCEPTOR_VARIANT: _Consequence.ValueType  # 3
    """Splice acceptor variant"""
    CONSEQUENCE_SPLICE_DONOR_VARIANT: _Consequence.ValueType  # 4
    """Splice donor variant"""
    CONSEQUENCE_STOP_GAINED: _Consequence.ValueType  # 5
    """Stop gained"""
    CONSEQUENCE_FRAMESHIFT_VARIANT: _Consequence.ValueType  # 6
    """Frameshift variant"""
    CONSEQUENCE_STOP_LOST: _Consequence.ValueType  # 7
    """Stop lost"""
    CONSEQUENCE_START_LOST: _Consequence.ValueType  # 8
    """Start lost"""
    CONSEQUENCE_TRANSCRIPT_AMPLIFICATION: _Consequence.ValueType  # 9
    """Transcript amplification"""
    CONSEQUENCE_FEATURE_ELONGATION: _Consequence.ValueType  # 10
    """Feature elongation."""
    CONSEQUENCE_FEATURE_TRUNCATION: _Consequence.ValueType  # 11
    """Feature truncation.

    moderate impact
    """
    CONSEQUENCE_DISRUPTIVE_INFRAME_INSERTION: _Consequence.ValueType  # 12
    """Disruptive inframe insertion"""
    CONSEQUENCE_DISRUPTIVE_INFRAME_DELETION: _Consequence.ValueType  # 13
    """Disruptive inframe deletion"""
    CONSEQUENCE_CONSERVATIVE_INFRAME_INSERTION: _Consequence.ValueType  # 14
    """Conservative inframe insertion"""
    CONSEQUENCE_CONSERVATIVE_INFRAME_DELETION: _Consequence.ValueType  # 15
    """Conservative inframe deletion"""
    CONSEQUENCE_MISSENSE_VARIANT: _Consequence.ValueType  # 16
    """Missense variant

    low impact
    """
    CONSEQUENCE_SPLICE_DONOR_FIFTH_BASE_VARIANT: _Consequence.ValueType  # 17
    """Splice donor 5th base variant."""
    CONSEQUENCE_SPLICE_REGION_VARIANT: _Consequence.ValueType  # 18
    """Splice region variant."""
    CONSEQUENCE_SPLICE_DONOR_REGION_VARIANT: _Consequence.ValueType  # 19
    """Splice donor region variant."""
    CONSEQUENCE_SPLICE_POLYPYRIMIDINE_TRACT_VARIANT: _Consequence.ValueType  # 20
    """Splice polypyrimidine tract variant."""
    CONSEQUENCE_START_RETAINED_VARIANT: _Consequence.ValueType  # 21
    """Start retained variant."""
    CONSEQUENCE_STOP_RETAINED_VARIANT: _Consequence.ValueType  # 22
    """Stop retained variant."""
    CONSEQUENCE_SYNONYMOUS_VARIANT: _Consequence.ValueType  # 23
    """Synonymous variant.

    modifier
    """
    CONSEQUENCE_CODING_SEQUENCE_VARIANT: _Consequence.ValueType  # 24
    """Coding sequence variant."""
    CONSEQUENCE_MATURE_MIRNA_VARIANT: _Consequence.ValueType  # 25
    """Mature miRNA variant."""
    CONSEQUENCE_FIVE_PRIME_UTR_EXON_VARIANT: _Consequence.ValueType  # 26
    """5' UTR exon variant."""
    CONSEQUENCE_FIVE_PRIME_UTR_INTRON_VARIANT: _Consequence.ValueType  # 27
    """5' UTR intron variant."""
    CONSEQUENCE_THREE_PRIME_UTR_EXON_VARIANT: _Consequence.ValueType  # 28
    """3' UTR exon variant."""
    CONSEQUENCE_THREE_PRIME_UTR_INTRON_VARIANT: _Consequence.ValueType  # 29
    """3' UTR intron variant."""
    CONSEQUENCE_NON_CODING_TRANSCRIPT_EXON_VARIANT: _Consequence.ValueType  # 30
    """Non-coding transcript exon variant."""
    CONSEQUENCE_NON_CODING_TRANSCRIPT_INTRON_VARIANT: _Consequence.ValueType  # 31
    """Non-coding transcript intron variant."""
    CONSEQUENCE_UPSTREAM_GENE_VARIANT: _Consequence.ValueType  # 32
    """Upstream gene variant."""
    CONSEQUENCE_DOWNSTREAM_GENE_VARIANT: _Consequence.ValueType  # 33
    """Downstream gene variant."""
    CONSEQUENCE_TFBS_ABLATION: _Consequence.ValueType  # 34
    """TFBS ablation."""
    CONSEQUENCE_TFBS_AMPLIFICATION: _Consequence.ValueType  # 35
    """TFBS amplification."""
    CONSEQUENCE_TF_BINDING_SITE_VARIANT: _Consequence.ValueType  # 36
    """TFBS binding site variant."""
    CONSEQUENCE_REGULATORY_REGION_ABLATION: _Consequence.ValueType  # 37
    """Regulatory region ablation."""
    CONSEQUENCE_REGULATORY_REGION_AMPLIFICATION: _Consequence.ValueType  # 38
    """Regulatory region amplification."""
    CONSEQUENCE_REGULATORY_REGION_VARIANT: _Consequence.ValueType  # 39
    """Regulatory region variant."""
    CONSEQUENCE_INTERGENIC_VARIANT: _Consequence.ValueType  # 40
    """Intergenic variant."""
    CONSEQUENCE_INTRON_VARIANT: _Consequence.ValueType  # 41
    """Intron variant."""
    CONSEQUENCE_GENE_VARIANT: _Consequence.ValueType  # 42
    """Gene variant."""

class Consequence(_Consequence, metaclass=_ConsequenceEnumTypeWrapper):
    """The Variant consequence"""

CONSEQUENCE_UNSPECIFIED: Consequence.ValueType  # 0
"""Unknown consequence.

high impact
"""
CONSEQUENCE_TRANSCRIPT_ABLATION: Consequence.ValueType  # 1
"""Transcript ablation."""
CONSEQUENCE_EXON_LOSS_VARIANT: Consequence.ValueType  # 2
"""Exon loss variant."""
CONSEQUENCE_SPLICE_ACCEPTOR_VARIANT: Consequence.ValueType  # 3
"""Splice acceptor variant"""
CONSEQUENCE_SPLICE_DONOR_VARIANT: Consequence.ValueType  # 4
"""Splice donor variant"""
CONSEQUENCE_STOP_GAINED: Consequence.ValueType  # 5
"""Stop gained"""
CONSEQUENCE_FRAMESHIFT_VARIANT: Consequence.ValueType  # 6
"""Frameshift variant"""
CONSEQUENCE_STOP_LOST: Consequence.ValueType  # 7
"""Stop lost"""
CONSEQUENCE_START_LOST: Consequence.ValueType  # 8
"""Start lost"""
CONSEQUENCE_TRANSCRIPT_AMPLIFICATION: Consequence.ValueType  # 9
"""Transcript amplification"""
CONSEQUENCE_FEATURE_ELONGATION: Consequence.ValueType  # 10
"""Feature elongation."""
CONSEQUENCE_FEATURE_TRUNCATION: Consequence.ValueType  # 11
"""Feature truncation.

moderate impact
"""
CONSEQUENCE_DISRUPTIVE_INFRAME_INSERTION: Consequence.ValueType  # 12
"""Disruptive inframe insertion"""
CONSEQUENCE_DISRUPTIVE_INFRAME_DELETION: Consequence.ValueType  # 13
"""Disruptive inframe deletion"""
CONSEQUENCE_CONSERVATIVE_INFRAME_INSERTION: Consequence.ValueType  # 14
"""Conservative inframe insertion"""
CONSEQUENCE_CONSERVATIVE_INFRAME_DELETION: Consequence.ValueType  # 15
"""Conservative inframe deletion"""
CONSEQUENCE_MISSENSE_VARIANT: Consequence.ValueType  # 16
"""Missense variant

low impact
"""
CONSEQUENCE_SPLICE_DONOR_FIFTH_BASE_VARIANT: Consequence.ValueType  # 17
"""Splice donor 5th base variant."""
CONSEQUENCE_SPLICE_REGION_VARIANT: Consequence.ValueType  # 18
"""Splice region variant."""
CONSEQUENCE_SPLICE_DONOR_REGION_VARIANT: Consequence.ValueType  # 19
"""Splice donor region variant."""
CONSEQUENCE_SPLICE_POLYPYRIMIDINE_TRACT_VARIANT: Consequence.ValueType  # 20
"""Splice polypyrimidine tract variant."""
CONSEQUENCE_START_RETAINED_VARIANT: Consequence.ValueType  # 21
"""Start retained variant."""
CONSEQUENCE_STOP_RETAINED_VARIANT: Consequence.ValueType  # 22
"""Stop retained variant."""
CONSEQUENCE_SYNONYMOUS_VARIANT: Consequence.ValueType  # 23
"""Synonymous variant.

modifier
"""
CONSEQUENCE_CODING_SEQUENCE_VARIANT: Consequence.ValueType  # 24
"""Coding sequence variant."""
CONSEQUENCE_MATURE_MIRNA_VARIANT: Consequence.ValueType  # 25
"""Mature miRNA variant."""
CONSEQUENCE_FIVE_PRIME_UTR_EXON_VARIANT: Consequence.ValueType  # 26
"""5' UTR exon variant."""
CONSEQUENCE_FIVE_PRIME_UTR_INTRON_VARIANT: Consequence.ValueType  # 27
"""5' UTR intron variant."""
CONSEQUENCE_THREE_PRIME_UTR_EXON_VARIANT: Consequence.ValueType  # 28
"""3' UTR exon variant."""
CONSEQUENCE_THREE_PRIME_UTR_INTRON_VARIANT: Consequence.ValueType  # 29
"""3' UTR intron variant."""
CONSEQUENCE_NON_CODING_TRANSCRIPT_EXON_VARIANT: Consequence.ValueType  # 30
"""Non-coding transcript exon variant."""
CONSEQUENCE_NON_CODING_TRANSCRIPT_INTRON_VARIANT: Consequence.ValueType  # 31
"""Non-coding transcript intron variant."""
CONSEQUENCE_UPSTREAM_GENE_VARIANT: Consequence.ValueType  # 32
"""Upstream gene variant."""
CONSEQUENCE_DOWNSTREAM_GENE_VARIANT: Consequence.ValueType  # 33
"""Downstream gene variant."""
CONSEQUENCE_TFBS_ABLATION: Consequence.ValueType  # 34
"""TFBS ablation."""
CONSEQUENCE_TFBS_AMPLIFICATION: Consequence.ValueType  # 35
"""TFBS amplification."""
CONSEQUENCE_TF_BINDING_SITE_VARIANT: Consequence.ValueType  # 36
"""TFBS binding site variant."""
CONSEQUENCE_REGULATORY_REGION_ABLATION: Consequence.ValueType  # 37
"""Regulatory region ablation."""
CONSEQUENCE_REGULATORY_REGION_AMPLIFICATION: Consequence.ValueType  # 38
"""Regulatory region amplification."""
CONSEQUENCE_REGULATORY_REGION_VARIANT: Consequence.ValueType  # 39
"""Regulatory region variant."""
CONSEQUENCE_INTERGENIC_VARIANT: Consequence.ValueType  # 40
"""Intergenic variant."""
CONSEQUENCE_INTRON_VARIANT: Consequence.ValueType  # 41
"""Intron variant."""
CONSEQUENCE_GENE_VARIANT: Consequence.ValueType  # 42
"""Gene variant."""
global___Consequence = Consequence

class _ClinvarGermlineAggregateDescription:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ClinvarGermlineAggregateDescriptionEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _ClinvarGermlineAggregateDescription.ValueType
    ],
    builtins.type,
):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CLINVAR_GERMLINE_AGGREGATE_DESCRIPTION_UNSPECIFIED: (
        _ClinvarGermlineAggregateDescription.ValueType
    )  # 0
    """Unknown description."""
    CLINVAR_GERMLINE_AGGREGATE_DESCRIPTION_PATHOGENIC: (
        _ClinvarGermlineAggregateDescription.ValueType
    )  # 1
    """Pathogenic."""
    CLINVAR_GERMLINE_AGGREGATE_DESCRIPTION_LIKELY_PATHOGENIC: (
        _ClinvarGermlineAggregateDescription.ValueType
    )  # 2
    """Likely pathogenic."""
    CLINVAR_GERMLINE_AGGREGATE_DESCRIPTION_UNCERTAIN_SIGNIFICANCE: (
        _ClinvarGermlineAggregateDescription.ValueType
    )  # 3
    """Uncertain significance."""
    CLINVAR_GERMLINE_AGGREGATE_DESCRIPTION_LIKELY_BENIGN: (
        _ClinvarGermlineAggregateDescription.ValueType
    )  # 4
    """Likely benign."""
    CLINVAR_GERMLINE_AGGREGATE_DESCRIPTION_BENIGN: (
        _ClinvarGermlineAggregateDescription.ValueType
    )  # 5
    """Benign."""

class ClinvarGermlineAggregateDescription(
    _ClinvarGermlineAggregateDescription,
    metaclass=_ClinvarGermlineAggregateDescriptionEnumTypeWrapper,
):
    """Enumeration of canonical ClinVar germline aggregte descriptions."""

CLINVAR_GERMLINE_AGGREGATE_DESCRIPTION_UNSPECIFIED: (
    ClinvarGermlineAggregateDescription.ValueType
)  # 0
"""Unknown description."""
CLINVAR_GERMLINE_AGGREGATE_DESCRIPTION_PATHOGENIC: (
    ClinvarGermlineAggregateDescription.ValueType
)  # 1
"""Pathogenic."""
CLINVAR_GERMLINE_AGGREGATE_DESCRIPTION_LIKELY_PATHOGENIC: (
    ClinvarGermlineAggregateDescription.ValueType
)  # 2
"""Likely pathogenic."""
CLINVAR_GERMLINE_AGGREGATE_DESCRIPTION_UNCERTAIN_SIGNIFICANCE: (
    ClinvarGermlineAggregateDescription.ValueType
)  # 3
"""Uncertain significance."""
CLINVAR_GERMLINE_AGGREGATE_DESCRIPTION_LIKELY_BENIGN: (
    ClinvarGermlineAggregateDescription.ValueType
)  # 4
"""Likely benign."""
CLINVAR_GERMLINE_AGGREGATE_DESCRIPTION_BENIGN: ClinvarGermlineAggregateDescription.ValueType  # 5
"""Benign."""
global___ClinvarGermlineAggregateDescription = ClinvarGermlineAggregateDescription

class SampleGenotypeChoice(google.protobuf.message.Message):
    """Genotype choice for one sample."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SAMPLE_FIELD_NUMBER: builtins.int
    GENOTYPE_FIELD_NUMBER: builtins.int
    INCLUDE_NO_CALL_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    sample: builtins.str
    """Name of the sample filtered for"""
    genotype: global___GenotypeChoice.ValueType
    """Genotype choice"""
    include_no_call: builtins.bool
    """Whether to include no-call (will disable quality filter)."""
    enabled: builtins.bool
    """Whether to enable sample in filtration"""
    def __init__(
        self,
        *,
        sample: builtins.str = ...,
        genotype: global___GenotypeChoice.ValueType = ...,
        include_no_call: builtins.bool = ...,
        enabled: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "enabled",
            b"enabled",
            "genotype",
            b"genotype",
            "include_no_call",
            b"include_no_call",
            "sample",
            b"sample",
        ],
    ) -> None: ...

global___SampleGenotypeChoice = SampleGenotypeChoice

class QuerySettingsGenotype(google.protobuf.message.Message):
    """Genotype-related filter settings."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RECESSIVE_MODE_FIELD_NUMBER: builtins.int
    SAMPLE_GENOTYPES_FIELD_NUMBER: builtins.int
    recessive_mode: global___RecessiveMode.ValueType
    """Recessive mode"""
    @property
    def sample_genotypes(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___SampleGenotypeChoice
    ]:
        """List of sample genotype choices"""

    def __init__(
        self,
        *,
        recessive_mode: global___RecessiveMode.ValueType = ...,
        sample_genotypes: collections.abc.Iterable[global___SampleGenotypeChoice] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "recessive_mode", b"recessive_mode", "sample_genotypes", b"sample_genotypes"
        ],
    ) -> None: ...

global___QuerySettingsGenotype = QuerySettingsGenotype

class SampleQualitySettings(google.protobuf.message.Message):
    """Quality settings for one sample."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SAMPLE_FIELD_NUMBER: builtins.int
    FILTER_ACTIVE_FIELD_NUMBER: builtins.int
    MIN_DP_HET_FIELD_NUMBER: builtins.int
    MIN_DP_HOM_FIELD_NUMBER: builtins.int
    MIN_GQ_FIELD_NUMBER: builtins.int
    MIN_AB_FIELD_NUMBER: builtins.int
    MIN_AD_FIELD_NUMBER: builtins.int
    MAX_AD_FIELD_NUMBER: builtins.int
    sample: builtins.str
    """Name of the sample filtered for"""
    filter_active: builtins.bool
    """Drop whole variant on failure"""
    min_dp_het: builtins.int
    """Minimal coverage for het. sites"""
    min_dp_hom: builtins.int
    """Minimal coverage for hom. sites"""
    min_gq: builtins.int
    """Minimal genotype quality"""
    min_ab: builtins.float
    """Minimal allele balance for het. variants"""
    min_ad: builtins.int
    """Minimal number of alternate reads"""
    max_ad: builtins.int
    """Maximal number of alternate reads"""
    def __init__(
        self,
        *,
        sample: builtins.str = ...,
        filter_active: builtins.bool = ...,
        min_dp_het: builtins.int | None = ...,
        min_dp_hom: builtins.int | None = ...,
        min_gq: builtins.int | None = ...,
        min_ab: builtins.float | None = ...,
        min_ad: builtins.int | None = ...,
        max_ad: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_max_ad",
            b"_max_ad",
            "_min_ab",
            b"_min_ab",
            "_min_ad",
            b"_min_ad",
            "_min_dp_het",
            b"_min_dp_het",
            "_min_dp_hom",
            b"_min_dp_hom",
            "_min_gq",
            b"_min_gq",
            "max_ad",
            b"max_ad",
            "min_ab",
            b"min_ab",
            "min_ad",
            b"min_ad",
            "min_dp_het",
            b"min_dp_het",
            "min_dp_hom",
            b"min_dp_hom",
            "min_gq",
            b"min_gq",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_max_ad",
            b"_max_ad",
            "_min_ab",
            b"_min_ab",
            "_min_ad",
            b"_min_ad",
            "_min_dp_het",
            b"_min_dp_het",
            "_min_dp_hom",
            b"_min_dp_hom",
            "_min_gq",
            b"_min_gq",
            "filter_active",
            b"filter_active",
            "max_ad",
            b"max_ad",
            "min_ab",
            b"min_ab",
            "min_ad",
            b"min_ad",
            "min_dp_het",
            b"min_dp_het",
            "min_dp_hom",
            b"min_dp_hom",
            "min_gq",
            b"min_gq",
            "sample",
            b"sample",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_max_ad", b"_max_ad"]
    ) -> typing_extensions.Literal["max_ad"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_min_ab", b"_min_ab"]
    ) -> typing_extensions.Literal["min_ab"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_min_ad", b"_min_ad"]
    ) -> typing_extensions.Literal["min_ad"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_min_dp_het", b"_min_dp_het"]
    ) -> typing_extensions.Literal["min_dp_het"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_min_dp_hom", b"_min_dp_hom"]
    ) -> typing_extensions.Literal["min_dp_hom"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_min_gq", b"_min_gq"]
    ) -> typing_extensions.Literal["min_gq"] | None: ...

global___SampleQualitySettings = SampleQualitySettings

class QuerySettingsQuality(google.protobuf.message.Message):
    """Per-sample quality filter settings."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SAMPLE_QUALITIES_FIELD_NUMBER: builtins.int
    @property
    def sample_qualities(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___SampleQualitySettings
    ]:
        """List of sample quality settings"""

    def __init__(
        self,
        *,
        sample_qualities: collections.abc.Iterable[global___SampleQualitySettings] | None = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["sample_qualities", b"sample_qualities"]
    ) -> None: ...

global___QuerySettingsQuality = QuerySettingsQuality

class NuclearFrequencySettings(google.protobuf.message.Message):
    """gnomAD and In-house nuclear filter options."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENABLED_FIELD_NUMBER: builtins.int
    HETEROZYGOUS_FIELD_NUMBER: builtins.int
    HOMOZYGOUS_FIELD_NUMBER: builtins.int
    HEMIZYGOUS_FIELD_NUMBER: builtins.int
    FREQUENCY_FIELD_NUMBER: builtins.int
    enabled: builtins.bool
    """Whether to enable filtration by 1000 Genomes."""
    heterozygous: builtins.int
    """Maximal number of in-house heterozygous carriers"""
    homozygous: builtins.int
    """Maximal number of in-house homozygous carriers"""
    hemizygous: builtins.int
    """Maximal number of in-house hemizygous carriers"""
    frequency: builtins.float
    """Maximal allele frequency."""
    def __init__(
        self,
        *,
        enabled: builtins.bool = ...,
        heterozygous: builtins.int | None = ...,
        homozygous: builtins.int | None = ...,
        hemizygous: builtins.int | None = ...,
        frequency: builtins.float | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_frequency",
            b"_frequency",
            "_hemizygous",
            b"_hemizygous",
            "_heterozygous",
            b"_heterozygous",
            "_homozygous",
            b"_homozygous",
            "frequency",
            b"frequency",
            "hemizygous",
            b"hemizygous",
            "heterozygous",
            b"heterozygous",
            "homozygous",
            b"homozygous",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_frequency",
            b"_frequency",
            "_hemizygous",
            b"_hemizygous",
            "_heterozygous",
            b"_heterozygous",
            "_homozygous",
            b"_homozygous",
            "enabled",
            b"enabled",
            "frequency",
            b"frequency",
            "hemizygous",
            b"hemizygous",
            "heterozygous",
            b"heterozygous",
            "homozygous",
            b"homozygous",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_frequency", b"_frequency"]
    ) -> typing_extensions.Literal["frequency"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_hemizygous", b"_hemizygous"]
    ) -> typing_extensions.Literal["hemizygous"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_heterozygous", b"_heterozygous"]
    ) -> typing_extensions.Literal["heterozygous"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_homozygous", b"_homozygous"]
    ) -> typing_extensions.Literal["homozygous"] | None: ...

global___NuclearFrequencySettings = NuclearFrequencySettings

class GnomadMitochondrialFrequencySettings(google.protobuf.message.Message):
    """gnomAD mitochondrial filter options."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENABLED_FIELD_NUMBER: builtins.int
    HETEROPLASMIC_FIELD_NUMBER: builtins.int
    HOMOPLASMIC_FIELD_NUMBER: builtins.int
    FREQUENCY_FIELD_NUMBER: builtins.int
    enabled: builtins.bool
    """Whether to enable filtration by 1000 Genomes."""
    heteroplasmic: builtins.int
    """Maximal number of heteroplasmic carriers."""
    homoplasmic: builtins.int
    """Maximal number of homoplasmic carriers."""
    frequency: builtins.float
    """Maximal allele frequency."""
    def __init__(
        self,
        *,
        enabled: builtins.bool = ...,
        heteroplasmic: builtins.int | None = ...,
        homoplasmic: builtins.int | None = ...,
        frequency: builtins.float | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_frequency",
            b"_frequency",
            "_heteroplasmic",
            b"_heteroplasmic",
            "_homoplasmic",
            b"_homoplasmic",
            "frequency",
            b"frequency",
            "heteroplasmic",
            b"heteroplasmic",
            "homoplasmic",
            b"homoplasmic",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_frequency",
            b"_frequency",
            "_heteroplasmic",
            b"_heteroplasmic",
            "_homoplasmic",
            b"_homoplasmic",
            "enabled",
            b"enabled",
            "frequency",
            b"frequency",
            "heteroplasmic",
            b"heteroplasmic",
            "homoplasmic",
            b"homoplasmic",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_frequency", b"_frequency"]
    ) -> typing_extensions.Literal["frequency"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_heteroplasmic", b"_heteroplasmic"]
    ) -> typing_extensions.Literal["heteroplasmic"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_homoplasmic", b"_homoplasmic"]
    ) -> typing_extensions.Literal["homoplasmic"] | None: ...

global___GnomadMitochondrialFrequencySettings = GnomadMitochondrialFrequencySettings

class HelixMtDbFrequencySettings(google.protobuf.message.Message):
    """HelixMtDb filter options."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENABLED_FIELD_NUMBER: builtins.int
    HETEROPLASMIC_FIELD_NUMBER: builtins.int
    HOMOPLASMIC_FIELD_NUMBER: builtins.int
    FREQUENCY_FIELD_NUMBER: builtins.int
    enabled: builtins.bool
    """Whether to enable filtration by mtDB"""
    heteroplasmic: builtins.int
    """Maximal number of heterozygous carriers in HelixMtDb"""
    homoplasmic: builtins.int
    """Maximal number of homozygous carriers in HelixMtDb"""
    frequency: builtins.float
    """Maximal frequency in HelixMtDb"""
    def __init__(
        self,
        *,
        enabled: builtins.bool = ...,
        heteroplasmic: builtins.int | None = ...,
        homoplasmic: builtins.int | None = ...,
        frequency: builtins.float | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_frequency",
            b"_frequency",
            "_heteroplasmic",
            b"_heteroplasmic",
            "_homoplasmic",
            b"_homoplasmic",
            "frequency",
            b"frequency",
            "heteroplasmic",
            b"heteroplasmic",
            "homoplasmic",
            b"homoplasmic",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_frequency",
            b"_frequency",
            "_heteroplasmic",
            b"_heteroplasmic",
            "_homoplasmic",
            b"_homoplasmic",
            "enabled",
            b"enabled",
            "frequency",
            b"frequency",
            "heteroplasmic",
            b"heteroplasmic",
            "homoplasmic",
            b"homoplasmic",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_frequency", b"_frequency"]
    ) -> typing_extensions.Literal["frequency"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_heteroplasmic", b"_heteroplasmic"]
    ) -> typing_extensions.Literal["heteroplasmic"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_homoplasmic", b"_homoplasmic"]
    ) -> typing_extensions.Literal["homoplasmic"] | None: ...

global___HelixMtDbFrequencySettings = HelixMtDbFrequencySettings

class QuerySettingsFrequency(google.protobuf.message.Message):
    """Population frequency filter options."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GNOMAD_EXOMES_FIELD_NUMBER: builtins.int
    GNOMAD_GENOMES_FIELD_NUMBER: builtins.int
    GNOMAD_MTDNA_FIELD_NUMBER: builtins.int
    HELIXMTDB_FIELD_NUMBER: builtins.int
    INHOUSE_FIELD_NUMBER: builtins.int
    @property
    def gnomad_exomes(self) -> global___NuclearFrequencySettings:
        """gnomAD-exomes filter"""

    @property
    def gnomad_genomes(self) -> global___NuclearFrequencySettings:
        """gnomAD-genomes filter"""

    @property
    def gnomad_mtdna(self) -> global___GnomadMitochondrialFrequencySettings:
        """gnomAD-MT filter"""

    @property
    def helixmtdb(self) -> global___HelixMtDbFrequencySettings:
        """HelixMtDb filter"""

    @property
    def inhouse(self) -> global___NuclearFrequencySettings:
        """In-house filter"""

    def __init__(
        self,
        *,
        gnomad_exomes: global___NuclearFrequencySettings | None = ...,
        gnomad_genomes: global___NuclearFrequencySettings | None = ...,
        gnomad_mtdna: global___GnomadMitochondrialFrequencySettings | None = ...,
        helixmtdb: global___HelixMtDbFrequencySettings | None = ...,
        inhouse: global___NuclearFrequencySettings | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "gnomad_exomes",
            b"gnomad_exomes",
            "gnomad_genomes",
            b"gnomad_genomes",
            "gnomad_mtdna",
            b"gnomad_mtdna",
            "helixmtdb",
            b"helixmtdb",
            "inhouse",
            b"inhouse",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "gnomad_exomes",
            b"gnomad_exomes",
            "gnomad_genomes",
            b"gnomad_genomes",
            "gnomad_mtdna",
            b"gnomad_mtdna",
            "helixmtdb",
            b"helixmtdb",
            "inhouse",
            b"inhouse",
        ],
    ) -> None: ...

global___QuerySettingsFrequency = QuerySettingsFrequency

class QuerySettingsConsequence(google.protobuf.message.Message):
    """Consequence-related filter settings."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VARIANT_TYPES_FIELD_NUMBER: builtins.int
    TRANSCRIPT_TYPES_FIELD_NUMBER: builtins.int
    CONSEQUENCES_FIELD_NUMBER: builtins.int
    MAX_DIST_TO_EXON_FIELD_NUMBER: builtins.int
    @property
    def variant_types(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        global___VariantType.ValueType
    ]:
        """The variant types."""

    @property
    def transcript_types(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        global___TranscriptType.ValueType
    ]:
        """The transcript types."""

    @property
    def consequences(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        global___Consequence.ValueType
    ]:
        """List of consequences to consider"""
    max_dist_to_exon: builtins.int
    """Maximal distance to next exon, if any"""
    def __init__(
        self,
        *,
        variant_types: collections.abc.Iterable[global___VariantType.ValueType] | None = ...,
        transcript_types: collections.abc.Iterable[global___TranscriptType.ValueType] | None = ...,
        consequences: collections.abc.Iterable[global___Consequence.ValueType] | None = ...,
        max_dist_to_exon: builtins.int | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_max_dist_to_exon", b"_max_dist_to_exon", "max_dist_to_exon", b"max_dist_to_exon"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_max_dist_to_exon",
            b"_max_dist_to_exon",
            "consequences",
            b"consequences",
            "max_dist_to_exon",
            b"max_dist_to_exon",
            "transcript_types",
            b"transcript_types",
            "variant_types",
            b"variant_types",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_max_dist_to_exon", b"_max_dist_to_exon"]
    ) -> typing_extensions.Literal["max_dist_to_exon"] | None: ...

global___QuerySettingsConsequence = QuerySettingsConsequence

class Range(google.protobuf.message.Message):
    """An 1-based integer range."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    start: builtins.int
    """1-based start position."""
    end: builtins.int
    """1-based end position."""
    def __init__(
        self,
        *,
        start: builtins.int = ...,
        end: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["end", b"end", "start", b"start"]
    ) -> None: ...

global___Range = Range

class GenomicRegion(google.protobuf.message.Message):
    """Genomic region."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHROM_FIELD_NUMBER: builtins.int
    RANGE_FIELD_NUMBER: builtins.int
    chrom: builtins.str
    """Chromosome"""
    @property
    def range(self) -> global___Range:
        """Range of region"""

    def __init__(
        self,
        *,
        chrom: builtins.str = ...,
        range: global___Range | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["_range", b"_range", "range", b"range"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_range", b"_range", "chrom", b"chrom", "range", b"range"
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_range", b"_range"]
    ) -> typing_extensions.Literal["range"] | None: ...

global___GenomicRegion = GenomicRegion

class QuerySettingsLocus(google.protobuf.message.Message):
    """Locus-related filter settings."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GENES_FIELD_NUMBER: builtins.int
    GENOME_REGIONS_FIELD_NUMBER: builtins.int
    @property
    def genes(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of HGNC identifiers for filtration to genes.

        The server will expand gene panels to gene lists here.
        """

    @property
    def genome_regions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___GenomicRegion
    ]:
        """List of genomic regions to limit restrict the resulting variants to"""

    def __init__(
        self,
        *,
        genes: collections.abc.Iterable[builtins.str] | None = ...,
        genome_regions: collections.abc.Iterable[global___GenomicRegion] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "genes", b"genes", "genome_regions", b"genome_regions"
        ],
    ) -> None: ...

global___QuerySettingsLocus = QuerySettingsLocus

class QuerySettingsClinVar(google.protobuf.message.Message):
    """Clinvar-related query settings."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRESENCE_REQUIRED_FIELD_NUMBER: builtins.int
    GERMLINE_DESCRIPTIONS_FIELD_NUMBER: builtins.int
    ALLOW_CONFLICTING_INTERPRETATIONS_FIELD_NUMBER: builtins.int
    presence_required: builtins.bool
    """Wether to require ClinVar membership"""
    @property
    def germline_descriptions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        global___ClinvarGermlineAggregateDescription.ValueType
    ]:
        """The ClinVar germline aggregate description to include."""
    allow_conflicting_interpretations: builtins.bool
    """Whether to include conflicting interpretation ClinVar variants"""
    def __init__(
        self,
        *,
        presence_required: builtins.bool = ...,
        germline_descriptions: (
            collections.abc.Iterable[global___ClinvarGermlineAggregateDescription.ValueType] | None
        ) = ...,
        allow_conflicting_interpretations: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "allow_conflicting_interpretations",
            b"allow_conflicting_interpretations",
            "germline_descriptions",
            b"germline_descriptions",
            "presence_required",
            b"presence_required",
        ],
    ) -> None: ...

global___QuerySettingsClinVar = QuerySettingsClinVar

class CaseQuery(google.protobuf.message.Message):
    """Store query information for one case."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GENOTYPE_FIELD_NUMBER: builtins.int
    QUALITY_FIELD_NUMBER: builtins.int
    FREQUENCY_FIELD_NUMBER: builtins.int
    CONSEQUENCE_FIELD_NUMBER: builtins.int
    LOCUS_FIELD_NUMBER: builtins.int
    CLINVAR_FIELD_NUMBER: builtins.int
    @property
    def genotype(self) -> global___QuerySettingsGenotype:
        """Genotype query settings."""

    @property
    def quality(self) -> global___QuerySettingsQuality:
        """Quality query settings."""

    @property
    def frequency(self) -> global___QuerySettingsFrequency:
        """Frequency query settings."""

    @property
    def consequence(self) -> global___QuerySettingsConsequence:
        """Consequence query settings."""

    @property
    def locus(self) -> global___QuerySettingsLocus:
        """Locus query settings."""

    @property
    def clinvar(self) -> global___QuerySettingsClinVar:
        """ClinVar query settings."""

    def __init__(
        self,
        *,
        genotype: global___QuerySettingsGenotype | None = ...,
        quality: global___QuerySettingsQuality | None = ...,
        frequency: global___QuerySettingsFrequency | None = ...,
        consequence: global___QuerySettingsConsequence | None = ...,
        locus: global___QuerySettingsLocus | None = ...,
        clinvar: global___QuerySettingsClinVar | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "clinvar",
            b"clinvar",
            "consequence",
            b"consequence",
            "frequency",
            b"frequency",
            "genotype",
            b"genotype",
            "locus",
            b"locus",
            "quality",
            b"quality",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "clinvar",
            b"clinvar",
            "consequence",
            b"consequence",
            "frequency",
            b"frequency",
            "genotype",
            b"genotype",
            "locus",
            b"locus",
            "quality",
            b"quality",
        ],
    ) -> None: ...

global___CaseQuery = CaseQuery
