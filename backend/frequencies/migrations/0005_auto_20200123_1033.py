# -*- coding: utf-8 -*-
# Generated by Django 1.11.27 on 2020-01-23 10:33
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("frequencies", "0004_auto_20191107_1047"),
    ]

    operations = [
        migrations.CreateModel(
            name="HelixMtDb",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("release", models.CharField(max_length=32)),
                ("chromosome", models.CharField(max_length=32)),
                ("start", models.IntegerField()),
                ("end", models.IntegerField()),
                ("bin", models.IntegerField()),
                ("reference", models.CharField(max_length=512)),
                ("alternative", models.CharField(max_length=512)),
                ("ac", models.IntegerField()),
                ("an", models.IntegerField()),
                ("af", models.FloatField()),
                ("ac_het", models.IntegerField()),
                ("ac_het_mean", models.FloatField(null=True)),
                ("ac_het_stdev", models.FloatField(null=True)),
                ("ac_het_min", models.FloatField(null=True)),
                ("ac_het_max", models.FloatField(null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Mitomap",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("release", models.CharField(max_length=32)),
                ("chromosome", models.CharField(max_length=32)),
                ("start", models.IntegerField()),
                ("end", models.IntegerField()),
                ("bin", models.IntegerField()),
                ("reference", models.CharField(max_length=512)),
                ("alternative", models.CharField(max_length=512)),
                ("ac", models.IntegerField()),
                ("an", models.IntegerField()),
                ("af", models.FloatField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MtDb",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("release", models.CharField(max_length=32)),
                ("chromosome", models.CharField(max_length=32)),
                ("start", models.IntegerField()),
                ("end", models.IntegerField()),
                ("bin", models.IntegerField()),
                ("reference", models.CharField(max_length=512)),
                ("alternative", models.CharField(max_length=512)),
                ("ac", models.IntegerField()),
                ("an", models.IntegerField()),
                ("af", models.FloatField()),
                ("gap", models.IntegerField(null=True)),
                ("location", models.CharField(max_length=32, null=True)),
                ("codon", models.IntegerField(null=True)),
                ("position", models.IntegerField(null=True)),
                ("aa_change", models.CharField(max_length=32, null=True)),
                ("synonymous", models.NullBooleanField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterUniqueTogether(
            name="mtdb",
            unique_together=set([("release", "chromosome", "start", "reference", "alternative")]),
        ),
        migrations.AlterUniqueTogether(
            name="mitomap",
            unique_together=set([("release", "chromosome", "start", "reference", "alternative")]),
        ),
        migrations.AlterUniqueTogether(
            name="helixmtdb",
            unique_together=set([("release", "chromosome", "start", "reference", "alternative")]),
        ),
    ]
