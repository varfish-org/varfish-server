# -*- coding: utf-8 -*-
# Generated by Django 1.11.27 on 2020-01-29 16:00
from __future__ import unicode_literals

import uuid

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion

import variants.models


class Migration(migrations.Migration):
    dependencies = [
        ("variants", "0069_set_logged_table"),
        ("bgjobs", "0005_auto_20190128_1210"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("projectroles", "0013_update_appsetting_type"),
        ("importer", "0004_auto_20190415_0912"),
    ]

    operations = [
        migrations.CreateModel(
            name="BamQcFile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, help_text="DateTime of last modification"),
                ),
                ("file", models.FileField(help_text="The uploaded file.", upload_to="")),
                ("name", models.CharField(help_text="Original file name.", max_length=200)),
                (
                    "md5",
                    models.CharField(help_text="MD5 checksum of original file.", max_length=32),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CaseImportInfo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=512)),
                ("index", models.CharField(max_length=512)),
                ("pedigree", models.JSONField()),
                ("notes", models.TextField(blank=True, default="", null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("initial", "initial"),
                            ("active", "active"),
                            ("closed-unsolved", "closed as unsolved"),
                            ("closed-uncertain", "closed as uncertain"),
                            ("closed-solved", "closed as solved"),
                        ],
                        default="initial",
                        max_length=32,
                    ),
                ),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=32),
                        blank=True,
                        default=list,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, help_text="DateTime of last modification"),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("draft", "draft"),
                            ("submitted", "submitted"),
                            ("imported", "imported"),
                            ("evicted", "evicted"),
                        ],
                        default="draft",
                        help_text="State of the case import ",
                        max_length=32,
                    ),
                ),
                (
                    "case",
                    models.ForeignKey(
                        help_text="The case that this is for, once created.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="import_infos",
                        related_query_name="import_infos",
                        to="variants.Case",
                        unique=True,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="User that created the import info.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        help_text="Project in which this objects belongs",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projectroles.Project",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DatabaseInfoFile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, help_text="DateTime of last modification"),
                ),
                ("file", models.FileField(help_text="The uploaded file.", upload_to="")),
                ("name", models.CharField(help_text="Original file name.", max_length=200)),
                (
                    "md5",
                    models.CharField(help_text="MD5 checksum of original file.", max_length=32),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EffectFile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, help_text="DateTime of last modification"),
                ),
                ("file", models.FileField(help_text="The uploaded file.", upload_to="")),
                ("name", models.CharField(help_text="Original file name.", max_length=200)),
                (
                    "md5",
                    models.CharField(help_text="MD5 checksum of original file.", max_length=32),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GenotypeFile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, help_text="DateTime of last modification"),
                ),
                ("file", models.FileField(help_text="The uploaded file.", upload_to="")),
                ("name", models.CharField(help_text="Original file name.", max_length=200)),
                (
                    "md5",
                    models.CharField(help_text="MD5 checksum of original file.", max_length=32),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ImportCaseBgJob",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, help_text="DateTime of modification"),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Job UUID", unique=True),
                ),
                (
                    "bg_job",
                    models.ForeignKey(
                        help_text="Background job for state etc.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="importer_importcasebgjob_related",
                        to="bgjobs.BackgroundJob",
                    ),
                ),
                (
                    "import_info",
                    models.ForeignKey(
                        help_text="Case import information to use.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="importer.CaseImportInfo",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        help_text="Project that is imported to",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projectroles.Project",
                    ),
                ),
            ],
            bases=(variants.models.JobModelMessageMixin, models.Model),
        ),
        migrations.CreateModel(
            name="VariantSetImportInfo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sodar_uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, help_text="DateTime of last modification"),
                ),
                (
                    "genomebuild",
                    models.CharField(
                        choices=[("GRCh37", "GRCh37")],
                        default="GRCh37",
                        help_text="Genome build used in the variant set.",
                        max_length=32,
                    ),
                ),
                (
                    "variant_type",
                    models.CharField(
                        choices=[("SMALL", "variants"), ("STRUCTURAL", "svs")],
                        help_text="The type of variant set that is referenced.",
                        max_length=32,
                    ),
                ),
                (
                    "case_import_info",
                    models.ForeignKey(
                        help_text="The import info for the case.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="importer.CaseImportInfo",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="genotypefile",
            name="variant_set_import_info",
            field=models.ForeignKey(
                help_text="The variant set info that this is for.",
                on_delete=django.db.models.deletion.CASCADE,
                to="importer.VariantSetImportInfo",
            ),
        ),
        migrations.AddField(
            model_name="effectfile",
            name="variant_set_import_info",
            field=models.ForeignKey(
                help_text="The variant set info that this is for.",
                on_delete=django.db.models.deletion.CASCADE,
                to="importer.VariantSetImportInfo",
            ),
        ),
        migrations.AddField(
            model_name="databaseinfofile",
            name="variant_set_import_info",
            field=models.ForeignKey(
                help_text="The variant set info that this is for.",
                on_delete=django.db.models.deletion.CASCADE,
                to="importer.VariantSetImportInfo",
            ),
        ),
        migrations.AddField(
            model_name="bamqcfile",
            name="case_import_info",
            field=models.ForeignKey(
                help_text="The case import info that this is for.",
                on_delete=django.db.models.deletion.CASCADE,
                to="importer.CaseImportInfo",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="variantsetimportinfo",
            unique_together=set([("case_import_info", "variant_type")]),
        ),
        migrations.AlterUniqueTogether(
            name="genotypefile",
            unique_together=set([("variant_set_import_info", "md5")]),
        ),
        migrations.AlterUniqueTogether(
            name="effectfile",
            unique_together=set([("variant_set_import_info", "md5")]),
        ),
        migrations.AlterUniqueTogether(
            name="databaseinfofile",
            unique_together=set([("variant_set_import_info", "md5")]),
        ),
        migrations.AlterUniqueTogether(
            name="caseimportinfo",
            unique_together=set([("project", "name")]),
        ),
        migrations.AlterUniqueTogether(
            name="bamqcfile",
            unique_together=set([("case_import_info", "md5")]),
        ),
    ]
